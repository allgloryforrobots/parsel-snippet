{"mappings":"ACAA,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,OAAO,SAAS,UAAU,OAAO,OAAO,OAAO,OAAA,CAAQ,IAAI,YAAY,OAAO,QAAQ,OAAO,GAAA,CAAI,OAAO,EAAE,CAAC,GAAG,UAAU,OAAO,QAAQ,QAAQ,YAAA,CAAa,IAAI,EAAE,YAAA,CAAa,GAAG,EAAE,aAAa,OAAO,KAAK,KAAK,IAAI,CAAE,IAAI,AAAC,CAAA,KAAK,aAAa,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,IAAI,KAAK,EAAE,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,EAAE,CAAA,CAAE,EAAE,IAAI,OAAO,cAAA,CAAe,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,AAAA,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,OAAO,SAAA,CAAU,cAAA,CAAe,IAAA,CAAK,EAAE,GAAG,EAAE,AAAA,IAAI,aAAa,OAAO,QAAQ,OAAO,WAAA,EAAa,OAAO,cAAA,CAAe,EAAE,OAAO,WAAA,CAAY,CAAC,MAAM,QAAQ,GAAG,OAAO,cAAA,CAAe,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,IAAI,MAAM,aAAa,OAAO,UAAU,iEAAiE,IAAA,CAAK,UAAU,SAAA,GAAY,OAAO,UAAA,CAAW,IAAI,IAAI,CAAC,EAAE,CAAA,CAAE,GAAG,EAAE,CAAA,CAAE,EAAE,CAAC,QAAQ,IAAI,CAAC,GAAG,OAAO,SAAA,CAAU,KAAA,CAAM,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK,GAAA,CAAI,KAAK,GAAA,CAAI,IAAI,CAAC,GAAG,EAAE,EAAkT,IAAM,EAAE,UAAU,OAAO,OAAW,EAAE,GAAG,OAAO,KAAA,EAAO,CAAC,CAAE,CAAA,GAAG,CAAC,OAAO,KAAA,EAAQ,CAAA,OAAO,KAAA,CAAM,CAAC,CAAA,EAAG,IAAM,EAAE,GAAG,OAAO,KAAA,EAAO,CAAC,CAAE,CAAA,EAAE,QAAA,CAAS,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,AAAA,GAAG,IAAI,EAAE,GAAG,EAAE,OAAA,CAAQ,SAAS,IAAM,EAAE,WAAW,OAAO,MAAM,SAAA,CAAU,OAAA,CAAQ,IAAA,CAAK,UAAU,WAAW,QAAQ,KAAA,CAAM,KAAA,CAAM,IAAI,CAAC,UAAU,CAAE,CAAA,EAAE,SAAA,CAAU,MAAM,YAAY,EAAE,CAAC,CAAC,CAAC,KAAk6B,EAAj6B,GAAG,CAAC,EAAE,MAAM,CAAC,CAAE,CAAA,EAAE,OAAA,CAAQ,IAAI,CAAC,IAAI,CAAC,sBAAA,CAAuB,IAAI,CAAC,sBAAA,CAAuB,IAAA,CAAK,IAAI,EAAE,IAAI,CAAC,kBAAA,CAAmB,IAAI,CAAC,kBAAA,CAAmB,IAAA,CAAK,IAAI,EAAE,IAAI,CAAC,iBAAA,CAAkB,IAAI,CAAC,iBAAA,CAAkB,IAAA,CAAK,IAAI,EAAE,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,MAAA,CAAO,IAAA,CAAK,IAAI,EAAE,IAAI,CAAC,aAAA,CAAc,IAAI,CAAC,aAAA,CAAc,IAAA,CAAK,IAAI,EAAE,IAAI,CAAC,OAAA,CAAQ,IAAI,CAAC,OAAA,CAAQ,IAAA,CAAK,IAAI,EAAE,IAAM,EAAE,YAAY,OAAO,IAAI,CAAC,iBAAA,CAAkB,IAAI,CAAC,iBAAA,GAAoB,IAAI,CAAC,cAAhF,CAA+F,GAAG,IAAI,CAAC,OAAA,CAAQ,OAAO,MAAA,CAAO,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,EAAE,aAAa,CAAC,EAAE,UAAU,IAAI,SAAS,IAAI,MAAM,EAAE,YAAY,CAAC,EAAE,GAAI,AAAA,CAAA,aAAa,aAAa,UAAU,OAAO,CAAA,GAAK,CAAA,EAAE,CAAC,GAAG,CAAC,CAAA,EAAG,OAAO,MAAA,CAAO,IAAI,CAAC,OAAA,CAAQ,GAAG,IAAI,CAAC,OAAA,CAAQ,KAAA,EAAQ,CAAA,EAAE,IAAI,CAAC,OAAA,CAAQ,KAAI,AAAJ,EAAO,IAAI,CAAC,EAAA,CAAG,IAAI,CAAC,OAAA,CAAQ,EAAA,CAAG,MAAM,IAAI,CAAC,EAAA,CAAG,EAAE,mCAAmC,GAAG,CAAE,CAAA,IAAI,CAAC,OAAA,CAAQ,EAAA,YAAc,WAAA,EAAa,CAAC,IAAM,EAAE,IAAI,CAAC,EAAb,CAAgB,GAAG,IAAI,CAAC,EAAA,CAAQ,SAAS,aAAA,CAAX,GAA6B,CAAC,IAAI,CAAC,EAAA,CAAG,OAAO,KAAK,EAAE,sBAAsB,EAAE,CAAS,IAAI,CAAC,SAAA,GAAY,IAAI,CAAC,SAAA,GAAY,IAAI,CAAC,OAAvC,GAAiD,GAAG,CAAC,IAAI,CAAC,IAAL,EAAW,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,aAAa,GAAG,IAAI,CAAC,QAAA,EAAU,IAAI,CAAC,QAAA,CAAS,UAAA,EAAY,IAAI,CAAC,EAAA,CAAG,WAAA,CAAY,IAAI,CAAC,QAAA,CAAS,UAAA,EAAY,IAAK,CAAA,IAAI,CAAC,OAAA,CAAQ,eAAA,EAAkB,CAAA,QAAQ,GAAA,CAAI,2CAA2C,IAAI,CAAC,EAAA,CAAG,KAAA,CAAM,UAAA,CAA2C,UAAU,MAAzC,CAAA,EAAE,IAAI,CAAC,OAAA,CAAQ,eAAA,AAAA,EAAmC,IAAK,AAAA,CAAA,QAAQ,EAAE,QAAA,CAAS,GAAA,EAAK,KAAA,CAAM,IAAI,CAAA,CAAC,CAAG,CAAC,IAAI,CAAC,SAAA,GAAY,IAAI,CAAC,MAAA,GAAS,IAAI,CAAC,aAApC,GAAoD,IAAM,EAAE,OAAO,gBAAf,AAAgC,CAAA,EAAE,SAAS,IAAI,CAAC,MAAA,EAAQ,OAAO,qBAAA,CAAsB,IAAI,CAAC,MAAA,EAAQ,IAAI,CAAC,OAAA,CAAQ,aAAA,EAAgB,CAAA,EAAE,SAAS,IAAI,CAAC,sBAAA,EAAwB,EAAE,YAAY,IAAI,CAAC,sBAAA,CAAA,EAAyB,IAAI,CAAC,OAAA,CAAQ,aAAA,EAAgB,CAAA,EAAE,aAAa,IAAI,CAAC,kBAAA,EAAoB,EAAE,YAAY,IAAI,CAAC,kBAAA,CAAA,EAAqB,IAAI,CAAC,OAAA,CAAQ,YAAA,EAAc,EAAE,oBAAoB,IAAI,CAAC,iBAAtV,CAAwW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,MAAA,CAAO,IAAI,CAAC,OAAA,CAAQ,GAAG,IAAI,CAAC,gBAAnC,EAAqD,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,GAAG,aAAa,OAAO,MAAM,KAAK,SAAA,CAAU,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAA,CAAG,UAAA,CAAW,MAAA,CAAO,IAAI,CAAC,IAAM,EAAE,IAAI,CAAC,EAAA,CAAG,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,QAAA,GAAW,KAAK,SAAA,CAAU,CAAC,IAAM,EAAE,SAAS,aAAA,CAAc,OAAQ,CAAA,EAAE,WAAA,CAAY,EAAE,WAAA,CAAY,EAAE,aAAA,CAAc,YAAA,CAAa,EAAE,GAAG,EAAE,MAAhE,EAAwE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAA,CAAG,QAAA,CAAS,MAAA,CAAO,IAAI,EAAE,IAAI,CAAC,EAAA,CAAG,QAAQ,CAAC,EAAE,CAAC,WAAW,iBAAiB,GAAG,QAAA,EAAW,CAAA,EAAE,KAAA,CAAM,QAAA,CAAS,UAAA,EAAY,SAAS,iBAAiB,GAAG,MAAA,EAAS,CAAA,EAAE,KAAA,CAAM,MAAA,CAAO,CAAA,CAAG,CAAA,WAAW,iBAAiB,IAAI,CAAC,EAAA,EAAI,QAAA,EAAW,CAAA,IAAI,CAAC,EAAA,CAAG,KAAA,CAAM,QAAA,CAAS,UAAA,CAAW,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,MAAA,CAAO,EAAE,KAAA,CAAM,CAAC,SAAS,WAAW,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,OAAO,MAAA,CAAO,EAAE,KAAA,CAAM,GAAG,EAAE,SAAA,CAAU,GAAA,CAAI,eAAe,CAAC,WAAW,CAAC,EAAE,aAAA,CAAe,CAAA,IAAI,CAAC,QAAA,CAAS,IAAI,EAAE,aAAA,CAAc,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,EAAA,CAAG,WAAA,CAAY,IAAI,CAAC,QAAA,CAAS,UAAA,EAAY,IAAI,CAAC,iBAAA,CAAkB,IAAI,CAAC,QAAA,CAAS,UAAA,EAAY,MAAM,IAAI,CAAC,OAAA,CAAQ,eAAA,GAAmB,CAAA,IAAI,CAAC,OAAA,CAAQ,eAAA,CAAgB,CAAA,EAAG,IAAI,CAAC,KAAA,CAAM,IAAI,EAAE,KAAI,AAAJ,EAAO,QAAQ,IAAA,CAAK,qCAAqC,CAAC,kBAAkB,CAAC,OAAO,IAAI,CAAC,QAAA,CAAS,IAAI,CAAC,QAAA,CAAS,UAAA,CAAW,IAAI,CAAC,UAAA,CAAW,IAAI,CAAC,UAAA,CAAW,MAAA,CAAO,KAAK,CAAC,CAAC,eAAe,CAAC,IAAM,EAAE,IAAI,CAAC,gBAAb,GAAgC,MAAM,CAAC,CAAC,GAAG,EAAE,qBAAb,EAAoC,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAM,EAAE,IAAI,CAAC,aAAb,GAA6B,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,IAAM,EAAE,EAAE,OAAA,CAAQ,EAAE,IAAA,CAAK,EAAE,EAAE,OAAA,CAAQ,EAAE,GAAvC,AAA2C,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,KAAA,EAAO,GAAG,EAAE,MAAA,EAAS,CAAA,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,OAAA,CAAQ,SAAA,EAAW,IAAI,CAAC,gBAAA,CAAiB,EAAE,EAAA,CAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAM,EAAE,IAAI,CAAC,aAAb,GAA6B,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,IAAI,EAAE,OAAA,CAAQ,MAAA,CAAO,CAAC,IAAM,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,OAAA,CAAQ,EAAE,IAAA,CAAK,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,OAAA,CAAQ,EAAE,GAA7D,AAAiE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,KAAA,EAAO,GAAG,EAAE,MAAA,EAAS,CAAA,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,OAAA,CAAQ,SAAA,EAAW,IAAI,CAAC,gBAAA,CAAiB,EAAE,EAAA,CAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAM,EAAE,IAAI,CAAC,aAAb,GAA6B,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,IAAM,EAAE,KAAK,KAAA,CAAM,EAAE,EAAE,KAAA,EAAO,EAAE,IAAA,CAAK,EAAE,KAAK,KAAA,CAAM,EAAE,EAAE,IAAA,EAAM,EAAE,GAA9D,AAAkE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,KAAA,EAAO,GAAG,EAAE,MAAA,EAAS,CAAA,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,OAAA,CAAQ,SAAA,EAAW,IAAI,CAAC,gBAAA,CAAiB,EAAE,EAAA,CAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,IAAI,GAAI,CAAA,IAAI,CAAC,OAAA,CAAQ,SAAA,CAAW,CAAA,EAAE,IAAI,CAAC,UAAA,CAAW,EAAE,IAAI,CAAC,UAAS,AAAT,EAAa,CAAA,EAAE,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,MAAK,AAAL,CAAK,EAAI,IAAI,CAAC,QAAA,EAAW,CAAA,IAAI,CAAC,QAAA,CAAS,MAAA,CAAO,KAAA,CAAM,CAAA,CAAE,EAAE,IAAI,CAAC,KAAA,CAAM,IAAI,CAAC,QAAA,CAAS,MAAA,CAAO,KAAA,CAAM,CAAA,CAAE,EAAE,IAAI,CAAC,KAAI,AAAJ,EAAO,IAAM,EAAE,EAAE,IAAI,CAAC,KAAA,CAAM,EAAE,EAAE,IAAI,CAAC,MAA9B,AAAqC,CAAA,YAAY,OAAO,IAAI,CAAC,WAAA,EAAa,IAAI,CAAC,WAAA,CAAY,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAA,EAAQ,CAAA,IAAI,CAAC,KAAA,CAAM,CAAA,EAAG,KAAK,IAAI,CAAC,OAAA,CAAQ,WAAA,CAAY,IAAI,CAAC,KAAA,CAAM,IAAI,CAAC,OAAA,CAAQ,WAAA,CAAY,IAAI,CAAC,OAAA,CAAQ,KAAA,EAAQ,CAAA,IAAI,CAAC,KAAA,CAAM,IAAI,CAAC,OAAA,CAAQ,KAAI,AAAJ,EAAO,IAAI,CAAC,KAAA,CAAM,KAAK,GAAA,CAAI,IAAI,CAAC,EAAA,CAAG,WAAA,CAAY,IAAI,CAAC,OAAA,CAAQ,QAAA,EAAU,IAAI,CAAC,MAAA,CAAO,KAAK,GAAA,CAAI,IAAI,CAAC,EAAA,CAAG,YAAA,CAAa,IAAI,CAAC,OAAA,CAAQ,SAAvQ,CAAiR,CAAC,WAAW,CAAE,AAAA,CAAA,AAAC,IAAI,CAAC,MAAA,EAAS,IAAI,CAAC,MAAA,AAAA,GAAQ,CAAA,IAAI,CAAC,MAAA,GAAS,IAAI,CAAC,OAAA,CAAQ,QAAA,CAAS,GAAG,IAAI,CAAC,MAAA,GAAS,IAAI,CAAC,OAAA,CAAQ,SAAA,CAAU,CAAA,GAAK,CAAA,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,KAAA,CAAM,EAAE,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,MAAA,CAAO,EAAE,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,MAAA,CAAA,CAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAA,GAAU,IAAI,CAAC,MAAA,EAAS,CAAA,IAAI,CAAC,MAAA,CAAO,MAAA,CAAO,IAAI,CAAC,KAAA,CAAM,IAAI,CAAC,MAAA,CAAO,YAAY,OAAO,IAAI,CAAC,MAAA,CAAO,sBAAA,EAAwB,IAAI,CAAC,MAAA,CAAO,sBAAA,EAAA,EAA0B,IAAI,CAAC,QAAA,EAAW,CAAA,IAAI,CAAC,QAAA,CAAS,OAAA,CAAQ,IAAI,CAAC,KAAA,CAAM,IAAI,CAAC,MAAA,EAAQ,IAAI,CAAC,QAAA,CAAS,aAAA,CAAc,OAAO,gBAAA,CAAiB,IAAI,CAAC,KAAA,CAAA,EAAQ,YAAY,OAAO,IAAI,CAAC,QAAA,EAAU,IAAI,CAAC,QAA1U,EAAoV,CAAC,YAAY,CAAC,IAAM,EAAE,IAAI,CAAC,EAAA,CAAG,YAAA,CAAa,EAAE,IAAI,CAAC,EAAA,CAAG,qBAAA,GAAwB,EAAE,OAAO,WAAA,EAAa,AAAC,CAAA,SAAS,eAAA,EAAiB,SAAS,IAAA,CAAK,UAAA,EAAY,SAAS,IAAG,AAAH,EAAM,SAAA,CAAU,EAAE,EAAE,GAAA,CAAI,EAAE,OAAO,EAAE,OAAO,WAAA,EAAa,GAAG,GAAG,EAAE,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA,EAAI,CAAA,IAAI,CAAC,CAAA,CAAE,CAAA,EAAG,IAAI,CAAC,EAAA,EAAK,CAAA,IAAI,CAAC,EAAA,CAAG,CAAA,EAAG,IAAM,EAAE,YAAY,GAApB,GAA0B,GAAG,IAAI,CAAC,OAAA,CAAQ,CAAC,IAAI,EAAG,AAAA,CAAA,EAAE,IAAI,CAAC,OAAM,AAAN,EAAU,CAAA,IAAI,EAAA,CAAI,CAAA,EAAE,KAAK,GAAA,CAAI,GAAG,KAAK,GAAA,CAAI,EAAE,IAAI,IAAI,CAAC,CAAA,EAAG,EAAE,IAAI,CAAC,EAAA,EAAK,AAAA,CAAA,IAAI,CAAC,OAAA,CAAQ,KAAA,EAAO,CAAA,EAAG,EAAE,IAAI,CAAC,QAAA,EAAW,CAAA,IAAI,CAAC,QAAA,CAAS,KAAA,CAAM,KAAA,CAAM,QAAQ,IAAI,CAAC,EAAC,AAAD,CAAG,CAAC,OAAO,IAAI,CAAC,OAAA,CAAQ,EAAE,IAAI,CAAC,OAAA,CAAQ,SAAA,EAAY,CAAA,IAAI,CAAC,UAAA,CAAW,IAAI,CAAC,UAAA,EAAY,IAAI,CAAC,MAAA,EAAQ,EAAE,IAAI,CAAC,UAAA,CAAW,IAAI,CAAC,UAAA,EAAY,IAAI,CAAC,MAAA,EAAQ,EAAE,KAAK,GAAA,CAAI,IAAI,CAAC,UAAA,CAAW,IAAI,CAAC,MAAA,EAAQ,KAAK,GAAA,CAAI,IAAI,CAAC,UAAA,CAAW,IAAI,CAAC,MAAA,EAAQ,IAAK,CAAA,IAAI,CAAC,UAAA,EAAY,IAAK,CAAA,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,UAAS,AAAT,EAAY,IAAI,CAAC,UAAA,EAAY,IAAK,CAAA,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,UAAS,AAAT,EAAY,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,UAAA,CAAW,IAAI,CAAC,UAAA,CAAA,CAAU,EAAI,AAAC,CAAA,IAAI,CAAC,UAAA,IAAc,IAAI,CAAC,OAAA,CAAQ,YAAW,AAAX,GAAgB,CAAA,YAAY,OAAO,IAAI,CAAC,QAAA,EAAU,IAAI,CAAC,QAAA,GAAW,IAAI,CAAC,KAAA,EAAO,IAAI,CAAC,MAAA,EAAS,CAAA,IAAI,CAAC,QAAA,CAAS,MAAA,CAAO,IAAI,CAAC,KAAA,CAAM,IAAI,CAAC,MAAA,EAAQ,IAAI,CAAC,QAAA,CAAS,aAAA,CAAc,IAAI,CAAC,OAAA,CAAQ,eAAA,CAAgB,IAAI,CAAC,OAAA,CAAQ,eAAA,CAAA,EAAkB,IAAI,CAAC,GAAA,EAAK,IAAI,CAAC,GAAA,CAAI,MAAA,EAAQ,IAAI,CAAC,GAAA,CAAI,MAAA,GAAS,YAAY,OAAO,IAAI,CAAC,WAAA,EAAa,IAAI,CAAC,WAAA,EAAA,EAAe,IAAI,CAAC,GAAA,CAAI,OAAO,qBAAA,CAAsB,IAAI,CAAC,aAAlxB,CAAgyB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAA,CAAM,KAAK,IAAI,CAAC,KAAA,CAAM,QAAA,CAAS,MAAA,EAAQ,IAAI,CAAC,KAAA,CAAM,MAAA,CAAO,IAAI,CAAC,KAAA,CAAM,QAAQ,CAAC,EAAE,CAAE,CAAA,YAAY,OAAO,IAAI,CAAC,SAAA,EAAW,IAAI,CAAC,SAAA,GAAY,IAAI,CAAC,IAAzD,EAA+D,CAAC,MAAM,CAAC,YAAY,OAAO,IAAI,CAAC,MAAA,EAAQ,IAAI,CAAC,MAArC,EAA6C,CAAC,SAAS,CAAC,YAAY,OAAO,IAAI,CAAC,SAAA,EAAW,IAAI,CAAC,SAAxC,GAAoD,IAAM,EAAE,OAAO,mBAAf,AAAmC,CAAA,EAAE,aAAa,IAAI,CAAC,kBAAA,EAAoB,EAAE,YAAY,IAAI,CAAC,kBAAA,EAAoB,EAAE,SAAS,IAAI,CAAC,sBAAA,EAAwB,EAAE,YAAY,IAAI,CAAC,sBAAA,EAAwB,EAAE,oBAAoB,IAAI,CAAC,iBAAA,EAAmB,EAAE,SAAS,IAAI,CAAC,MAAA,EAAQ,OAAO,oBAAA,CAAqB,IAAI,CAAC,GAAzQ,EAA8Q,IAAM,EAAE,IAAI,CAAC,KAAb,AAAmB,CAAA,GAAG,EAAE,QAAA,EAAU,AAA54O,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,QAAA,EAAU,EAAE,QAAA,CAAS,MAAA,CAAO,GAAG,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,MAAA,CAAO,EAAE,QAAQ,CAAC,EAAE,CAAE,CAAA,EAAE,QAAA,EAAU,EAAE,QAAA,CAAS,OAAA,GAAU,EAAE,QAAA,EAAW,CAAA,OAAO,IAAA,CAAK,EAAE,QAAA,EAAU,OAAA,CAAS,AAAA,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAE,YAAY,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,OAAA,EAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,OAA7F,EAAsG,GAAI,EAAE,QAAA,CAAS,OAAA,EAAA,CAAU,EAA+lO,GAAG,IAAI,CAAC,QAAA,EAAW,CAAA,IAAI,CAAC,QAAA,CAAS,UAAA,EAAY,IAAI,CAAC,EAAA,CAAG,WAAA,CAAY,IAAI,CAAC,QAAA,CAAS,UAAA,EAAY,IAAI,CAAC,QAAA,CAAS,KAAK,IAAI,CAAC,KAAA,CAAM,IAAA,EAAM,EAAE,OAAA,GAAU,IAAI,EAAG,CAAA,EAAE,OAAA,CAAQ,IAAA,CAAK,CAAC,EAAE,IAAM,EAAE,EAAE,SAAV,CAAgE,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,AAAxM,UAAU,OAAO,QAAQ,OAAO,KAAA,EAA2K,CAAC,EAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAI,CAAA,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA,EAAG,IAAI,CAAC,SAAA,CAAU,EAAE,CAAC,IAAI,CAAC,mBAAA,CAAoB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,CAAE,CAAA,EAAE,QAAA,CAAS,CAAA,CAAE,EAAE,IAAI,EAAE,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC,EAAE,EAAE,EAAE,iKAAmK,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,GAAG,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,OAAA,CAAQ,UAAA,CAAW,SAAS,EAAE,OAAA,CAAQ,GAAG,KAAK,EAAE,OAAA,CAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,aAAa,gEAAkE,eAAe,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE,GAAA,CAAI,GAAG,IAAI,CAAC,WAAA,CAAY,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,IAAI,AAAA,EAAE,IAAI,CAAC,WAAA,CAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,EAAE,oBAAoB,EAAE,SAAS,IAAI,CAAC,oBAAA,CAAqB,GAAG,aAAa,KAAK,cAAc,EAAE,CAAC,MAAM,KAAK,MAAM,KAAK,UAAU,EAAE,UAAU,CAAC,EAAE,OAAO,IAAI,CAAC,SAAA,CAAU,IAAA,CAAK,GAAG,CAAC,EAAE,IAAI,CAAC,uBAAA,CAAwB,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,YAAA,CAAa,CAAC,EAAE,IAAI,CAAC,IAAA,CAAK,WAAW,GAAG,CAAC,EAAE,YAAA,CAAa,QAAA,EAAU,CAAC,EAAE,UAAA,CAAW,GAAA,CAAI,qBAAqB,MAAM,mDAAmD,GAAG,IAAI,EAAE,YAAA,CAAa,iBAAA,CAAkB,MAAM,yCAAyC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,AAAC,CAAA,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAA,CAAmB,EAAE,EAAE,EAAE,KAAA,CAAM,EAAE,KAAA,CAAM,EAAE,SAAA,CAAU,EAAE,SAAA,EAAW,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAA,CAAmB,EAAE,EAAE,EAAE,KAAA,CAAM,EAAE,KAAA,CAAM,EAAE,SAAA,CAAU,EAAE,SAAA,EAAW,IAAI,CAAC,aAAA,CAAc,EAAE,mBAAA,CAAoB,EAAE,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,aAAA,CAAc,EAAE,mBAAA,CAAoB,EAAE,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,QAAA,CAAS,EAAE,EAAE,QAArB,CAA8B,GAAG,OAAO,EAAE,YAAA,CAAa,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,YAAA,CAAa,MAAA,CAAO,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,GAAG,EAAE,IAAA,GAAO,EAAE,IAAA,CAAK,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,IAAI,GAAG,EAAE,IAAA,GAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAA,CAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,2CAA2C,EAAE,IAAA,CAAK,gBAAgB,EAAE,IAAhF,AAAoF,CAAC,CAAC,CAAC,EAAE,IAAA,CAAK,CAAC,CAAC,MAAM,IAAI,EAAE,EAAE,cAAA,CAAe,uBAAuB,EAAE,IAAA,CAAK,MAAM,EAAE,cAAzD,AAAuE,CAAC,CAAC,OAAO,IAAI,CAAC,mBAAA,CAAoB,EAAE,IAAI,EAAE,IAAI,CAAC,OAAA,CAAQ,WAAW,IAAI,IAAI,EAAE,IAAI,CAAC,mBAAA,CAAoB,EAAE,IAAI,IAAI,CAAC,mBAAA,CAAoB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,SAAA,CAAU,MAAA,CAAO,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,YAAA,CAAa,IAAI,IAAI,EAAE,EAAE,QAAA,CAAS,QAAA,CAAS,EAAE,EAAE,EAAE,EAAE,YAAA,CAAa,MAAA,CAAO,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,EAAE,IAAA,CAAK,CAAC,KAAA,CAAM,EAAE,aAAa,CAAC,EAAE,CAAC,OAAnC,AAA0C,CAAC,IAAI,CAAC,cAAA,CAAe,EAAE,QAAA,CAAS,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAA,CAAoB,CAAC,EAAE,IAAI,CAAC,sBAAA,CAAuB,SAAS,CAAC,EAAE,OAAO,EAAE,aAAa,CAAC,IAAI,CAAC,mBAAA,CAAoB,AAAA,EAAE,IAAI,CAAC,wBAAA,CAAyB,SAAS,CAAC,EAAE,OAAO,EAAE,aAAa,CAAC,IAAI,IAAI,CAAC,mBAAA,CAAoB,EAAE,EAAE,AAAA,EAAE,IAAI,CAAC,mBAAA,CAAoB,EAAE,IAAI,CAAC,oBAAA,CAAqB,EAAE,IAAI,CAAC,kBAAA,CAAmB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,cAAc,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,aAAA,CAAc,WAAW,IAAI,EAAE,IAAI,aAAa,EAAE,EAAE,GAAG,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAA,CAAc,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,eAAA,CAAgB,KAAA,CAAM,EAAE,IAAI,CAAC,cAAA,CAAe,EAAE,GAAG,EAAE,eAAA,CAAgB,KAAA,CAAM,IAAI,EAAE,IAAI,CAAC,cAAA,CAAe,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,eAAR,EAA0B,CAAA,EAAE,QAAA,CAAS,EAAE,EAAE,eAAA,CAAgB,GAAG,EAAE,MAAA,CAAO,EAAE,GAAG,EAAE,QAAA,CAAS,EAAE,EAAE,eAAA,CAAgB,EAAE,CAAC,EAAM,EAAE,UAAU,OAAO,QAAQ,OAAO,KAAtC,CAAkD,EAAE,CAAC,IAAQ,EAAE,GAAG,EAAE,KAAgB,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAM,EAAE,IAAI,EAAE,cAAA,CAAe,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAM,EAAE,IAAK,CAAA,EAAE,QAAA,EAAU,CAAA,EAAG,EAAE,IAAA,CAAK,IAAI,EAAE,OAAA,CAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,aAAA,CAAc,GAAG,IAAM,EAAE,EAAE,CAAC,OAAO,EAAE,IAAA,CAAK,EAAE,EAAE,GAAG,EAAE,IAAA,CAAK,EAAE,EAAE,GAAG,EAAE,IAAA,CAAK,EAAE,EAAE,GAAG,EAAE,QAAA,CAAS,GAAG,CAAC,CAAE,OAAM,EAAE,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAA,CAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,GAAa,CAAA,IAAI,CAAC,QAAA,CAAS,IAAI,EAAE,OAAA,CAAQ,IAAI,CAAC,QAAA,CAAS,IAAI,EAAE,OAAA,CAAQ,EAAE,IAAI,EAAE,OAAA,CAAQ,IAAI,CAAC,OAAA,CAAQ,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,YAAA,CAAa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,GAAA,CAAI,SAAS,CAAC,EAAE,EAAE,GAAA,CAAI,CAAC,EAAE,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,IAAI,CAAC,QAAA,CAAS,CAAA,EAAG,AAAC,CAAA,EAAE,IAAI,CAAC,KAAA,CAAM,EAAA,EAAI,cAAA,CAAe,GAAG,EAAE,GAAA,CAAI,GAAG,EAAE,GAAA,CAAI,EAAE,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,IAAI,CAAC,QAAA,CAAS,CAAA,EAAI,AAAA,CAAA,EAAE,IAAI,CAAC,KAAA,CAAM,EAAA,EAAI,cAAA,CAAe,GAAG,EAAE,GAAA,CAAI,GAAG,EAAE,GAAA,CAAI,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,EAAE,IAAI,CAAC,QAAA,CAAS,CAAA,EAAI,AAAA,CAAA,EAAE,IAAI,CAAC,KAAA,CAAM,EAAA,EAAI,cAAA,CAAe,GAAG,EAAE,GAAA,CAAI,GAAG,EAAE,GAAA,CAAI,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,EAAE,IAAI,CAAC,QAAA,CAAS,CAAA,EAAI,AAAA,CAAA,EAAE,IAAI,CAAC,KAAA,CAAM,EAAA,EAAI,cAAA,CAAe,GAAG,EAAE,GAAA,CAAI,GAAG,EAAE,GAAA,CAAI,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,GAAI,AAAA,CAAA,EAAE,IAAI,CAAC,KAAA,CAAM,EAAA,EAAI,cAAA,CAAe,GAAG,EAAE,GAAA,CAAI,GAAG,EAAE,GAAA,CAAI,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,GAAI,AAAA,CAAA,EAAE,IAAI,CAAC,KAAA,CAAM,EAAA,EAAI,cAAA,CAAe,GAAG,EAAE,GAAA,CAAI,GAAG,KAAK,MAAA,GAAS,IAAI,IAAI,CAAC,KAAA,CAAM,GAAG,IAAI,CAAC,IAA5iB,EAAkjB,EAAE,IAAI,CAAC,KAAA,CAAM,SAAS,CAAC,EAAE,GAAG,EAAE,GAAA,CAAI,IAAI,CAAC,KAAA,CAAM,EAAE,OAAO,EAAE,GAAA,CAAI,IAAI,CAAC,SAAA,CAAU,IAAI,EAAE,GAAA,CAAI,IAAI,CAAC,QAAA,CAAS,IAAI,EAAE,GAAA,CAAI,IAAI,CAAC,UAAA,CAAW,GAAG,EAAE,IAAI,CAAC,IAAA,CAAK,WAAW,IAAI,CAAC,QAAA,CAAS,GAAA,CAAI,GAAG,IAAI,EAAE,IAAI,CAAC,QAAA,CAAS,MAApB,EAA6B,CAAA,EAAE,KAAK,IAAI,CAAC,QAAA,CAAS,YAAA,CAAa,EAAE,KAAK,IAAI,CAAC,QAAA,CAAS,GAAA,CAAI,IAAI,CAAC,QAAA,EAAU,EAAE,GAAA,CAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,WAAA,CAAY,WAAW,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,GAAI,CAAA,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,CAAA,EAAG,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,GAAI,CAAA,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAA,EAAG,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,GAAI,CAAA,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,CAAA,EAAG,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,GAAI,CAAA,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAA,EAAG,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,GAAI,CAAA,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,CAAA,EAAG,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAC,GAAI,CAAA,IAAI,CAAC,QAAA,CAAS,CAAA,CAAE,CAAA,CAAE,EAAE,IAAI,CAAC,KAAA,CAAM,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAZ,CAAoB,OAAO,EAAE,IAAA,CAAK,IAAI,CAAC,QAAA,EAAU,EAAE,GAAA,CAAI,GAAG,EAAE,cAAA,CAAe,EAAE,IAAI,CAAC,QAAA,CAAS,iBAAA,CAAkB,IAAI,CAAC,EAAE,IAAI,CAAC,OAAA,CAAQ,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAA,CAAS,UAAA,CAAW,GAAG,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAZ,AAAoB,CAAA,EAAE,UAAA,CAAW,IAAI,CAAC,QAAA,CAAS,GAAG,EAAE,cAAA,CAAe,GAAG,GAAG,EAAE,GAAA,CAAI,EAAE,CAAC,EAAE,IAAI,CAAC,KAAA,CAAM,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAZ,CAAoB,OAAO,EAAE,UAAA,CAAW,EAAE,IAAI,CAAC,QAAA,EAAU,EAAE,cAAA,CAAe,GAAG,CAAC,EAAE,IAAI,CAAC,SAAA,CAAU,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAA,CAAQ,EAAE,EAAE,IAAM,EAAE,IAAI,AAA5tD,EAA8tD,SAAA,CAAU,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAA,CAAO,EAAE,EAAE,IAAI,KAAK,MAAA,GAAS,IAAI,AAAC,CAAA,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,EAAC,AAAD,EAAI,QAAA,CAAS,UAAA,CAAW,IAAI,CAAC,QAAA,CAAA,EAAW,GAAG,GAAG,GAAI,CAAA,EAAE,GAAA,CAAI,EAAE,QAAA,EAAU,GAAA,EAAK,GAAG,EAAE,EAAE,CAAC,EAAE,YAAA,CAAa,GAAG,IAAI,EAAE,EAAE,MAAR,EAAiB,CAAA,EAA75D,IAAk6D,EAAE,YAAA,CAAa,EAAj7D,GAAq7D,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAA,CAAS,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAA,CAAQ,EAAE,IAAI,EAAE,OAAA,CAAQ,EAAE,EAAE,IAAM,EAAE,IAAI,AAA7gE,EAA+gE,QAAA,CAAS,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAA,CAAO,EAAE,EAAE,IAAI,KAAK,MAAA,GAAS,IAAI,AAAC,CAAA,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,EAAC,AAAD,EAAI,QAAA,CAAS,UAAA,CAAW,IAAI,CAAC,QAAA,CAAA,EAAW,GAAG,GAAG,GAAI,CAAA,EAAE,GAAA,CAAI,EAAE,QAAA,EAAU,GAAA,CAAK,CAAA,EAAE,GAAG,EAAE,YAAA,CAAa,GAAG,EAAE,UAAA,CAAW,EAAE,IAAI,CAAC,QAA3C,EAAqD,IAAI,EAAE,EAAE,MAAR,GAAiB,OAAO,EAA/uE,IAAovE,EAAE,YAAA,CAAa,EAAnwE,IAAwwE,CAAC,EAAE,IAAI,CAAC,UAAA,CAAW,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAA,CAAQ,EAAE,IAAI,EAAE,OAAhC,CAAwC,IAAM,EAAE,IAAI,AAAt1E,EAAw1E,UAAA,CAAW,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAA,CAAO,EAAE,EAAE,IAAI,KAAK,MAAA,GAAS,IAAK,AAAA,CAAA,EAAE,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAI,QAAA,CAAS,UAAA,CAAW,IAAI,CAAC,QAAA,CAAA,EAAW,GAAG,GAAG,GAAI,CAAA,EAAE,UAAA,CAAW,IAAI,CAAC,QAAA,CAAS,EAAE,QAAA,EAAU,EAAE,SAAA,GAAY,EAAE,YAAA,CAAa,GAAG,EAAE,GAAA,CAAI,EAAA,EAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,UAAU,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,SAAA,CAAU,cAAA,CAAe,CAAC,gBAAgB,OAAO,OAAO,SAAS,OAAO,MAAM,UAAU,mBAAmB,SAAS,EAAE,SAAS,GAAG,WAAW,EAAE,WAAW,GAAG,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,KAAA,EAAO,EAAE,KAAK,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAA,CAAW,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAA,CAAS,GAAG,IAAM,EAAE,IAAI,CAAC,UAAA,CAAW,aAAA,GAAgB,EAAE,IAAI,CAAC,UAAA,CAAW,aAA1D,EAA0E,EAAC,SAAS,CAAC,EAAE,IAAM,EAAE,EAAE,KAAA,CAAM,IAAhB,CAAyB,EAAE,EAAQ,EAAE,EAAE,MAAV,CAAkB,AAAA,CAAA,KAAK,IAAM,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,IAAM,EAAE,AAAl6G,IAAk6G,KAAK,MAAA,GAAW,IAAI,EAAE,AAAx7G,IAAw7G,KAAK,MAAA,GAAW,IAAI,EAAE,AAA98G,IAA88G,KAAK,MAAA,GAAW,GAAI,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAA,CAAK,GAAG,EAAE,CAAC,CAAA,GAAI,EAAE,GAAG,SAAS,CAAC,EAAE,IAAM,EAAE,EAAE,KAAA,CAAM,IAAhB,CAAyB,EAAE,EAAQ,EAAE,EAAE,MAAV,CAAkB,AAAA,CAAA,KAAK,IAAM,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,IAAM,EAAE,KAAK,MAAA,GAAS,GAAG,EAAE,KAAK,MAAA,GAAS,GAAG,EAAE,KAAK,MAAA,GAAS,EAAG,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAA,CAAK,GAAG,EAAE,CAAC,CAAA,GAAI,EAAE,GAAG,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,UAAA,CAAW,WAAA,CAAY,kBAAkB,i3HAAi3H,GAAG,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,UAAA,CAAW,WAAA,CAAY,kBAAkB,oeAAoe,GAAG,IAAI,CAAC,UAAA,CAAW,uBAAA,CAAwB,IAAI,CAAC,gBAAA,CAAiB,CAAC,IAAI,CAAC,gBAAL,CAAsB,IAAI,CAAC,gBAAL,CAAsB,EAAE,IAAI,CAAC,UAAA,CAAW,uBAAA,CAAwB,IAAI,CAAC,gBAAA,CAAiB,CAAC,IAAI,CAAC,gBAAL,CAAsB,IAAI,CAAC,gBAAL,CAAsB,EAAE,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,gBAAA,CAAiB,QAAA,CAAS,QAAA,CAAS,IAAI,CAAC,gBAAA,CAAiB,IAAI,CAAC,gBAAA,CAAiB,QAAA,CAAS,QAAA,CAAS,IAAI,CAAC,gBAAA,CAAiB,IAAA,CAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,IAAA,CAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,OAAA,CAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,kBAAA,CAAmB,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,iBAAA,CAAkB,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,gBAAA,CAAiB,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,UAAA,CAAW,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,aAAA,CAAc,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAA,CAAiB,QAAA,CAAS,CAAC,MAAM,IAAI,EAAE,OAAZ,AAAmB,EAAE,IAAI,CAAC,gBAAA,CAAiB,QAAA,CAAS,OAAA,CAAQ,MAAA,CAAO,AAA7jS,KAA+jS,OAAA,CAAQ,GAAG,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,EAAE,cAAA,CAAe,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,EAAE,cAAA,CAAe,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,EAAE,cAAA,CAAe,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,EAAE,cAAlO,CAAiP,IAAM,EAAE,IAAI,CAAC,UAAA,CAAW,IAAxB,EAA+B,QAAO,GAAG,QAAQ,KAAA,CAAM,EAAE,CAAC,gBAAgB,CAAC,IAAM,EAAG,AAAA,CAAA,AAAA,IAAI,IAAM,EAAE,IAAI,EAAE,cAAd,AAA6B,CAAA,EAAE,QAAA,EAAoC,CAAA,EAAE,AAA3B,CAAA,EAAE,KAAK,GAAA,CAAI,EAAE,EAAE,QAAA,CAAA,EAAc,CAAA,EAAG,IAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,eAAA,CAAgB,IAAI,aAAa,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,eAAA,CAAgB,IAAI,aAAa,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,eAAA,CAAgB,IAAI,aAAa,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,eAAA,CAAgB,IAAI,aAAa,GAAG,EAAG,CAAA,EAAE,YAAA,EAAe,CAAA,EAAE,YAAA,CAAa,EAAE,YAAW,AAAX,EAAc,EAAE,YAAA,CAAa,WAAW,GAAG,EAAE,YAAA,CAAa,YAAY,GAAG,EAAE,YAAA,CAAa,YAAY,GAAG,EAAE,YAAA,CAAa,aAAa,GAAG,IAAI,EAAE,EAAQ,EAAE,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,UAAU,MAAA,CAAO,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,AAAA,EAAE,EAAE,EAAE,QAAA,EAAU,GAAG,EAAE,EAAE,QAAA,EAAU,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,IAAM,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,KAA0G,EAAzG,IAAM,EAAE,CAAC,CAAE,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAE,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,CAAC,CAAE,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,QAAA,GAAW,EAAE,IAAI,EAAE,SAAA,CAAU,OAAA,CAAQ,WAAkB,CAAA,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAA,CAAO,SAAA,CAAU,GAAG,GAAG,CAAC,CAAC,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,KAAA,CAAM,GAAG,GAAG,GAAG,CAAA,EAAG,OAAO,MAAA,CAAO,CAAC,EAAE,IAAI,CAAC,OAAA,CAAQ,CAAC,OAAO,IAAI,AAAA,GAAI,CAAA,IAAI,CAAC,YAAA,CAAa,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,KAAA,CAAM,SAAS,EAAE,gBAAgB,CAAC,MAAM,IAAI,EAAE,gBAAgB,CAAC,MAAM,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,MAAM,IAAI,CAAC,OAAA,CAAQ,QAAnB,AAA2B,CAAC,EAAE,IAAM,EAAE,IAAI,EAAE,cAAA,CAAe,CAAC,SAAS,IAAI,CAAC,YAAd,CAA2B,aAAa,kyCAAkyC,eAAe,sTAAsT,KAAK,EAAE,UAAP,AAAiB,GAAG,EAAE,IAAI,EAAE,IAAA,CAAK,EAAE,GAAG,OAAO,EAAE,QAAA,CAAS,CAAA,CAAE,KAAK,EAAA,CAAG,EAAE,EAAE,gBAAA,CAAiB,CAAC,EAAE,EAAE,YAAA,GAAe,IAAI,CAAC,KAAA,CAAM,GAAA,CAAI,EAAE,CAAC,UAAU,CAAC,CAAC,KAAgI,EAAE,EAAjI,IAAM,EAAE,IAAI,CAAC,OAAA,CAAQ,EAAE,MAAM,EAAE,MAAA,CAAO,EAAE,MAAA,CAAO,QAAQ,EAAE,MAAM,EAAE,MAAA,CAAO,EAAE,MAAA,CAAO,QAAQ,EAAE,IAAI,EAAE,KAAA,CAAM,GAAG,EAAE,IAAI,EAAE,KAAA,CAAM,GAAW,GAAG,EAAE,IAAI,EAAE,SAAA,CAAU,OAAA,CAAQ,YAAY,KAAK,MAAA,GAAS,EAAE,GAAG,EAAE,SAAA,CAAU,OAAA,CAAQ,YAAY,CAAC,IAAM,EAAE,AAAC,CAAA,EAAE,CAAA,CAAE,KAAK,MAAA,GAAS,EAAE,CAAA,AAAA,EAAG,KAAA,CAAM,EAAE,GAAG,EAAE,AAAC,CAAA,EAAE,CAAA,CAAE,KAAK,MAAA,GAAS,EAAE,CAAA,AAAA,EAAG,KAAA,CAAM,EAAE,GAAG,EAAE,AAAC,CAAA,EAAE,CAAA,CAAE,KAAK,MAAA,GAAS,EAAE,CAAA,AAAA,EAAG,KAAA,CAAM,EAAE,GAAG,EAAE,IAAI,EAAE,KAAA,CAAM,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,SAAA,CAAU,OAAA,CAAQ,OAAO,IAAI,EAAE,KAAA,CAAM,EAAE,EAAE,GAAG,EAAE,IAAA,CAAK,EAAE,GAAG,OAAO,CAAC,CAAC,QAAQ,KAAyN,EAAE,CAA1N,CAAA,IAAI,CAAC,MAAA,CAAO,IAAI,EAAE,iBAAA,CAAkB,GAAG,IAAI,CAAC,KAAA,CAAM,IAAI,CAAC,MAAA,CAAO,EAAE,KAAK,IAAI,CAAC,MAAA,CAAO,QAAA,CAAS,CAAA,CAAE,IAAI,IAAI,CAAC,GAAA,CAAI,IAAI,EAAE,GAAA,CAAI,SAAS,IAAI,KAAK,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,MAAA,CAAO,EAAE,IAAM,EAAE,IAAI,CAAC,KAAA,CAAM,EAAE,CAAC,EAAE,IAAI,CAAC,KAAA,CAAM,EAAE,CAAC,EAAE,IAAI,CAAC,OAA7C,CAA6D,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,mBAAA,GAAsB,IAAI,CAAC,aAAA,CAAc,IAAI,CAAC,aAAA,CAAc,IAAA,CAAK,IAAI,EAAE,IAAI,CAAC,aAAA,GAAgB,IAAI,CAAC,cAAtG,EAAsH,CAAC,MAAM,EAAE,CAAC,QAAQ,KAAA,CAAM,gCAAgC,EAAE,KAAK,CAAC,IAAM,EAAE,EAAE,KAAK,GAAA,CAAI,EAAE,EAAE,QAAvB,EAAiC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,AAAgB,CAAhB,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAA,EAAK,QAAA,CAAS,CAAA,CAAE,IAAI,KAAK,MAAA,GAAS,IAAI,EAAE,QAAA,CAAS,CAAA,CAAE,IAAI,KAAK,MAAA,GAAS,IAAI,EAAE,QAAA,CAAS,CAAA,CAAE,IAAI,KAAK,MAAA,GAAS,IAAI,EAAE,QAAA,CAAS,CAAA,CAAE,EAAE,KAAK,MAAA,GAAS,EAAE,EAAE,QAAA,CAAS,CAAA,CAAE,EAAE,KAAK,MAAA,GAAS,EAAE,EAAE,QAAA,CAAS,CAAA,CAAE,EAAE,KAAK,MAAA,GAAS,EAAE,EAAE,YAAA,CAAa,IAAI,IAAI,KAAK,IAAM,EAAE,IAAI,EAAE,SAAA,CAAU,OAAA,CAAQ,YAAY,EAAE,EAAE,GAAG,EAAE,EAAE,UAAA,CAAW,QAAA,CAAS,MAAA,CAAO,EAAE,IAAI,EAAE,eAAA,CAAgB,IAAI,aAAa,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,KAAA,CAAM,KAAA,CAAM,MAAA,CAAO,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAM,EAAE,EAAE,KAAA,CAAM,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,SAAlC,EAA8C,CAAA,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAArD,AAAsD,KAAK,CAAC,IAAM,EAAE,IAAI,CAAC,SAAA,CAAU,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,KAAA,CAAM,MAAA,CAAO,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAA7E,AAA8E,CAAC,EAAE,YAAA,CAAa,QAAQ,GAAgH,AAA7G,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,IAAA,CAAK,EAAE,IAAI,EAAE,iBAAA,CAAkB,CAAC,MAAM,SAAS,KAAK,EAAE,UAAP,CAAkB,aAAa,EAAE,YAAf,AAA2B,GAAA,EAAM,KAAA,CAAM,KAAK,KAAA,CAAM,MAAM,KAAK,MAAA,IAAU,EAAE,QAAA,CAAS,CAAA,CAAE,CAAC,CAAC,EAAE,CAAC,QAAA,CAAS,CAAA,CAAE,EAAE,QAAA,CAAS,CAAA,CAAE,CAAC,CAAC,EAAE,CAAC,QAAA,CAAS,CAAA,CAAE,EAAE,QAAA,CAAS,CAAA,CAAE,CAAC,CAAC,EAAE,CAAC,QAAA,CAAS,CAAA,CAAE,IAAI,CAAC,KAAA,CAAM,GAAA,CAAI,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAA,EAAmB,CAAA,IAAI,CAAC,gBAAA,CAAiB,kBAAA,CAAmB,KAAA,CAAM,IAAI,CAAC,OAAA,CAAQ,UAAA,CAAW,IAAI,CAAC,gBAAA,CAAiB,iBAAA,CAAkB,KAAA,CAAM,IAAI,CAAC,OAAA,CAAQ,SAAA,CAAU,IAAI,CAAC,gBAAA,CAAiB,UAAA,CAAW,KAAA,CAAM,IAAI,CAAC,OAAA,CAAQ,UAAA,CAAW,IAAI,CAAC,gBAAA,CAAiB,gBAAA,CAAiB,KAAA,CAAM,IAAI,CAAC,OAAA,CAAQ,QAAO,AAAP,CAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAA,CAAI,YAAY,GAAA,GAAM,IAAI,CAAC,IAAA,EAAO,CAAA,IAAI,CAAC,IAAA,CAAK,IAAI,CAAC,GAAE,AAAF,EAAK,IAAI,EAAG,AAAA,CAAA,IAAI,CAAC,GAAA,CAAI,IAAI,CAAC,IAAG,AAAH,EAAM,IAAI,GAAG,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,IAAA,CAAK,IAAI,CAAC,GAAA,CAAI,EAAE,IAAI,CAAC,gBAAA,CAAiB,IAAA,CAAK,KAAA,CAAM,IAAI,CAAC,GAAA,CAAI,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,KAAA,CAAM,EAAE,IAAI,CAAC,gBAAA,CAAiB,IAAA,CAAK,KAAA,CAAM,IAAI,CAAC,GAAA,CAAI,IAAI,CAAC,gBAAA,CAAiB,KAAA,CAAM,KAAA,CAAM,EAAE,IAAI,CAAC,YAAA,CAAa,IAAA,CAAK,KAAA,CAAM,IAAI,CAAC,GAAA,CAAI,IAAI,CAAC,YAAA,CAAa,KAAA,CAAM,KAAA,CAAM,EAAE,IAAI,CAAC,gBAAA,CAAiB,QAAA,CAAS,KAAA,CAAM,GAAA,CAAI,IAAI,CAAC,MAAA,CAAO,CAAC,IAAI,CAAC,MAAA,CAAO,GAAG,IAAI,CAAC,MAAA,CAAO,IAAI,IAAI,CAAC,MAAA,CAAO,IAAI,IAAI,CAAC,UAAA,CAAW,OAAA,GAAU,IAAI,CAAC,YAAA,CAAa,eAAA,CAAgB,KAAA,CAAM,IAAI,CAAC,UAAA,CAAW,sBAAA,CAAuB,IAAI,CAAC,gBAAA,EAAkB,OAAA,CAAQ,IAAI,CAAC,YAAA,CAAa,eAAA,CAAgB,KAAA,CAAM,IAAI,CAAC,UAAA,CAAW,sBAAA,CAAuB,IAAI,CAAC,gBAAA,EAAkB,OAAxlB,KAAomB,KAAqC,EAAE,EAAtC,IAAM,EAAE,IAAI,CAAC,KAAA,CAAM,EAAE,IAAI,CAAC,KAA1B,CAAwC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAA,CAAO,EAAE,EAAE,IAAY,AAAP,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAK,GAAA,CAAI,GAAU,AAAP,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAK,QAAA,CAAS,CAAA,CAAE,KAAK,KAAA,CAAM,CAAC,EAAE,QAAA,CAAS,CAAA,CAAE,EAAE,QAAA,CAAS,CAAA,EAAG,EAAE,QAAA,CAAS,CAAA,CAAE,KAAK,IAAA,CAAK,EAAE,QAAA,CAAS,CAAA,CAAE,EAAE,QAAA,CAAS,MAAA,IAAU,EAAE,KAAA,CAAO,AAAA,CAAA,EAAE,KAAA,CAAO,CAAA,KAAK,GAAA,CAAI,EAAE,EAAE,QAAA,CAAS,CAAA,EAAG,EAAA,CAAC,EAAI,MAAsB,EAAE,QAAA,CAAS,UAAA,CAAW,QAAA,CAAS,KAAK,CAA5C,GAA+C,CAAC,EAAE,QAAA,CAAS,UAAA,CAAW,QAAA,CAAS,KAAK,CAA/E,GAAkF,CAAC,EAAE,KAAK,GAAA,CAAI,EAAE,KAAA,EAAO,IAAI,CAAC,OAAA,CAAQ,QAAA,CAAS,EAAE,QAAA,CAAS,UAAA,CAAW,QAAA,CAAS,WAAA,CAAY,CAAC,EAAE,EAAE,QAAA,CAAS,oBAAA,GAAuB,EAAE,QAAA,CAAS,CAAA,CAAE,CAAC,CAAC,EAAE,CAAC,QAAA,CAAS,CAAA,CAAE,EAAE,QAAA,CAAS,CAAA,CAAE,CAAC,CAAC,EAAE,CAAC,QAAA,CAAS,CAAA,CAAE,EAAE,QAAA,CAAS,CAAA,CAAE,CAAC,CAAC,EAAE,CAAC,QAAA,CAAS,CAA/R,AAAiS,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAA,CAAO,EAAE,GAAG,IAAI,CAAC,MAAA,CAAO,EAAE,GAAG,CAAC,EAAE,KAAwB,EAAvB,IAAM,EAAE,IAAI,CAAC,KAAb,CAAyB,IAAI,IAAI,EAAE,IAAI,EAAE,OAAA,CAAQ,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,KAAA,CAAM,CAAC,IAAI,CAAC,MAAA,CAAO,IAAI,CAAC,MAAA,CAAO,GAAG,EAAE,EAAE,EAAE,EAAE,MAAA,CAAO,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAA,CAAE,EAAE,QAAA,CAAS,CAAA,CAAE,EAAE,OAAA,CAAQ,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAF,GAAc,IAAM,EAAE,EAAE,QAAA,CAAS,QAAQ,GAAG,OAAO,CAAC,CAAA","sources":["<anon>","src/vanta.birds.min.js"],"sourcesContent":["!function(e, t) {\n    \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports._vantaEffect = t() : e._vantaEffect = t();\n}(\"undefined\" != typeof self ? self : this, ()=>(()=>{\n        \"use strict\";\n        var e = {\n            d: (t, i)=>{\n                for(var n in i)e.o(i, n) && !e.o(t, n) && Object.defineProperty(t, n, {\n                    enumerable: !0,\n                    get: i[n]\n                });\n            },\n            o: (e, t)=>Object.prototype.hasOwnProperty.call(e, t),\n            r: (e)=>{\n                \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n                    value: \"Module\"\n                }), Object.defineProperty(e, \"__esModule\", {\n                    value: !0\n                });\n            }\n        }, t = {};\n        function i() {\n            return \"undefined\" != typeof navigator ? /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth < 600 : null;\n        }\n        e.r(t), e.d(t, {\n            default: ()=>P\n        }), Number.prototype.clamp = function(e, t) {\n            return Math.min(Math.max(this, e), t);\n        };\n        function n(e) {\n            for(; e.children && e.children.length > 0;)n(e.children[0]), e.remove(e.children[0]);\n            e.geometry && e.geometry.dispose(), e.material && (Object.keys(e.material).forEach((t)=>{\n                e.material[t] && null !== e.material[t] && \"function\" == typeof e.material[t].dispose && e.material[t].dispose();\n            }), e.material.dispose());\n        }\n        const o = \"object\" == typeof window;\n        let s = o && window.THREE || {};\n        o && !window.VANTA && (window.VANTA = {});\n        const r = o && window.VANTA || {};\n        r.register = (e, t)=>r[e] = (e)=>new t(e), r.version = \"0.5.24\";\n        const a = function() {\n            return Array.prototype.unshift.call(arguments, \"[VANTA]\"), console.error.apply(this, arguments);\n        };\n        r.VantaBase = class {\n            constructor(e = {}){\n                if (!o) return !1;\n                r.current = this, this.windowMouseMoveWrapper = this.windowMouseMoveWrapper.bind(this), this.windowTouchWrapper = this.windowTouchWrapper.bind(this), this.windowGyroWrapper = this.windowGyroWrapper.bind(this), this.resize = this.resize.bind(this), this.animationLoop = this.animationLoop.bind(this), this.restart = this.restart.bind(this);\n                const t = \"function\" == typeof this.getDefaultOptions ? this.getDefaultOptions() : this.defaultOptions;\n                if (this.options = Object.assign({\n                    mouseControls: !0,\n                    touchControls: !0,\n                    gyroControls: !1,\n                    minHeight: 200,\n                    minWidth: 200,\n                    scale: 1,\n                    scaleMobile: 1\n                }, t), (e instanceof HTMLElement || \"string\" == typeof e) && (e = {\n                    el: e\n                }), Object.assign(this.options, e), this.options.THREE && (s = this.options.THREE), this.el = this.options.el, null == this.el) a('Instance needs \"el\" param!');\n                else if (!(this.options.el instanceof HTMLElement)) {\n                    const e = this.el;\n                    if (this.el = (i = e, document.querySelector(i)), !this.el) return void a(\"Cannot find element\", e);\n                }\n                var i, n;\n                this.prepareEl(), this.initThree(), this.setSize();\n                try {\n                    this.init();\n                } catch (e) {\n                    return a(\"Init error\", e), this.renderer && this.renderer.domElement && this.el.removeChild(this.renderer.domElement), void (this.options.backgroundColor && (console.log(\"[VANTA] Falling back to backgroundColor\"), this.el.style.background = (n = this.options.backgroundColor, \"number\" == typeof n ? \"#\" + (\"00000\" + n.toString(16)).slice(-6) : n)));\n                }\n                this.initMouse(), this.resize(), this.animationLoop();\n                const l = window.addEventListener;\n                l(\"resize\", this.resize), window.requestAnimationFrame(this.resize), this.options.mouseControls && (l(\"scroll\", this.windowMouseMoveWrapper), l(\"mousemove\", this.windowMouseMoveWrapper)), this.options.touchControls && (l(\"touchstart\", this.windowTouchWrapper), l(\"touchmove\", this.windowTouchWrapper)), this.options.gyroControls && l(\"deviceorientation\", this.windowGyroWrapper);\n            }\n            setOptions(e = {}) {\n                Object.assign(this.options, e), this.triggerMouseMove();\n            }\n            prepareEl() {\n                let e, t;\n                if (\"undefined\" != typeof Node && Node.TEXT_NODE) for(e = 0; e < this.el.childNodes.length; e++){\n                    const t = this.el.childNodes[e];\n                    if (t.nodeType === Node.TEXT_NODE) {\n                        const e = document.createElement(\"span\");\n                        e.textContent = t.textContent, t.parentElement.insertBefore(e, t), t.remove();\n                    }\n                }\n                for(e = 0; e < this.el.children.length; e++)t = this.el.children[e], \"static\" === getComputedStyle(t).position && (t.style.position = \"relative\"), \"auto\" === getComputedStyle(t).zIndex && (t.style.zIndex = 1);\n                \"static\" === getComputedStyle(this.el).position && (this.el.style.position = \"relative\");\n            }\n            applyCanvasStyles(e, t = {}) {\n                Object.assign(e.style, {\n                    position: \"absolute\",\n                    zIndex: 0,\n                    top: 0,\n                    left: 0,\n                    background: \"\"\n                }), Object.assign(e.style, t), e.classList.add(\"vanta-canvas\");\n            }\n            initThree() {\n                s.WebGLRenderer ? (this.renderer = new s.WebGLRenderer({\n                    alpha: !0,\n                    antialias: !0\n                }), this.el.appendChild(this.renderer.domElement), this.applyCanvasStyles(this.renderer.domElement), isNaN(this.options.backgroundAlpha) && (this.options.backgroundAlpha = 1), this.scene = new s.Scene) : console.warn(\"[VANTA] No THREE defined on window\");\n            }\n            getCanvasElement() {\n                return this.renderer ? this.renderer.domElement : this.p5renderer ? this.p5renderer.canvas : void 0;\n            }\n            getCanvasRect() {\n                const e = this.getCanvasElement();\n                return !!e && e.getBoundingClientRect();\n            }\n            windowMouseMoveWrapper(e) {\n                const t = this.getCanvasRect();\n                if (!t) return !1;\n                const i = e.clientX - t.left, n = e.clientY - t.top;\n                i >= 0 && n >= 0 && i <= t.width && n <= t.height && (this.mouseX = i, this.mouseY = n, this.options.mouseEase || this.triggerMouseMove(i, n));\n            }\n            windowTouchWrapper(e) {\n                const t = this.getCanvasRect();\n                if (!t) return !1;\n                if (1 === e.touches.length) {\n                    const i = e.touches[0].clientX - t.left, n = e.touches[0].clientY - t.top;\n                    i >= 0 && n >= 0 && i <= t.width && n <= t.height && (this.mouseX = i, this.mouseY = n, this.options.mouseEase || this.triggerMouseMove(i, n));\n                }\n            }\n            windowGyroWrapper(e) {\n                const t = this.getCanvasRect();\n                if (!t) return !1;\n                const i = Math.round(2 * e.alpha) - t.left, n = Math.round(2 * e.beta) - t.top;\n                i >= 0 && n >= 0 && i <= t.width && n <= t.height && (this.mouseX = i, this.mouseY = n, this.options.mouseEase || this.triggerMouseMove(i, n));\n            }\n            triggerMouseMove(e, t) {\n                void 0 === e && void 0 === t && (this.options.mouseEase ? (e = this.mouseEaseX, t = this.mouseEaseY) : (e = this.mouseX, t = this.mouseY)), this.uniforms && (this.uniforms.iMouse.value.x = e / this.scale, this.uniforms.iMouse.value.y = t / this.scale);\n                const i = e / this.width, n = t / this.height;\n                \"function\" == typeof this.onMouseMove && this.onMouseMove(i, n);\n            }\n            setSize() {\n                this.scale || (this.scale = 1), i() && this.options.scaleMobile ? this.scale = this.options.scaleMobile : this.options.scale && (this.scale = this.options.scale), this.width = Math.max(this.el.offsetWidth, this.options.minWidth), this.height = Math.max(this.el.offsetHeight, this.options.minHeight);\n            }\n            initMouse() {\n                (!this.mouseX && !this.mouseY || this.mouseX === this.options.minWidth / 2 && this.mouseY === this.options.minHeight / 2) && (this.mouseX = this.width / 2, this.mouseY = this.height / 2, this.triggerMouseMove(this.mouseX, this.mouseY));\n            }\n            resize() {\n                this.setSize(), this.camera && (this.camera.aspect = this.width / this.height, \"function\" == typeof this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix()), this.renderer && (this.renderer.setSize(this.width, this.height), this.renderer.setPixelRatio(window.devicePixelRatio / this.scale)), \"function\" == typeof this.onResize && this.onResize();\n            }\n            isOnScreen() {\n                const e = this.el.offsetHeight, t = this.el.getBoundingClientRect(), i = window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop, n = t.top + i;\n                return n - window.innerHeight <= i && i <= n + e;\n            }\n            animationLoop() {\n                this.t || (this.t = 0), this.t2 || (this.t2 = 0);\n                const e = performance.now();\n                if (this.prevNow) {\n                    let t = (e - this.prevNow) / (1e3 / 60);\n                    t = Math.max(.2, Math.min(t, 5)), this.t += t, this.t2 += (this.options.speed || 1) * t, this.uniforms && (this.uniforms.iTime.value = .016667 * this.t2);\n                }\n                return this.prevNow = e, this.options.mouseEase && (this.mouseEaseX = this.mouseEaseX || this.mouseX || 0, this.mouseEaseY = this.mouseEaseY || this.mouseY || 0, Math.abs(this.mouseEaseX - this.mouseX) + Math.abs(this.mouseEaseY - this.mouseY) > .1 && (this.mouseEaseX += .05 * (this.mouseX - this.mouseEaseX), this.mouseEaseY += .05 * (this.mouseY - this.mouseEaseY), this.triggerMouseMove(this.mouseEaseX, this.mouseEaseY))), (this.isOnScreen() || this.options.forceAnimate) && (\"function\" == typeof this.onUpdate && this.onUpdate(), this.scene && this.camera && (this.renderer.render(this.scene, this.camera), this.renderer.setClearColor(this.options.backgroundColor, this.options.backgroundAlpha)), this.fps && this.fps.update && this.fps.update(), \"function\" == typeof this.afterRender && this.afterRender()), this.req = window.requestAnimationFrame(this.animationLoop);\n            }\n            restart() {\n                if (this.scene) for(; this.scene.children.length;)this.scene.remove(this.scene.children[0]);\n                \"function\" == typeof this.onRestart && this.onRestart(), this.init();\n            }\n            init() {\n                \"function\" == typeof this.onInit && this.onInit();\n            }\n            destroy() {\n                \"function\" == typeof this.onDestroy && this.onDestroy();\n                const e = window.removeEventListener;\n                e(\"touchstart\", this.windowTouchWrapper), e(\"touchmove\", this.windowTouchWrapper), e(\"scroll\", this.windowMouseMoveWrapper), e(\"mousemove\", this.windowMouseMoveWrapper), e(\"deviceorientation\", this.windowGyroWrapper), e(\"resize\", this.resize), window.cancelAnimationFrame(this.req);\n                const t = this.scene;\n                t && t.children && n(t), this.renderer && (this.renderer.domElement && this.el.removeChild(this.renderer.domElement), this.renderer = null, this.scene = null), r.current === this && (r.current = null);\n            }\n        };\n        const l = r.VantaBase;\n        let h = \"object\" == typeof window && window.THREE, { Camera: c, ClampToEdgeWrapping: d, DataTexture: u, FloatType: p, Mesh: m, NearestFilter: f, PlaneBufferGeometry: v, RGBAFormat: y, Scene: g, ShaderMaterial: w, WebGLRenderTarget: b } = h || {};\n        const x = function(e, t, i, n) {\n            n && ({ Camera: c, ClampToEdgeWrapping: d, DataTexture: u, FloatType: p, Mesh: m, NearestFilter: f, PlaneBufferGeometry: v, RGBAFormat: y, Scene: g, ShaderMaterial: w, WebGLRenderTarget: b } = n), this.variables = [], this.currentTextureIndex = 0;\n            var o = p, s = new g, r = new c;\n            r.position.z = 1;\n            var a = {\n                passThruTexture: {\n                    value: null\n                }\n            }, l = T(\"uniform sampler2D passThruTexture;\\n\\nvoid main() {\\n\\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\\n\\n\tgl_FragColor = texture2D( passThruTexture, uv );\\n\\n}\\n\", a), h = new m(new v(2, 2), l);\n            function x(i) {\n                i.defines.resolution = \"vec2( \" + e.toFixed(1) + \", \" + t.toFixed(1) + \" )\";\n            }\n            function T(e, t) {\n                var i = new w({\n                    uniforms: t = t || {},\n                    vertexShader: \"void main()\t{\\n\\n\tgl_Position = vec4( position, 1.0 );\\n\\n}\\n\",\n                    fragmentShader: e\n                });\n                return x(i), i;\n            }\n            s.add(h), this.setDataType = function(e) {\n                return o = e, this;\n            }, this.addVariable = function(e, t, i) {\n                var n = {\n                    name: e,\n                    initialValueTexture: i,\n                    material: this.createShaderMaterial(t),\n                    dependencies: null,\n                    renderTargets: [],\n                    wrapS: null,\n                    wrapT: null,\n                    minFilter: f,\n                    magFilter: f\n                };\n                return this.variables.push(n), n;\n            }, this.setVariableDependencies = function(e, t) {\n                e.dependencies = t;\n            }, this.init = function() {\n                if (!i.capabilities.isWebGL2 && !i.extensions.get(\"OES_texture_float\")) return \"No OES_texture_float support for float textures.\";\n                if (0 === i.capabilities.maxVertexTextures) return \"No support for vertex shader textures.\";\n                for(var n = 0; n < this.variables.length; n++){\n                    var o = this.variables[n];\n                    o.renderTargets[0] = this.createRenderTarget(e, t, o.wrapS, o.wrapT, o.minFilter, o.magFilter), o.renderTargets[1] = this.createRenderTarget(e, t, o.wrapS, o.wrapT, o.minFilter, o.magFilter), this.renderTexture(o.initialValueTexture, o.renderTargets[0]), this.renderTexture(o.initialValueTexture, o.renderTargets[1]);\n                    var s = o.material, r = s.uniforms;\n                    if (null !== o.dependencies) for(var a = 0; a < o.dependencies.length; a++){\n                        var l = o.dependencies[a];\n                        if (l.name !== o.name) {\n                            for(var h = !1, c = 0; c < this.variables.length; c++)if (l.name === this.variables[c].name) {\n                                h = !0;\n                                break;\n                            }\n                            if (!h) return \"Variable dependency not found. Variable=\" + o.name + \", dependency=\" + l.name;\n                        }\n                        r[l.name] = {\n                            value: null\n                        }, s.fragmentShader = \"\\nuniform sampler2D \" + l.name + \";\\n\" + s.fragmentShader;\n                    }\n                }\n                return this.currentTextureIndex = 0, null;\n            }, this.compute = function() {\n                for(var e = this.currentTextureIndex, t = 0 === this.currentTextureIndex ? 1 : 0, i = 0, n = this.variables.length; i < n; i++){\n                    var o = this.variables[i];\n                    if (null !== o.dependencies) for(var s = o.material.uniforms, r = 0, a = o.dependencies.length; r < a; r++){\n                        var l = o.dependencies[r];\n                        s[l.name].value = l.renderTargets[e].texture;\n                    }\n                    this.doRenderTarget(o.material, o.renderTargets[t]);\n                }\n                this.currentTextureIndex = t;\n            }, this.getCurrentRenderTarget = function(e) {\n                return e.renderTargets[this.currentTextureIndex];\n            }, this.getAlternateRenderTarget = function(e) {\n                return e.renderTargets[0 === this.currentTextureIndex ? 1 : 0];\n            }, this.addResolutionDefine = x, this.createShaderMaterial = T, this.createRenderTarget = function(i, n, s, r, a, l) {\n                return new b(i = i || e, n = n || t, {\n                    wrapS: s = s || d,\n                    wrapT: r = r || d,\n                    minFilter: a = a || f,\n                    magFilter: l = l || f,\n                    format: y,\n                    type: o,\n                    stencilBuffer: !1,\n                    depthBuffer: !1\n                });\n            }, this.createTexture = function() {\n                var i = new Float32Array(e * t * 4);\n                return new u(i, e, t, y, p);\n            }, this.renderTexture = function(e, t) {\n                a.passThruTexture.value = e, this.doRenderTarget(l, t), a.passThruTexture.value = null;\n            }, this.doRenderTarget = function(e, t) {\n                var n = i.getRenderTarget();\n                h.material = e, i.setRenderTarget(t), i.render(s, r), h.material = l, i.setRenderTarget(n);\n            };\n        };\n        let T = \"object\" == typeof window && window.THREE;\n        const M = !i();\n        let z = 32, S = z * z;\n        const C = 800, V = (e = {})=>{\n            const t = new T.BufferGeometry, i = [];\n            function n(t, n, o) {\n                const s = 1.5 * (e.birdSize || 1);\n                i.push(new T.Vector3(t * s, n * s, o * s));\n            }\n            n(5, 0, 0), n(-5, -1, 1), n(-5, 0, 0), n(-5, -2, -1), n(0, 2, -6), n(0, 2, 6), n(2, 0, 0), n(-3, 0, 0), t.setFromPoints(i);\n            const o = [];\n            return o.push(0, 2, 1), o.push(4, 7, 6), o.push(5, 6, 7), t.setIndex(o), t;\n        };\n        class R {\n            constructor(e){\n                var t, i, n = new T.Vector3, o = 500, s = 500, r = 200, a = .1, l = e;\n                this.position = new T.Vector3, this.velocity = new T.Vector3, t = new T.Vector3, this.setGoal = function(e) {\n                    i = e;\n                }, this.setWorldSize = function(e, t, i) {\n                    o = e, s = t, r = i;\n                }, this.run = function(e) {\n                    n.set(-o, this.position.y, this.position.z), (n = this.avoid(n)).multiplyScalar(5), t.add(n), n.set(o, this.position.y, this.position.z), (n = this.avoid(n)).multiplyScalar(5), t.add(n), n.set(this.position.x, -s, this.position.z), (n = this.avoid(n)).multiplyScalar(5), t.add(n), n.set(this.position.x, s, this.position.z), (n = this.avoid(n)).multiplyScalar(5), t.add(n), n.set(this.position.x, this.position.y, -r), (n = this.avoid(n)).multiplyScalar(5), t.add(n), n.set(this.position.x, this.position.y, r), (n = this.avoid(n)).multiplyScalar(5), t.add(n), Math.random() > .5 && this.flock(e), this.move();\n                }, this.flock = function(e) {\n                    i && t.add(this.reach(i, .005)), t.add(this.alignment(e)), t.add(this.cohesion(e)), t.add(this.separation(e));\n                }, this.move = function() {\n                    this.velocity.add(t);\n                    var e = this.velocity.length();\n                    e > 2.5 && this.velocity.divideScalar(e / 2.5), this.position.add(this.velocity), t.set(0, 0, 0);\n                }, this.checkBounds = function() {\n                    this.position.x > o && (this.position.x = -o), this.position.x < -o && (this.position.x = o), this.position.y > s && (this.position.y = -s), this.position.y < -s && (this.position.y = s), this.position.z > r && (this.position.z = -r), this.position.z < -r && (this.position.z = r);\n                }, this.avoid = function(e) {\n                    var t = new T.Vector3;\n                    return t.copy(this.position), t.sub(e), t.multiplyScalar(1 / this.position.distanceToSquared(e)), t;\n                }, this.repulse = function(e) {\n                    var i = this.position.distanceTo(e);\n                    if (i < 150) {\n                        var n = new T.Vector3;\n                        n.subVectors(this.position, e), n.multiplyScalar(.5 / i), t.add(n);\n                    }\n                }, this.reach = function(e, t) {\n                    var i = new T.Vector3;\n                    return i.subVectors(e, this.position), i.multiplyScalar(t), i;\n                }, this.alignment = function(e) {\n                    var t, i, n = new T.Vector3, o = 0;\n                    const s = 100 * l.alignment / 20;\n                    for(var r = 0, h = e.length; r < h; r++)Math.random() > .6 || (i = (t = e[r]).position.distanceTo(this.position)) > 0 && i <= s && (n.add(t.velocity), o++);\n                    if (o > 0) {\n                        n.divideScalar(o);\n                        var c = n.length();\n                        c > a && n.divideScalar(c / a);\n                    }\n                    return n;\n                }, this.cohesion = function(e) {\n                    var t, i, n = new T.Vector3, o = new T.Vector3, s = 0;\n                    const r = 100 * l.cohesion / 20;\n                    for(var h = 0, c = e.length; h < c; h++)Math.random() > .6 || (i = (t = e[h]).position.distanceTo(this.position)) > 0 && i <= r && (n.add(t.position), s++);\n                    s > 0 && n.divideScalar(s), o.subVectors(n, this.position);\n                    var d = o.length();\n                    return d > a && o.divideScalar(d / a), o;\n                }, this.separation = function(e) {\n                    var t, i, n = new T.Vector3, o = new T.Vector3;\n                    const s = 100 * l.separation / 20;\n                    for(var r = 0, a = e.length; r < a; r++)Math.random() > .6 || (i = (t = e[r]).position.distanceTo(this.position)) > 0 && i <= s && (o.subVectors(this.position, t.position), o.normalize(), o.divideScalar(i), n.add(o));\n                    return n;\n                };\n            }\n        }\n        class E extends l {\n            static initClass() {\n                this.prototype.defaultOptions = {\n                    backgroundColor: 465199,\n                    color1: 16711680,\n                    color2: 53759,\n                    colorMode: \"varianceGradient\",\n                    birdSize: 1,\n                    wingSpan: 30,\n                    speedLimit: 5,\n                    separation: 20,\n                    alignment: 20,\n                    cohesion: 20,\n                    quantity: 5\n                };\n            }\n            constructor(e){\n                T = e.THREE || T, super(e);\n            }\n            initComputeRenderer() {\n                this.gpuCompute = new x(z, z, this.renderer, T);\n                const e = this.gpuCompute.createTexture(), t = this.gpuCompute.createTexture();\n                !function(e) {\n                    const t = e.image.data;\n                    let i = 0;\n                    const n = t.length;\n                    (()=>{\n                        const e = [];\n                        for(; i < n;){\n                            const n = Math.random() * C - 400, o = Math.random() * C - 400, s = Math.random() * C - 400;\n                            t[i + 0] = n, t[i + 1] = o, t[i + 2] = s, t[i + 3] = 1, e.push(i += 4);\n                        }\n                    })();\n                }(e), function(e) {\n                    const t = e.image.data;\n                    let i = 0;\n                    const n = t.length;\n                    (()=>{\n                        const e = [];\n                        for(; i < n;){\n                            const n = Math.random() - .5, o = Math.random() - .5, s = Math.random() - .5;\n                            t[i + 0] = 10 * n, t[i + 1] = 10 * o, t[i + 2] = 10 * s, t[i + 3] = 1, e.push(i += 4);\n                        }\n                    })();\n                }(t), this.velocityVariable = this.gpuCompute.addVariable(\"textureVelocity\", \"uniform float time;\\nuniform float testing;\\nuniform float delta; // about 0.016\\nuniform float separationDistance; // 20\\nuniform float alignmentDistance; // 40\\nuniform float cohesionDistance;\\nuniform float speedLimit;\\nuniform float freedomFactor;\\nuniform vec3 predator;\\n\\nconst float width = resolution.x;\\nconst float height = resolution.y;\\n\\nconst float PI = 3.141592653589793;\\nconst float PI_2 = PI * 2.0;\\n// const float VISION = PI * 0.55;\\n\\nfloat zoneRadius = 40.0;\\nfloat zoneRadiusSquared = 1600.0;\\n\\nfloat separationThresh = 0.45;\\nfloat alignmentThresh = 0.65;\\n\\nconst float UPPER_BOUNDS = BOUNDS;\\nconst float LOWER_BOUNDS = -UPPER_BOUNDS;\\n\\nfloat rand(vec2 co){\\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\nvoid main() {\\n\\n  zoneRadius = separationDistance + alignmentDistance + cohesionDistance;\\n  separationThresh = separationDistance / zoneRadius;\\n  alignmentThresh = ( separationDistance + alignmentDistance ) / zoneRadius;\\n  zoneRadiusSquared = zoneRadius * zoneRadius;\\n\\n\\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\\n  vec3 birdPosition, birdVelocity;\\n\\n  vec3 selfPosition = texture2D( texturePosition, uv ).xyz;\\n  vec3 selfVelocity = texture2D( textureVelocity, uv ).xyz;\\n\\n  float dist;\\n  vec3 dir; // direction\\n  float distSquared;\\n\\n  float separationSquared = separationDistance * separationDistance;\\n  float cohesionSquared = cohesionDistance * cohesionDistance;\\n\\n  float f;\\n  float percent;\\n\\n  vec3 velocity = selfVelocity;\\n\\n  float limit = speedLimit;\\n\\n  dir = predator * UPPER_BOUNDS - selfPosition;\\n  dir.z = 0.;\\n  // dir.z *= 0.6;\\n  dist = length( dir );\\n  distSquared = dist * dist;\\n\\n  float preyRadius = 150.0;\\n  float preyRadiusSq = preyRadius * preyRadius;\\n\\n  // move birds away from predator\\n  if (dist < preyRadius) {\\n\\n    f = ( distSquared / preyRadiusSq - 1.0 ) * delta * 100.;\\n    velocity += normalize( dir ) * f;\\n    limit += 5.0;\\n  }\\n\\n  // if (testing == 0.0) {}\\n  // if ( rand( uv + time ) < freedomFactor ) {}\\n\\n  // Attract flocks to the center\\n  vec3 central = vec3( 0., 0., 0. );\\n  dir = selfPosition - central;\\n  dist = length( dir );\\n\\n  dir.y *= 2.5;\\n  velocity -= normalize( dir ) * delta * 5.;\\n\\n  for (float y=0.0;y<height;y++) {\\n    for (float x=0.0;x<width;x++) {\\n\\n      vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;\\n      birdPosition = texture2D( texturePosition, ref ).xyz;\\n\\n      dir = birdPosition - selfPosition;\\n      dist = length(dir);\\n\\n      if (dist < 0.0001) continue;\\n\\n      distSquared = dist * dist;\\n\\n      if (distSquared > zoneRadiusSquared ) continue;\\n\\n      percent = distSquared / zoneRadiusSquared;\\n\\n      if ( percent < separationThresh ) { // low\\n\\n        // Separation - Move apart for comfort\\n        f = (separationThresh / percent - 1.0) * delta;\\n        velocity -= normalize(dir) * f;\\n\\n      } else if ( percent < alignmentThresh ) { // high\\n\\n        // Alignment - fly the same direction\\n        float threshDelta = alignmentThresh - separationThresh;\\n        float adjustedPercent = ( percent - separationThresh ) / threshDelta;\\n\\n        birdVelocity = texture2D( textureVelocity, ref ).xyz;\\n\\n        f = ( 0.5 - cos( adjustedPercent * PI_2 ) * 0.5 + 0.5 ) * delta;\\n        velocity += normalize(birdVelocity) * f;\\n\\n      } else {\\n\\n        // Attraction / Cohesion - move closer\\n        float threshDelta = 1.0 - alignmentThresh;\\n        float adjustedPercent = ( percent - alignmentThresh ) / threshDelta;\\n\\n        f = ( 0.5 - ( cos( adjustedPercent * PI_2 ) * -0.5 + 0.5 ) ) * delta;\\n\\n        velocity += normalize(dir) * f;\\n\\n      }\\n    }\\n  }\\n\\n  // this make tends to fly around than down or up\\n  // if (velocity.y > 0.) velocity.y *= (1. - 0.2 * delta);\\n\\n  // Speed Limits\\n  if ( length( velocity ) > limit ) {\\n    velocity = normalize( velocity ) * limit;\\n  }\\n\\n  gl_FragColor = vec4( velocity, 1.0 );\\n\\n}\", t), this.positionVariable = this.gpuCompute.addVariable(\"texturePosition\", \"uniform float time;\\nuniform float delta;\\n\\nvoid main() {\\n\\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\\n  vec4 tmpPos = texture2D( texturePosition, uv );\\n  vec3 position = tmpPos.xyz;\\n  vec3 velocity = texture2D( textureVelocity, uv ).xyz;\\n\\n  float phase = tmpPos.w;\\n\\n  phase = mod( ( phase + delta +\\n    length( velocity.xz ) * delta * 3. +\\n    max( velocity.y, 0.0 ) * delta * 6. ), 62.83 );\\n\\n  gl_FragColor = vec4( position + velocity * delta * 15. , phase );\\n\\n}\", e), this.gpuCompute.setVariableDependencies(this.velocityVariable, [\n                    this.positionVariable,\n                    this.velocityVariable\n                ]), this.gpuCompute.setVariableDependencies(this.positionVariable, [\n                    this.positionVariable,\n                    this.velocityVariable\n                ]), this.positionUniforms = this.positionVariable.material.uniforms, this.velocityUniforms = this.velocityVariable.material.uniforms, this.positionUniforms.time = {\n                    value: 0\n                }, this.positionUniforms.delta = {\n                    value: 0\n                }, this.velocityUniforms.time = {\n                    value: 1\n                }, this.velocityUniforms.delta = {\n                    value: 0\n                }, this.velocityUniforms.testing = {\n                    value: 1\n                }, this.velocityUniforms.separationDistance = {\n                    value: 1\n                }, this.velocityUniforms.alignmentDistance = {\n                    value: 1\n                }, this.velocityUniforms.cohesionDistance = {\n                    value: 1\n                }, this.velocityUniforms.speedLimit = {\n                    value: 1\n                }, this.velocityUniforms.freedomFactor = {\n                    value: 1\n                }, this.velocityUniforms.predator = {\n                    value: new T.Vector3\n                }, this.velocityVariable.material.defines.BOUNDS = C.toFixed(2), this.velocityVariable.wrapS = T.RepeatWrapping, this.velocityVariable.wrapT = T.RepeatWrapping, this.positionVariable.wrapS = T.RepeatWrapping, this.positionVariable.wrapT = T.RepeatWrapping;\n                const i = this.gpuCompute.init();\n                null !== i && console.error(i);\n            }\n            initGpgpuBirds() {\n                const e = ((e)=>{\n                    const t = new T.BufferGeometry;\n                    e.quantity && (z = Math.pow(2, e.quantity), S = z * z);\n                    const i = 3 * S, n = 3 * i, o = new T.BufferAttribute(new Float32Array(3 * n), 3), s = new T.BufferAttribute(new Float32Array(3 * n), 3), r = new T.BufferAttribute(new Float32Array(2 * n), 2), a = new T.BufferAttribute(new Float32Array(n), 1);\n                    t.setAttribute || (t.setAttribute = t.addAttribute), t.setAttribute(\"position\", o), t.setAttribute(\"birdColor\", s), t.setAttribute(\"reference\", r), t.setAttribute(\"birdVertex\", a);\n                    let l = 0;\n                    const h = function() {\n                        for(let e = 0; e < arguments.length; e++)o.array[l++] = arguments[e];\n                    }, c = e.wingSpan || 20, d = e.birdSize || 1;\n                    for(let e = 0; e < S; e++)h(0, -0, -20 * d, 0, 4 * d, -20 * d, 0, 0, 30 * d), h(0, 0, -15 * d, -c * d, 0, 0, 0, 0, 15 * d), h(0, 0, 15 * d, c * d, 0, 0, 0, 0, -15 * d);\n                    const u = {};\n                    for(l = 0; l < 3 * i; l++){\n                        const t = ~~(l / 3), i = t % z / z, n = ~~(t / z) / z, o = ~~(l / 9) / S, h = o.toString(), c = -1 != e.colorMode.indexOf(\"Gradient\");\n                        let d;\n                        d = !c && u[h] ? u[h] : e.effect.getNewCol(o), c || u[h] || (u[h] = d), s.array[3 * l + 0] = d.r, s.array[3 * l + 1] = d.g, s.array[3 * l + 2] = d.b, r.array[2 * l] = i, r.array[2 * l + 1] = n, a.array[l] = l % 9;\n                    }\n                    return t.scale(.2, .2, .2);\n                })(Object.assign({}, this.options, {\n                    effect: this\n                }));\n                this.birdUniforms = {\n                    color: {\n                        value: new T.Color(16720384)\n                    },\n                    texturePosition: {\n                        value: null\n                    },\n                    textureVelocity: {\n                        value: null\n                    },\n                    time: {\n                        value: 1\n                    },\n                    delta: {\n                        value: 0\n                    },\n                    birdSize: {\n                        value: this.options.birdSize\n                    }\n                };\n                const t = new T.ShaderMaterial({\n                    uniforms: this.birdUniforms,\n                    vertexShader: \"attribute vec2 reference;\\nattribute float birdVertex;\\n\\nattribute vec3 birdColor;\\n\\nuniform sampler2D texturePosition;\\nuniform sampler2D textureVelocity;\\n\\nvarying vec4 vColor;\\nvarying float z;\\n\\nuniform float time;\\nuniform float birdSize;\\n\\nvoid main() {\\n\\n  vec4 tmpPos = texture2D( texturePosition, reference );\\n  vec3 pos = tmpPos.xyz;\\n  vec3 velocity = normalize(texture2D( textureVelocity, reference ).xyz);\\n\\n  vec3 newPosition = position;\\n\\n  if ( birdVertex == 4.0 || birdVertex == 7.0 ) {\\n    // flap wings\\n    newPosition.y = sin( tmpPos.w ) * 5. * birdSize;\\n  }\\n\\n  newPosition = mat3( modelMatrix ) * newPosition;\\n\\n  velocity.z *= -1.;\\n  float xz = length( velocity.xz );\\n  float xyz = 1.;\\n  float x = sqrt( 1. - velocity.y * velocity.y );\\n\\n  float cosry = velocity.x / xz;\\n  float sinry = velocity.z / xz;\\n\\n  float cosrz = x / xyz;\\n  float sinrz = velocity.y / xyz;\\n\\n  mat3 maty =  mat3(\\n    cosry, 0, -sinry,\\n    0    , 1, 0     ,\\n    sinry, 0, cosry\\n  );\\n\\n  mat3 matz =  mat3(\\n    cosrz , sinrz, 0,\\n    -sinrz, cosrz, 0,\\n    0     , 0    , 1\\n  );\\n  newPosition =  maty * matz * newPosition;\\n  newPosition += pos;\\n  z = newPosition.z;\\n\\n  vColor = vec4( birdColor, 1.0 );\\n  gl_Position = projectionMatrix *  viewMatrix  * vec4( newPosition, 1.0 );\\n}\",\n                    fragmentShader: \"varying vec4 vColor;\\nvarying float z;\\nuniform vec3 color;\\nvoid main() {\\n  // Fake colors for now\\n  float rr = 0.2 + ( 1000. - z ) / 1000. * vColor.x;\\n  float gg = 0.2 + ( 1000. - z ) / 1000. * vColor.y;\\n  float bb = 0.2 + ( 1000. - z ) / 1000. * vColor.z;\\n  gl_FragColor = vec4( rr, gg, bb, 1. );\\n}\",\n                    side: T.DoubleSide\n                }), i = new T.Mesh(e, t);\n                return i.rotation.y = Math.PI / 2, i.matrixAutoUpdate = !1, i.updateMatrix(), this.scene.add(i);\n            }\n            getNewCol(e) {\n                const t = this.options, i = null != t.color1 ? t.color1 : 4456448, n = null != t.color2 ? t.color2 : 6684672, o = new T.Color(i), s = new T.Color(n);\n                let r, a;\n                if (a = -1 != t.colorMode.indexOf(\"Gradient\") ? Math.random() : e, 0 == t.colorMode.indexOf(\"variance\")) {\n                    const e = (o.r + Math.random() * s.r).clamp(0, 1), t = (o.g + Math.random() * s.g).clamp(0, 1), i = (o.b + Math.random() * s.b).clamp(0, 1);\n                    r = new T.Color(e, t, i);\n                } else r = 0 == t.colorMode.indexOf(\"mix\") ? new T.Color(i + a * n) : o.lerp(s, a);\n                return r;\n            }\n            onInit() {\n                this.camera = new T.PerspectiveCamera(75, this.width / this.height, 1, 3e3), this.camera.position.z = 350, this.fog = new T.Fog(16777215, 100, 1e3), this.mouseX = this.mouseY = 0;\n                const e = this.birds = [], t = this.boids = [], i = this.options;\n                let n, o;\n                if (M) try {\n                    this.initComputeRenderer(), this.valuesChanger = this.valuesChanger.bind(this), this.valuesChanger(), this.initGpgpuBirds();\n                } catch (e) {\n                    console.error(\"[vanta.js] birds init error: \", e);\n                }\n                else {\n                    const l = 6 * Math.pow(2, i.quantity);\n                    for(var s = 0; s < l; s++){\n                        n = t[s] = new R(i), n.position.x = 400 * Math.random() - 200, n.position.y = 400 * Math.random() - 200, n.position.z = 400 * Math.random() - 200, n.velocity.x = 2 * Math.random() - 1, n.velocity.y = 2 * Math.random() - 1, n.velocity.z = 2 * Math.random() - 1, n.setWorldSize(500, 500, 300);\n                        const h = -1 != i.colorMode.indexOf(\"Gradient\"), c = V(i), d = c.attributes.position.length, u = new T.BufferAttribute(new Float32Array(d), 3);\n                        if (h) for(var r = 0; r < c.index.array.length; r += 3)for(var a = 0; a <= 2; a++){\n                            const e = c.index.array[r + a], t = this.getNewCol();\n                            u.array[3 * e] = t.r, u.array[3 * e + 1] = t.g, u.array[3 * e + 2] = t.b;\n                        }\n                        else {\n                            const e = this.getNewCol(s / l);\n                            for(r = 0; r < u.array.length; r += 3)u.array[r] = e.r, u.array[r + 1] = e.g, u.array[r + 2] = e.b;\n                        }\n                        c.setAttribute(\"color\", u), o = e[s] = new T.Mesh(c, new T.MeshBasicMaterial({\n                            color: 16777215,\n                            side: T.DoubleSide,\n                            vertexColors: T.VertexColors\n                        })), o.phase = Math.floor(62.83 * Math.random()), o.position.x = t[s].position.x, o.position.y = t[s].position.y, o.position.z = t[s].position.z, this.scene.add(o);\n                    }\n                }\n            }\n            valuesChanger() {\n                this.velocityUniforms && (this.velocityUniforms.separationDistance.value = this.options.separation, this.velocityUniforms.alignmentDistance.value = this.options.alignment, this.velocityUniforms.speedLimit.value = this.options.speedLimit, this.velocityUniforms.cohesionDistance.value = this.options.cohesion);\n            }\n            onUpdate() {\n                this.now = performance.now(), this.last || (this.last = this.now);\n                let e = (this.now - this.last) / 1e3;\n                if (e > 1 && (e = 1), this.last = this.now, M) this.positionUniforms.time.value = this.now, this.positionUniforms.delta.value = e, this.velocityUniforms.time.value = this.now, this.velocityUniforms.delta.value = e, this.birdUniforms.time.value = this.now, this.birdUniforms.delta.value = e, this.velocityUniforms.predator.value.set(this.mouseX, -this.mouseY, 0), this.mouseX = 1e4, this.mouseY = 1e4, this.gpuCompute.compute(), this.birdUniforms.texturePosition.value = this.gpuCompute.getCurrentRenderTarget(this.positionVariable).texture, this.birdUniforms.textureVelocity.value = this.gpuCompute.getCurrentRenderTarget(this.velocityVariable).texture;\n                else {\n                    const e = this.birds, n = this.boids;\n                    let o, s;\n                    for(var t = 0, i = e.length; t < i; t++){\n                        o = n[t], o.run(n), s = e[t], s.rotation.y = Math.atan2(-o.velocity.z, o.velocity.x), s.rotation.z = Math.asin(o.velocity.y / o.velocity.length()), s.phase = (s.phase + (Math.max(0, s.rotation.z) + .1)) % 62.83;\n                        const i = 16, r = 13;\n                        s.geometry.attributes.position.array[i] = s.geometry.attributes.position.array[r] = 5 * Math.sin(s.phase) * this.options.birdSize, s.geometry.attributes.position.needsUpdate = !0, s.geometry.computeVertexNormals(), s.position.x = n[t].position.x, s.position.y = n[t].position.y, s.position.z = n[t].position.z;\n                    }\n                }\n            }\n            onMouseMove(e, t) {\n                if (this.mouseX = e - .5, this.mouseY = t - .5, !M) {\n                    const e = this.boids;\n                    let t;\n                    for(var i = new T.Vector3(this.mouseX * this.width, -this.mouseY * this.height, 0), n = 0, o = e.length; n < o; n++)t = e[n], i.z = t.position.z, t.repulse(i);\n                }\n            }\n            onDestroy() {}\n            onResize() {}\n        }\n        E.initClass();\n        const P = r.register(\"BIRDS\", E);\n        return t;\n    })());\n\n//# sourceMappingURL=index.8a74def4.js.map\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports._vantaEffect=t():e._vantaEffect=t()}(\"undefined\"!=typeof self?self:this,(()=>(()=>{\"use strict\";var e={d:(t,i)=>{for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};function i(){return\"undefined\"!=typeof navigator?/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<600:null}e.r(t),e.d(t,{default:()=>P}),Number.prototype.clamp=function(e,t){return Math.min(Math.max(this,e),t)};function n(e){for(;e.children&&e.children.length>0;)n(e.children[0]),e.remove(e.children[0]);e.geometry&&e.geometry.dispose(),e.material&&(Object.keys(e.material).forEach((t=>{e.material[t]&&null!==e.material[t]&&\"function\"==typeof e.material[t].dispose&&e.material[t].dispose()})),e.material.dispose())}const o=\"object\"==typeof window;let s=o&&window.THREE||{};o&&!window.VANTA&&(window.VANTA={});const r=o&&window.VANTA||{};r.register=(e,t)=>r[e]=e=>new t(e),r.version=\"0.5.24\";const a=function(){return Array.prototype.unshift.call(arguments,\"[VANTA]\"),console.error.apply(this,arguments)};r.VantaBase=class{constructor(e={}){if(!o)return!1;r.current=this,this.windowMouseMoveWrapper=this.windowMouseMoveWrapper.bind(this),this.windowTouchWrapper=this.windowTouchWrapper.bind(this),this.windowGyroWrapper=this.windowGyroWrapper.bind(this),this.resize=this.resize.bind(this),this.animationLoop=this.animationLoop.bind(this),this.restart=this.restart.bind(this);const t=\"function\"==typeof this.getDefaultOptions?this.getDefaultOptions():this.defaultOptions;if(this.options=Object.assign({mouseControls:!0,touchControls:!0,gyroControls:!1,minHeight:200,minWidth:200,scale:1,scaleMobile:1},t),(e instanceof HTMLElement||\"string\"==typeof e)&&(e={el:e}),Object.assign(this.options,e),this.options.THREE&&(s=this.options.THREE),this.el=this.options.el,null==this.el)a('Instance needs \"el\" param!');else if(!(this.options.el instanceof HTMLElement)){const e=this.el;if(this.el=(i=e,document.querySelector(i)),!this.el)return void a(\"Cannot find element\",e)}var i,n;this.prepareEl(),this.initThree(),this.setSize();try{this.init()}catch(e){return a(\"Init error\",e),this.renderer&&this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),void(this.options.backgroundColor&&(console.log(\"[VANTA] Falling back to backgroundColor\"),this.el.style.background=(n=this.options.backgroundColor,\"number\"==typeof n?\"#\"+(\"00000\"+n.toString(16)).slice(-6):n)))}this.initMouse(),this.resize(),this.animationLoop();const l=window.addEventListener;l(\"resize\",this.resize),window.requestAnimationFrame(this.resize),this.options.mouseControls&&(l(\"scroll\",this.windowMouseMoveWrapper),l(\"mousemove\",this.windowMouseMoveWrapper)),this.options.touchControls&&(l(\"touchstart\",this.windowTouchWrapper),l(\"touchmove\",this.windowTouchWrapper)),this.options.gyroControls&&l(\"deviceorientation\",this.windowGyroWrapper)}setOptions(e={}){Object.assign(this.options,e),this.triggerMouseMove()}prepareEl(){let e,t;if(\"undefined\"!=typeof Node&&Node.TEXT_NODE)for(e=0;e<this.el.childNodes.length;e++){const t=this.el.childNodes[e];if(t.nodeType===Node.TEXT_NODE){const e=document.createElement(\"span\");e.textContent=t.textContent,t.parentElement.insertBefore(e,t),t.remove()}}for(e=0;e<this.el.children.length;e++)t=this.el.children[e],\"static\"===getComputedStyle(t).position&&(t.style.position=\"relative\"),\"auto\"===getComputedStyle(t).zIndex&&(t.style.zIndex=1);\"static\"===getComputedStyle(this.el).position&&(this.el.style.position=\"relative\")}applyCanvasStyles(e,t={}){Object.assign(e.style,{position:\"absolute\",zIndex:0,top:0,left:0,background:\"\"}),Object.assign(e.style,t),e.classList.add(\"vanta-canvas\")}initThree(){s.WebGLRenderer?(this.renderer=new s.WebGLRenderer({alpha:!0,antialias:!0}),this.el.appendChild(this.renderer.domElement),this.applyCanvasStyles(this.renderer.domElement),isNaN(this.options.backgroundAlpha)&&(this.options.backgroundAlpha=1),this.scene=new s.Scene):console.warn(\"[VANTA] No THREE defined on window\")}getCanvasElement(){return this.renderer?this.renderer.domElement:this.p5renderer?this.p5renderer.canvas:void 0}getCanvasRect(){const e=this.getCanvasElement();return!!e&&e.getBoundingClientRect()}windowMouseMoveWrapper(e){const t=this.getCanvasRect();if(!t)return!1;const i=e.clientX-t.left,n=e.clientY-t.top;i>=0&&n>=0&&i<=t.width&&n<=t.height&&(this.mouseX=i,this.mouseY=n,this.options.mouseEase||this.triggerMouseMove(i,n))}windowTouchWrapper(e){const t=this.getCanvasRect();if(!t)return!1;if(1===e.touches.length){const i=e.touches[0].clientX-t.left,n=e.touches[0].clientY-t.top;i>=0&&n>=0&&i<=t.width&&n<=t.height&&(this.mouseX=i,this.mouseY=n,this.options.mouseEase||this.triggerMouseMove(i,n))}}windowGyroWrapper(e){const t=this.getCanvasRect();if(!t)return!1;const i=Math.round(2*e.alpha)-t.left,n=Math.round(2*e.beta)-t.top;i>=0&&n>=0&&i<=t.width&&n<=t.height&&(this.mouseX=i,this.mouseY=n,this.options.mouseEase||this.triggerMouseMove(i,n))}triggerMouseMove(e,t){void 0===e&&void 0===t&&(this.options.mouseEase?(e=this.mouseEaseX,t=this.mouseEaseY):(e=this.mouseX,t=this.mouseY)),this.uniforms&&(this.uniforms.iMouse.value.x=e/this.scale,this.uniforms.iMouse.value.y=t/this.scale);const i=e/this.width,n=t/this.height;\"function\"==typeof this.onMouseMove&&this.onMouseMove(i,n)}setSize(){this.scale||(this.scale=1),i()&&this.options.scaleMobile?this.scale=this.options.scaleMobile:this.options.scale&&(this.scale=this.options.scale),this.width=Math.max(this.el.offsetWidth,this.options.minWidth),this.height=Math.max(this.el.offsetHeight,this.options.minHeight)}initMouse(){(!this.mouseX&&!this.mouseY||this.mouseX===this.options.minWidth/2&&this.mouseY===this.options.minHeight/2)&&(this.mouseX=this.width/2,this.mouseY=this.height/2,this.triggerMouseMove(this.mouseX,this.mouseY))}resize(){this.setSize(),this.camera&&(this.camera.aspect=this.width/this.height,\"function\"==typeof this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix()),this.renderer&&(this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio/this.scale)),\"function\"==typeof this.onResize&&this.onResize()}isOnScreen(){const e=this.el.offsetHeight,t=this.el.getBoundingClientRect(),i=window.pageYOffset||(document.documentElement||document.body.parentNode||document.body).scrollTop,n=t.top+i;return n-window.innerHeight<=i&&i<=n+e}animationLoop(){this.t||(this.t=0),this.t2||(this.t2=0);const e=performance.now();if(this.prevNow){let t=(e-this.prevNow)/(1e3/60);t=Math.max(.2,Math.min(t,5)),this.t+=t,this.t2+=(this.options.speed||1)*t,this.uniforms&&(this.uniforms.iTime.value=.016667*this.t2)}return this.prevNow=e,this.options.mouseEase&&(this.mouseEaseX=this.mouseEaseX||this.mouseX||0,this.mouseEaseY=this.mouseEaseY||this.mouseY||0,Math.abs(this.mouseEaseX-this.mouseX)+Math.abs(this.mouseEaseY-this.mouseY)>.1&&(this.mouseEaseX+=.05*(this.mouseX-this.mouseEaseX),this.mouseEaseY+=.05*(this.mouseY-this.mouseEaseY),this.triggerMouseMove(this.mouseEaseX,this.mouseEaseY))),(this.isOnScreen()||this.options.forceAnimate)&&(\"function\"==typeof this.onUpdate&&this.onUpdate(),this.scene&&this.camera&&(this.renderer.render(this.scene,this.camera),this.renderer.setClearColor(this.options.backgroundColor,this.options.backgroundAlpha)),this.fps&&this.fps.update&&this.fps.update(),\"function\"==typeof this.afterRender&&this.afterRender()),this.req=window.requestAnimationFrame(this.animationLoop)}restart(){if(this.scene)for(;this.scene.children.length;)this.scene.remove(this.scene.children[0]);\"function\"==typeof this.onRestart&&this.onRestart(),this.init()}init(){\"function\"==typeof this.onInit&&this.onInit()}destroy(){\"function\"==typeof this.onDestroy&&this.onDestroy();const e=window.removeEventListener;e(\"touchstart\",this.windowTouchWrapper),e(\"touchmove\",this.windowTouchWrapper),e(\"scroll\",this.windowMouseMoveWrapper),e(\"mousemove\",this.windowMouseMoveWrapper),e(\"deviceorientation\",this.windowGyroWrapper),e(\"resize\",this.resize),window.cancelAnimationFrame(this.req);const t=this.scene;t&&t.children&&n(t),this.renderer&&(this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),this.renderer=null,this.scene=null),r.current===this&&(r.current=null)}};const l=r.VantaBase;let h=\"object\"==typeof window&&window.THREE,{Camera:c,ClampToEdgeWrapping:d,DataTexture:u,FloatType:p,Mesh:m,NearestFilter:f,PlaneBufferGeometry:v,RGBAFormat:y,Scene:g,ShaderMaterial:w,WebGLRenderTarget:b}=h||{};const x=function(e,t,i,n){n&&({Camera:c,ClampToEdgeWrapping:d,DataTexture:u,FloatType:p,Mesh:m,NearestFilter:f,PlaneBufferGeometry:v,RGBAFormat:y,Scene:g,ShaderMaterial:w,WebGLRenderTarget:b}=n),this.variables=[],this.currentTextureIndex=0;var o=p,s=new g,r=new c;r.position.z=1;var a={passThruTexture:{value:null}},l=T(\"uniform sampler2D passThruTexture;\\n\\nvoid main() {\\n\\n\\tvec2 uv = gl_FragCoord.xy / resolution.xy;\\n\\n\\tgl_FragColor = texture2D( passThruTexture, uv );\\n\\n}\\n\",a),h=new m(new v(2,2),l);function x(i){i.defines.resolution=\"vec2( \"+e.toFixed(1)+\", \"+t.toFixed(1)+\" )\"}function T(e,t){var i=new w({uniforms:t=t||{},vertexShader:\"void main()\\t{\\n\\n\\tgl_Position = vec4( position, 1.0 );\\n\\n}\\n\",fragmentShader:e});return x(i),i}s.add(h),this.setDataType=function(e){return o=e,this},this.addVariable=function(e,t,i){var n={name:e,initialValueTexture:i,material:this.createShaderMaterial(t),dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:f,magFilter:f};return this.variables.push(n),n},this.setVariableDependencies=function(e,t){e.dependencies=t},this.init=function(){if(!i.capabilities.isWebGL2&&!i.extensions.get(\"OES_texture_float\"))return\"No OES_texture_float support for float textures.\";if(0===i.capabilities.maxVertexTextures)return\"No support for vertex shader textures.\";for(var n=0;n<this.variables.length;n++){var o=this.variables[n];o.renderTargets[0]=this.createRenderTarget(e,t,o.wrapS,o.wrapT,o.minFilter,o.magFilter),o.renderTargets[1]=this.createRenderTarget(e,t,o.wrapS,o.wrapT,o.minFilter,o.magFilter),this.renderTexture(o.initialValueTexture,o.renderTargets[0]),this.renderTexture(o.initialValueTexture,o.renderTargets[1]);var s=o.material,r=s.uniforms;if(null!==o.dependencies)for(var a=0;a<o.dependencies.length;a++){var l=o.dependencies[a];if(l.name!==o.name){for(var h=!1,c=0;c<this.variables.length;c++)if(l.name===this.variables[c].name){h=!0;break}if(!h)return\"Variable dependency not found. Variable=\"+o.name+\", dependency=\"+l.name}r[l.name]={value:null},s.fragmentShader=\"\\nuniform sampler2D \"+l.name+\";\\n\"+s.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){for(var e=this.currentTextureIndex,t=0===this.currentTextureIndex?1:0,i=0,n=this.variables.length;i<n;i++){var o=this.variables[i];if(null!==o.dependencies)for(var s=o.material.uniforms,r=0,a=o.dependencies.length;r<a;r++){var l=o.dependencies[r];s[l.name].value=l.renderTargets[e].texture}this.doRenderTarget(o.material,o.renderTargets[t])}this.currentTextureIndex=t},this.getCurrentRenderTarget=function(e){return e.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(e){return e.renderTargets[0===this.currentTextureIndex?1:0]},this.addResolutionDefine=x,this.createShaderMaterial=T,this.createRenderTarget=function(i,n,s,r,a,l){return new b(i=i||e,n=n||t,{wrapS:s=s||d,wrapT:r=r||d,minFilter:a=a||f,magFilter:l=l||f,format:y,type:o,stencilBuffer:!1,depthBuffer:!1})},this.createTexture=function(){var i=new Float32Array(e*t*4);return new u(i,e,t,y,p)},this.renderTexture=function(e,t){a.passThruTexture.value=e,this.doRenderTarget(l,t),a.passThruTexture.value=null},this.doRenderTarget=function(e,t){var n=i.getRenderTarget();h.material=e,i.setRenderTarget(t),i.render(s,r),h.material=l,i.setRenderTarget(n)}};let T=\"object\"==typeof window&&window.THREE;const M=!i();let z=32,S=z*z;const C=800,V=(e={})=>{const t=new T.BufferGeometry,i=[];function n(t,n,o){const s=1.5*(e.birdSize||1);i.push(new T.Vector3(t*s,n*s,o*s))}n(5,0,0),n(-5,-1,1),n(-5,0,0),n(-5,-2,-1),n(0,2,-6),n(0,2,6),n(2,0,0),n(-3,0,0),t.setFromPoints(i);const o=[];return o.push(0,2,1),o.push(4,7,6),o.push(5,6,7),t.setIndex(o),t};class R{constructor(e){var t,i,n=new T.Vector3,o=500,s=500,r=200,a=.1,l=e;this.position=new T.Vector3,this.velocity=new T.Vector3,t=new T.Vector3,this.setGoal=function(e){i=e},this.setWorldSize=function(e,t,i){o=e,s=t,r=i},this.run=function(e){n.set(-o,this.position.y,this.position.z),(n=this.avoid(n)).multiplyScalar(5),t.add(n),n.set(o,this.position.y,this.position.z),(n=this.avoid(n)).multiplyScalar(5),t.add(n),n.set(this.position.x,-s,this.position.z),(n=this.avoid(n)).multiplyScalar(5),t.add(n),n.set(this.position.x,s,this.position.z),(n=this.avoid(n)).multiplyScalar(5),t.add(n),n.set(this.position.x,this.position.y,-r),(n=this.avoid(n)).multiplyScalar(5),t.add(n),n.set(this.position.x,this.position.y,r),(n=this.avoid(n)).multiplyScalar(5),t.add(n),Math.random()>.5&&this.flock(e),this.move()},this.flock=function(e){i&&t.add(this.reach(i,.005)),t.add(this.alignment(e)),t.add(this.cohesion(e)),t.add(this.separation(e))},this.move=function(){this.velocity.add(t);var e=this.velocity.length();e>2.5&&this.velocity.divideScalar(e/2.5),this.position.add(this.velocity),t.set(0,0,0)},this.checkBounds=function(){this.position.x>o&&(this.position.x=-o),this.position.x<-o&&(this.position.x=o),this.position.y>s&&(this.position.y=-s),this.position.y<-s&&(this.position.y=s),this.position.z>r&&(this.position.z=-r),this.position.z<-r&&(this.position.z=r)},this.avoid=function(e){var t=new T.Vector3;return t.copy(this.position),t.sub(e),t.multiplyScalar(1/this.position.distanceToSquared(e)),t},this.repulse=function(e){var i=this.position.distanceTo(e);if(i<150){var n=new T.Vector3;n.subVectors(this.position,e),n.multiplyScalar(.5/i),t.add(n)}},this.reach=function(e,t){var i=new T.Vector3;return i.subVectors(e,this.position),i.multiplyScalar(t),i},this.alignment=function(e){var t,i,n=new T.Vector3,o=0;const s=100*l.alignment/20;for(var r=0,h=e.length;r<h;r++)Math.random()>.6||(i=(t=e[r]).position.distanceTo(this.position))>0&&i<=s&&(n.add(t.velocity),o++);if(o>0){n.divideScalar(o);var c=n.length();c>a&&n.divideScalar(c/a)}return n},this.cohesion=function(e){var t,i,n=new T.Vector3,o=new T.Vector3,s=0;const r=100*l.cohesion/20;for(var h=0,c=e.length;h<c;h++)Math.random()>.6||(i=(t=e[h]).position.distanceTo(this.position))>0&&i<=r&&(n.add(t.position),s++);s>0&&n.divideScalar(s),o.subVectors(n,this.position);var d=o.length();return d>a&&o.divideScalar(d/a),o},this.separation=function(e){var t,i,n=new T.Vector3,o=new T.Vector3;const s=100*l.separation/20;for(var r=0,a=e.length;r<a;r++)Math.random()>.6||(i=(t=e[r]).position.distanceTo(this.position))>0&&i<=s&&(o.subVectors(this.position,t.position),o.normalize(),o.divideScalar(i),n.add(o));return n}}}class E extends l{static initClass(){this.prototype.defaultOptions={backgroundColor:465199,color1:16711680,color2:53759,colorMode:\"varianceGradient\",birdSize:1,wingSpan:30,speedLimit:5,separation:20,alignment:20,cohesion:20,quantity:5}}constructor(e){T=e.THREE||T,super(e)}initComputeRenderer(){this.gpuCompute=new x(z,z,this.renderer,T);const e=this.gpuCompute.createTexture(),t=this.gpuCompute.createTexture();!function(e){const t=e.image.data;let i=0;const n=t.length;(()=>{const e=[];for(;i<n;){const n=Math.random()*C-400,o=Math.random()*C-400,s=Math.random()*C-400;t[i+0]=n,t[i+1]=o,t[i+2]=s,t[i+3]=1,e.push(i+=4)}})()}(e),function(e){const t=e.image.data;let i=0;const n=t.length;(()=>{const e=[];for(;i<n;){const n=Math.random()-.5,o=Math.random()-.5,s=Math.random()-.5;t[i+0]=10*n,t[i+1]=10*o,t[i+2]=10*s,t[i+3]=1,e.push(i+=4)}})()}(t),this.velocityVariable=this.gpuCompute.addVariable(\"textureVelocity\",\"uniform float time;\\nuniform float testing;\\nuniform float delta; // about 0.016\\nuniform float separationDistance; // 20\\nuniform float alignmentDistance; // 40\\nuniform float cohesionDistance;\\nuniform float speedLimit;\\nuniform float freedomFactor;\\nuniform vec3 predator;\\n\\nconst float width = resolution.x;\\nconst float height = resolution.y;\\n\\nconst float PI = 3.141592653589793;\\nconst float PI_2 = PI * 2.0;\\n// const float VISION = PI * 0.55;\\n\\nfloat zoneRadius = 40.0;\\nfloat zoneRadiusSquared = 1600.0;\\n\\nfloat separationThresh = 0.45;\\nfloat alignmentThresh = 0.65;\\n\\nconst float UPPER_BOUNDS = BOUNDS;\\nconst float LOWER_BOUNDS = -UPPER_BOUNDS;\\n\\nfloat rand(vec2 co){\\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\nvoid main() {\\n\\n  zoneRadius = separationDistance + alignmentDistance + cohesionDistance;\\n  separationThresh = separationDistance / zoneRadius;\\n  alignmentThresh = ( separationDistance + alignmentDistance ) / zoneRadius;\\n  zoneRadiusSquared = zoneRadius * zoneRadius;\\n\\n\\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\\n  vec3 birdPosition, birdVelocity;\\n\\n  vec3 selfPosition = texture2D( texturePosition, uv ).xyz;\\n  vec3 selfVelocity = texture2D( textureVelocity, uv ).xyz;\\n\\n  float dist;\\n  vec3 dir; // direction\\n  float distSquared;\\n\\n  float separationSquared = separationDistance * separationDistance;\\n  float cohesionSquared = cohesionDistance * cohesionDistance;\\n\\n  float f;\\n  float percent;\\n\\n  vec3 velocity = selfVelocity;\\n\\n  float limit = speedLimit;\\n\\n  dir = predator * UPPER_BOUNDS - selfPosition;\\n  dir.z = 0.;\\n  // dir.z *= 0.6;\\n  dist = length( dir );\\n  distSquared = dist * dist;\\n\\n  float preyRadius = 150.0;\\n  float preyRadiusSq = preyRadius * preyRadius;\\n\\n  // move birds away from predator\\n  if (dist < preyRadius) {\\n\\n    f = ( distSquared / preyRadiusSq - 1.0 ) * delta * 100.;\\n    velocity += normalize( dir ) * f;\\n    limit += 5.0;\\n  }\\n\\n  // if (testing == 0.0) {}\\n  // if ( rand( uv + time ) < freedomFactor ) {}\\n\\n  // Attract flocks to the center\\n  vec3 central = vec3( 0., 0., 0. );\\n  dir = selfPosition - central;\\n  dist = length( dir );\\n\\n  dir.y *= 2.5;\\n  velocity -= normalize( dir ) * delta * 5.;\\n\\n  for (float y=0.0;y<height;y++) {\\n    for (float x=0.0;x<width;x++) {\\n\\n      vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;\\n      birdPosition = texture2D( texturePosition, ref ).xyz;\\n\\n      dir = birdPosition - selfPosition;\\n      dist = length(dir);\\n\\n      if (dist < 0.0001) continue;\\n\\n      distSquared = dist * dist;\\n\\n      if (distSquared > zoneRadiusSquared ) continue;\\n\\n      percent = distSquared / zoneRadiusSquared;\\n\\n      if ( percent < separationThresh ) { // low\\n\\n        // Separation - Move apart for comfort\\n        f = (separationThresh / percent - 1.0) * delta;\\n        velocity -= normalize(dir) * f;\\n\\n      } else if ( percent < alignmentThresh ) { // high\\n\\n        // Alignment - fly the same direction\\n        float threshDelta = alignmentThresh - separationThresh;\\n        float adjustedPercent = ( percent - separationThresh ) / threshDelta;\\n\\n        birdVelocity = texture2D( textureVelocity, ref ).xyz;\\n\\n        f = ( 0.5 - cos( adjustedPercent * PI_2 ) * 0.5 + 0.5 ) * delta;\\n        velocity += normalize(birdVelocity) * f;\\n\\n      } else {\\n\\n        // Attraction / Cohesion - move closer\\n        float threshDelta = 1.0 - alignmentThresh;\\n        float adjustedPercent = ( percent - alignmentThresh ) / threshDelta;\\n\\n        f = ( 0.5 - ( cos( adjustedPercent * PI_2 ) * -0.5 + 0.5 ) ) * delta;\\n\\n        velocity += normalize(dir) * f;\\n\\n      }\\n    }\\n  }\\n\\n  // this make tends to fly around than down or up\\n  // if (velocity.y > 0.) velocity.y *= (1. - 0.2 * delta);\\n\\n  // Speed Limits\\n  if ( length( velocity ) > limit ) {\\n    velocity = normalize( velocity ) * limit;\\n  }\\n\\n  gl_FragColor = vec4( velocity, 1.0 );\\n\\n}\",t),this.positionVariable=this.gpuCompute.addVariable(\"texturePosition\",\"uniform float time;\\nuniform float delta;\\n\\nvoid main() {\\n\\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\\n  vec4 tmpPos = texture2D( texturePosition, uv );\\n  vec3 position = tmpPos.xyz;\\n  vec3 velocity = texture2D( textureVelocity, uv ).xyz;\\n\\n  float phase = tmpPos.w;\\n\\n  phase = mod( ( phase + delta +\\n    length( velocity.xz ) * delta * 3. +\\n    max( velocity.y, 0.0 ) * delta * 6. ), 62.83 );\\n\\n  gl_FragColor = vec4( position + velocity * delta * 15. , phase );\\n\\n}\",e),this.gpuCompute.setVariableDependencies(this.velocityVariable,[this.positionVariable,this.velocityVariable]),this.gpuCompute.setVariableDependencies(this.positionVariable,[this.positionVariable,this.velocityVariable]),this.positionUniforms=this.positionVariable.material.uniforms,this.velocityUniforms=this.velocityVariable.material.uniforms,this.positionUniforms.time={value:0},this.positionUniforms.delta={value:0},this.velocityUniforms.time={value:1},this.velocityUniforms.delta={value:0},this.velocityUniforms.testing={value:1},this.velocityUniforms.separationDistance={value:1},this.velocityUniforms.alignmentDistance={value:1},this.velocityUniforms.cohesionDistance={value:1},this.velocityUniforms.speedLimit={value:1},this.velocityUniforms.freedomFactor={value:1},this.velocityUniforms.predator={value:new T.Vector3},this.velocityVariable.material.defines.BOUNDS=C.toFixed(2),this.velocityVariable.wrapS=T.RepeatWrapping,this.velocityVariable.wrapT=T.RepeatWrapping,this.positionVariable.wrapS=T.RepeatWrapping,this.positionVariable.wrapT=T.RepeatWrapping;const i=this.gpuCompute.init();null!==i&&console.error(i)}initGpgpuBirds(){const e=(e=>{const t=new T.BufferGeometry;e.quantity&&(z=Math.pow(2,e.quantity),S=z*z);const i=3*S,n=3*i,o=new T.BufferAttribute(new Float32Array(3*n),3),s=new T.BufferAttribute(new Float32Array(3*n),3),r=new T.BufferAttribute(new Float32Array(2*n),2),a=new T.BufferAttribute(new Float32Array(n),1);t.setAttribute||(t.setAttribute=t.addAttribute),t.setAttribute(\"position\",o),t.setAttribute(\"birdColor\",s),t.setAttribute(\"reference\",r),t.setAttribute(\"birdVertex\",a);let l=0;const h=function(){for(let e=0;e<arguments.length;e++)o.array[l++]=arguments[e]},c=e.wingSpan||20,d=e.birdSize||1;for(let e=0;e<S;e++)h(0,-0,-20*d,0,4*d,-20*d,0,0,30*d),h(0,0,-15*d,-c*d,0,0,0,0,15*d),h(0,0,15*d,c*d,0,0,0,0,-15*d);const u={};for(l=0;l<3*i;l++){const t=~~(l/3),i=t%z/z,n=~~(t/z)/z,o=~~(l/9)/S,h=o.toString(),c=-1!=e.colorMode.indexOf(\"Gradient\");let d;d=!c&&u[h]?u[h]:e.effect.getNewCol(o),c||u[h]||(u[h]=d),s.array[3*l+0]=d.r,s.array[3*l+1]=d.g,s.array[3*l+2]=d.b,r.array[2*l]=i,r.array[2*l+1]=n,a.array[l]=l%9}return t.scale(.2,.2,.2)})(Object.assign({},this.options,{effect:this}));this.birdUniforms={color:{value:new T.Color(16720384)},texturePosition:{value:null},textureVelocity:{value:null},time:{value:1},delta:{value:0},birdSize:{value:this.options.birdSize}};const t=new T.ShaderMaterial({uniforms:this.birdUniforms,vertexShader:\"attribute vec2 reference;\\nattribute float birdVertex;\\n\\nattribute vec3 birdColor;\\n\\nuniform sampler2D texturePosition;\\nuniform sampler2D textureVelocity;\\n\\nvarying vec4 vColor;\\nvarying float z;\\n\\nuniform float time;\\nuniform float birdSize;\\n\\nvoid main() {\\n\\n  vec4 tmpPos = texture2D( texturePosition, reference );\\n  vec3 pos = tmpPos.xyz;\\n  vec3 velocity = normalize(texture2D( textureVelocity, reference ).xyz);\\n\\n  vec3 newPosition = position;\\n\\n  if ( birdVertex == 4.0 || birdVertex == 7.0 ) {\\n    // flap wings\\n    newPosition.y = sin( tmpPos.w ) * 5. * birdSize;\\n  }\\n\\n  newPosition = mat3( modelMatrix ) * newPosition;\\n\\n  velocity.z *= -1.;\\n  float xz = length( velocity.xz );\\n  float xyz = 1.;\\n  float x = sqrt( 1. - velocity.y * velocity.y );\\n\\n  float cosry = velocity.x / xz;\\n  float sinry = velocity.z / xz;\\n\\n  float cosrz = x / xyz;\\n  float sinrz = velocity.y / xyz;\\n\\n  mat3 maty =  mat3(\\n    cosry, 0, -sinry,\\n    0    , 1, 0     ,\\n    sinry, 0, cosry\\n  );\\n\\n  mat3 matz =  mat3(\\n    cosrz , sinrz, 0,\\n    -sinrz, cosrz, 0,\\n    0     , 0    , 1\\n  );\\n  newPosition =  maty * matz * newPosition;\\n  newPosition += pos;\\n  z = newPosition.z;\\n\\n  vColor = vec4( birdColor, 1.0 );\\n  gl_Position = projectionMatrix *  viewMatrix  * vec4( newPosition, 1.0 );\\n}\",fragmentShader:\"varying vec4 vColor;\\nvarying float z;\\nuniform vec3 color;\\nvoid main() {\\n  // Fake colors for now\\n  float rr = 0.2 + ( 1000. - z ) / 1000. * vColor.x;\\n  float gg = 0.2 + ( 1000. - z ) / 1000. * vColor.y;\\n  float bb = 0.2 + ( 1000. - z ) / 1000. * vColor.z;\\n  gl_FragColor = vec4( rr, gg, bb, 1. );\\n}\",side:T.DoubleSide}),i=new T.Mesh(e,t);return i.rotation.y=Math.PI/2,i.matrixAutoUpdate=!1,i.updateMatrix(),this.scene.add(i)}getNewCol(e){const t=this.options,i=null!=t.color1?t.color1:4456448,n=null!=t.color2?t.color2:6684672,o=new T.Color(i),s=new T.Color(n);let r,a;if(a=-1!=t.colorMode.indexOf(\"Gradient\")?Math.random():e,0==t.colorMode.indexOf(\"variance\")){const e=(o.r+Math.random()*s.r).clamp(0,1),t=(o.g+Math.random()*s.g).clamp(0,1),i=(o.b+Math.random()*s.b).clamp(0,1);r=new T.Color(e,t,i)}else r=0==t.colorMode.indexOf(\"mix\")?new T.Color(i+a*n):o.lerp(s,a);return r}onInit(){this.camera=new T.PerspectiveCamera(75,this.width/this.height,1,3e3),this.camera.position.z=350,this.fog=new T.Fog(16777215,100,1e3),this.mouseX=this.mouseY=0;const e=this.birds=[],t=this.boids=[],i=this.options;let n,o;if(M)try{this.initComputeRenderer(),this.valuesChanger=this.valuesChanger.bind(this),this.valuesChanger(),this.initGpgpuBirds()}catch(e){console.error(\"[vanta.js] birds init error: \",e)}else{const l=6*Math.pow(2,i.quantity);for(var s=0;s<l;s++){n=t[s]=new R(i),n.position.x=400*Math.random()-200,n.position.y=400*Math.random()-200,n.position.z=400*Math.random()-200,n.velocity.x=2*Math.random()-1,n.velocity.y=2*Math.random()-1,n.velocity.z=2*Math.random()-1,n.setWorldSize(500,500,300);const h=-1!=i.colorMode.indexOf(\"Gradient\"),c=V(i),d=c.attributes.position.length,u=new T.BufferAttribute(new Float32Array(d),3);if(h)for(var r=0;r<c.index.array.length;r+=3)for(var a=0;a<=2;a++){const e=c.index.array[r+a],t=this.getNewCol();u.array[3*e]=t.r,u.array[3*e+1]=t.g,u.array[3*e+2]=t.b}else{const e=this.getNewCol(s/l);for(r=0;r<u.array.length;r+=3)u.array[r]=e.r,u.array[r+1]=e.g,u.array[r+2]=e.b}c.setAttribute(\"color\",u),o=e[s]=new T.Mesh(c,new T.MeshBasicMaterial({color:16777215,side:T.DoubleSide,vertexColors:T.VertexColors})),o.phase=Math.floor(62.83*Math.random()),o.position.x=t[s].position.x,o.position.y=t[s].position.y,o.position.z=t[s].position.z,this.scene.add(o)}}}valuesChanger(){this.velocityUniforms&&(this.velocityUniforms.separationDistance.value=this.options.separation,this.velocityUniforms.alignmentDistance.value=this.options.alignment,this.velocityUniforms.speedLimit.value=this.options.speedLimit,this.velocityUniforms.cohesionDistance.value=this.options.cohesion)}onUpdate(){this.now=performance.now(),this.last||(this.last=this.now);let e=(this.now-this.last)/1e3;if(e>1&&(e=1),this.last=this.now,M)this.positionUniforms.time.value=this.now,this.positionUniforms.delta.value=e,this.velocityUniforms.time.value=this.now,this.velocityUniforms.delta.value=e,this.birdUniforms.time.value=this.now,this.birdUniforms.delta.value=e,this.velocityUniforms.predator.value.set(this.mouseX,-this.mouseY,0),this.mouseX=1e4,this.mouseY=1e4,this.gpuCompute.compute(),this.birdUniforms.texturePosition.value=this.gpuCompute.getCurrentRenderTarget(this.positionVariable).texture,this.birdUniforms.textureVelocity.value=this.gpuCompute.getCurrentRenderTarget(this.velocityVariable).texture;else{const e=this.birds,n=this.boids;let o,s;for(var t=0,i=e.length;t<i;t++){o=n[t],o.run(n),s=e[t],s.rotation.y=Math.atan2(-o.velocity.z,o.velocity.x),s.rotation.z=Math.asin(o.velocity.y/o.velocity.length()),s.phase=(s.phase+(Math.max(0,s.rotation.z)+.1))%62.83;const i=16,r=13;s.geometry.attributes.position.array[i]=s.geometry.attributes.position.array[r]=5*Math.sin(s.phase)*this.options.birdSize,s.geometry.attributes.position.needsUpdate=!0,s.geometry.computeVertexNormals(),s.position.x=n[t].position.x,s.position.y=n[t].position.y,s.position.z=n[t].position.z}}}onMouseMove(e,t){if(this.mouseX=e-.5,this.mouseY=t-.5,!M){const e=this.boids;let t;for(var i=new T.Vector3(this.mouseX*this.width,-this.mouseY*this.height,0),n=0,o=e.length;n<o;n++)t=e[n],i.z=t.position.z,t.repulse(i)}}onDestroy(){}onResize(){}}E.initClass();const P=r.register(\"BIRDS\",E);return t})()));"],"names":["e","t","exports","module","define","amd","_vantaEffect","self","d","i","n","o","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","navigator","test","userAgent","window","innerWidth","default","P","Number","clamp","Math","min","max","s","THREE","VANTA","register","version","a","Array","unshift","arguments","console","error","apply","VantaBase","constructor","current","windowMouseMoveWrapper","bind","windowTouchWrapper","windowGyroWrapper","resize","animationLoop","restart","getDefaultOptions","defaultOptions","options","assign","mouseControls","touchControls","gyroControls","minHeight","minWidth","scale","scaleMobile","HTMLElement","el","document","querySelector","prepareEl","initThree","setSize","init","renderer","domElement","removeChild","backgroundColor","log","style","background","toString","slice","initMouse","l","addEventListener","requestAnimationFrame","setOptions","triggerMouseMove","Node","TEXT_NODE","childNodes","length","nodeType","createElement","textContent","parentElement","insertBefore","remove","children","getComputedStyle","position","zIndex","applyCanvasStyles","top","left","classList","add","WebGLRenderer","alpha","antialias","appendChild","isNaN","backgroundAlpha","scene","Scene","warn","getCanvasElement","p5renderer","canvas","getCanvasRect","getBoundingClientRect","clientX","clientY","width","height","mouseX","mouseY","mouseEase","touches","round","beta","mouseEaseX","mouseEaseY","uniforms","iMouse","x","y","onMouseMove","offsetWidth","offsetHeight","camera","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","onResize","isOnScreen","pageYOffset","documentElement","body","parentNode","scrollTop","innerHeight","t2","performance","now","prevNow","speed","iTime","abs","forceAnimate","onUpdate","render","setClearColor","fps","update","afterRender","req","onRestart","onInit","destroy","onDestroy","removeEventListener","cancelAnimationFrame","geometry","dispose","material","keys","forEach","Camera","c","ClampToEdgeWrapping","DataTexture","u","FloatType","p","Mesh","m","NearestFilter","f","PlaneBufferGeometry","v","RGBAFormat","g","ShaderMaterial","w","WebGLRenderTarget","b","h","variables","currentTextureIndex","z","passThruTexture","T","defines","resolution","toFixed","vertexShader","fragmentShader","setDataType","addVariable","name","initialValueTexture","createShaderMaterial","dependencies","renderTargets","wrapS","wrapT","minFilter","magFilter","push","setVariableDependencies","capabilities","isWebGL2","extensions","maxVertexTextures","createRenderTarget","renderTexture","compute","texture","doRenderTarget","getCurrentRenderTarget","getAlternateRenderTarget","addResolutionDefine","format","type","stencilBuffer","depthBuffer","createTexture","Float32Array","getRenderTarget","setRenderTarget","M","S","V","BufferGeometry","birdSize","Vector3","setFromPoints","setIndex","R","velocity","setGoal","setWorldSize","run","set","avoid","multiplyScalar","random","flock","move","reach","alignment","cohesion","separation","divideScalar","checkBounds","copy","sub","distanceToSquared","repulse","distanceTo","subVectors","normalize","E","initClass","color1","color2","colorMode","wingSpan","speedLimit","quantity","initComputeRenderer","gpuCompute","image","data","velocityVariable","positionVariable","positionUniforms","velocityUniforms","time","delta","testing","separationDistance","alignmentDistance","cohesionDistance","freedomFactor","predator","BOUNDS","C","RepeatWrapping","initGpgpuBirds","pow","BufferAttribute","setAttribute","addAttribute","array","indexOf","effect","getNewCol","birdUniforms","color","Color","texturePosition","textureVelocity","side","DoubleSide","rotation","PI","matrixAutoUpdate","updateMatrix","lerp","PerspectiveCamera","fog","Fog","birds","boids","valuesChanger","attributes","index","MeshBasicMaterial","vertexColors","VertexColors","phase","floor","last","atan2","asin","sin","needsUpdate","computeVertexNormals"],"version":3,"file":"index.8a74def4.js.map"}