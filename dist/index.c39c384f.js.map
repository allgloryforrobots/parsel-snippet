{"mappings":"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AC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EA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","sources":["<anon>","src/three.min.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2010-2021 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */ !function(t, e) {\n    \"object\" == typeof exports && \"undefined\" != typeof module ? e(exports) : \"function\" == typeof define && define.amd ? define([\n        \"exports\"\n    ], e) : e((t = \"undefined\" != typeof globalThis ? globalThis : t || self).THREE = {});\n}(this, function(t) {\n    \"use strict\";\n    const e = \"134\", n = 100, i = 300, r = 301, s = 302, a = 303, o = 304, l = 306, c = 307, h = 1e3, u = 1001, d = 1002, p = 1003, m = 1004, f = 1005, g = 1006, v = 1007, y = 1008, x = 1009, _ = 1012, M = 1014, b = 1015, w = 1016, S = 1020, T = 1022, E = 1023, A = 1026, L = 1027, R = 33776, C = 33777, P = 33778, I = 33779, D = 35840, N = 35841, z = 35842, B = 35843, F = 37492, O = 37496, U = 2300, H = 2301, G = 2302, k = 2400, V = 2401, W = 2402, j = 2500, q = 2501, X = 3e3, Y = 3001, J = 3007, Z = 3002, Q = 3004, K = 3005, $ = 3006, tt = 7680, et = 35044, nt = 35048, it = \"300 es\";\n    class rt {\n        addEventListener(t, e) {\n            void 0 === this._listeners && (this._listeners = {});\n            const n = this._listeners;\n            void 0 === n[t] && (n[t] = []), -1 === n[t].indexOf(e) && n[t].push(e);\n        }\n        hasEventListener(t, e) {\n            if (void 0 === this._listeners) return !1;\n            const n = this._listeners;\n            return void 0 !== n[t] && -1 !== n[t].indexOf(e);\n        }\n        removeEventListener(t, e) {\n            if (void 0 === this._listeners) return;\n            const n = this._listeners[t];\n            if (void 0 !== n) {\n                const t = n.indexOf(e);\n                -1 !== t && n.splice(t, 1);\n            }\n        }\n        dispatchEvent(t) {\n            if (void 0 === this._listeners) return;\n            const e = this._listeners[t.type];\n            if (void 0 !== e) {\n                t.target = this;\n                const n = e.slice(0);\n                for(let e = 0, i = n.length; e < i; e++)n[e].call(this, t);\n                t.target = null;\n            }\n        }\n    }\n    let st = 1234567;\n    const at = Math.PI / 180, ot = 180 / Math.PI, lt = [];\n    for(let t = 0; t < 256; t++)lt[t] = (t < 16 ? \"0\" : \"\") + t.toString(16);\n    const ct = \"undefined\" != typeof crypto && \"randomUUID\" in crypto;\n    function ht() {\n        if (ct) return crypto.randomUUID().toUpperCase();\n        const t = 4294967295 * Math.random() | 0, e = 4294967295 * Math.random() | 0, n = 4294967295 * Math.random() | 0, i = 4294967295 * Math.random() | 0;\n        return (lt[255 & t] + lt[t >> 8 & 255] + lt[t >> 16 & 255] + lt[t >> 24 & 255] + \"-\" + lt[255 & e] + lt[e >> 8 & 255] + \"-\" + lt[e >> 16 & 15 | 64] + lt[e >> 24 & 255] + \"-\" + lt[63 & n | 128] + lt[n >> 8 & 255] + \"-\" + lt[n >> 16 & 255] + lt[n >> 24 & 255] + lt[255 & i] + lt[i >> 8 & 255] + lt[i >> 16 & 255] + lt[i >> 24 & 255]).toUpperCase();\n    }\n    function ut(t, e, n) {\n        return Math.max(e, Math.min(n, t));\n    }\n    function dt(t, e) {\n        return (t % e + e) % e;\n    }\n    function pt(t, e, n) {\n        return (1 - n) * t + n * e;\n    }\n    function mt(t) {\n        return 0 == (t & t - 1) && 0 !== t;\n    }\n    function ft(t) {\n        return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));\n    }\n    function gt(t) {\n        return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));\n    }\n    var vt = Object.freeze({\n        __proto__: null,\n        DEG2RAD: at,\n        RAD2DEG: ot,\n        generateUUID: ht,\n        clamp: ut,\n        euclideanModulo: dt,\n        mapLinear: function(t, e, n, i, r) {\n            return i + (t - e) * (r - i) / (n - e);\n        },\n        inverseLerp: function(t, e, n) {\n            return t !== e ? (n - t) / (e - t) : 0;\n        },\n        lerp: pt,\n        damp: function(t, e, n, i) {\n            return pt(t, e, 1 - Math.exp(-n * i));\n        },\n        pingpong: function(t, e = 1) {\n            return e - Math.abs(dt(t, 2 * e) - e);\n        },\n        smoothstep: function(t, e, n) {\n            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * (3 - 2 * t);\n        },\n        smootherstep: function(t, e, n) {\n            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10);\n        },\n        randInt: function(t, e) {\n            return t + Math.floor(Math.random() * (e - t + 1));\n        },\n        randFloat: function(t, e) {\n            return t + Math.random() * (e - t);\n        },\n        randFloatSpread: function(t) {\n            return t * (.5 - Math.random());\n        },\n        seededRandom: function(t) {\n            return void 0 !== t && (st = t % 2147483647), st = 16807 * st % 2147483647, (st - 1) / 2147483646;\n        },\n        degToRad: function(t) {\n            return t * at;\n        },\n        radToDeg: function(t) {\n            return t * ot;\n        },\n        isPowerOfTwo: mt,\n        ceilPowerOfTwo: ft,\n        floorPowerOfTwo: gt,\n        setQuaternionFromProperEuler: function(t, e, n, i, r) {\n            const s = Math.cos, a = Math.sin, o = s(n / 2), l = a(n / 2), c = s((e + i) / 2), h = a((e + i) / 2), u = s((e - i) / 2), d = a((e - i) / 2), p = s((i - e) / 2), m = a((i - e) / 2);\n            switch(r){\n                case \"XYX\":\n                    t.set(o * h, l * u, l * d, o * c);\n                    break;\n                case \"YZY\":\n                    t.set(l * d, o * h, l * u, o * c);\n                    break;\n                case \"ZXZ\":\n                    t.set(l * u, l * d, o * h, o * c);\n                    break;\n                case \"XZX\":\n                    t.set(o * h, l * m, l * p, o * c);\n                    break;\n                case \"YXY\":\n                    t.set(l * p, o * h, l * m, o * c);\n                    break;\n                case \"ZYZ\":\n                    t.set(l * m, l * p, o * h, o * c);\n                    break;\n                default:\n                    console.warn(\"THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: \" + r);\n            }\n        }\n    });\n    class yt {\n        constructor(t = 0, e = 0){\n            this.x = t, this.y = e;\n        }\n        get width() {\n            return this.x;\n        }\n        set width(t) {\n            this.x = t;\n        }\n        get height() {\n            return this.y;\n        }\n        set height(t) {\n            this.y = t;\n        }\n        set(t, e) {\n            return this.x = t, this.y = e, this;\n        }\n        setScalar(t) {\n            return this.x = t, this.y = t, this;\n        }\n        setX(t) {\n            return this.x = t, this;\n        }\n        setY(t) {\n            return this.y = t, this;\n        }\n        setComponent(t, e) {\n            switch(t){\n                case 0:\n                    this.x = e;\n                    break;\n                case 1:\n                    this.y = e;\n                    break;\n                default:\n                    throw new Error(\"index is out of range: \" + t);\n            }\n            return this;\n        }\n        getComponent(t) {\n            switch(t){\n                case 0:\n                    return this.x;\n                case 1:\n                    return this.y;\n                default:\n                    throw new Error(\"index is out of range: \" + t);\n            }\n        }\n        clone() {\n            return new this.constructor(this.x, this.y);\n        }\n        copy(t) {\n            return this.x = t.x, this.y = t.y, this;\n        }\n        add(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this);\n        }\n        addScalar(t) {\n            return this.x += t, this.y += t, this;\n        }\n        addVectors(t, e) {\n            return this.x = t.x + e.x, this.y = t.y + e.y, this;\n        }\n        addScaledVector(t, e) {\n            return this.x += t.x * e, this.y += t.y * e, this;\n        }\n        sub(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this);\n        }\n        subScalar(t) {\n            return this.x -= t, this.y -= t, this;\n        }\n        subVectors(t, e) {\n            return this.x = t.x - e.x, this.y = t.y - e.y, this;\n        }\n        multiply(t) {\n            return this.x *= t.x, this.y *= t.y, this;\n        }\n        multiplyScalar(t) {\n            return this.x *= t, this.y *= t, this;\n        }\n        divide(t) {\n            return this.x /= t.x, this.y /= t.y, this;\n        }\n        divideScalar(t) {\n            return this.multiplyScalar(1 / t);\n        }\n        applyMatrix3(t) {\n            const e = this.x, n = this.y, i = t.elements;\n            return this.x = i[0] * e + i[3] * n + i[6], this.y = i[1] * e + i[4] * n + i[7], this;\n        }\n        min(t) {\n            return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this;\n        }\n        max(t) {\n            return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this;\n        }\n        clamp(t, e) {\n            return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this;\n        }\n        clampScalar(t, e) {\n            return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this;\n        }\n        clampLength(t, e) {\n            const n = this.length();\n            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)));\n        }\n        floor() {\n            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;\n        }\n        ceil() {\n            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;\n        }\n        round() {\n            return this.x = Math.round(this.x), this.y = Math.round(this.y), this;\n        }\n        roundToZero() {\n            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;\n        }\n        negate() {\n            return this.x = -this.x, this.y = -this.y, this;\n        }\n        dot(t) {\n            return this.x * t.x + this.y * t.y;\n        }\n        cross(t) {\n            return this.x * t.y - this.y * t.x;\n        }\n        lengthSq() {\n            return this.x * this.x + this.y * this.y;\n        }\n        length() {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        }\n        manhattanLength() {\n            return Math.abs(this.x) + Math.abs(this.y);\n        }\n        normalize() {\n            return this.divideScalar(this.length() || 1);\n        }\n        angle() {\n            return Math.atan2(-this.y, -this.x) + Math.PI;\n        }\n        distanceTo(t) {\n            return Math.sqrt(this.distanceToSquared(t));\n        }\n        distanceToSquared(t) {\n            const e = this.x - t.x, n = this.y - t.y;\n            return e * e + n * n;\n        }\n        manhattanDistanceTo(t) {\n            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);\n        }\n        setLength(t) {\n            return this.normalize().multiplyScalar(t);\n        }\n        lerp(t, e) {\n            return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this;\n        }\n        lerpVectors(t, e, n) {\n            return this.x = t.x + (e.x - t.x) * n, this.y = t.y + (e.y - t.y) * n, this;\n        }\n        equals(t) {\n            return t.x === this.x && t.y === this.y;\n        }\n        fromArray(t, e = 0) {\n            return this.x = t[e], this.y = t[e + 1], this;\n        }\n        toArray(t = [], e = 0) {\n            return t[e] = this.x, t[e + 1] = this.y, t;\n        }\n        fromBufferAttribute(t, e, n) {\n            return void 0 !== n && console.warn(\"THREE.Vector2: offset has been removed from .fromBufferAttribute().\"), this.x = t.getX(e), this.y = t.getY(e), this;\n        }\n        rotateAround(t, e) {\n            const n = Math.cos(e), i = Math.sin(e), r = this.x - t.x, s = this.y - t.y;\n            return this.x = r * n - s * i + t.x, this.y = r * i + s * n + t.y, this;\n        }\n        random() {\n            return this.x = Math.random(), this.y = Math.random(), this;\n        }\n        *[Symbol.iterator]() {\n            yield this.x, yield this.y;\n        }\n    }\n    yt.prototype.isVector2 = !0;\n    class xt {\n        constructor(){\n            this.elements = [\n                1,\n                0,\n                0,\n                0,\n                1,\n                0,\n                0,\n                0,\n                1\n            ], arguments.length > 0 && console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\");\n        }\n        set(t, e, n, i, r, s, a, o, l) {\n            const c = this.elements;\n            return c[0] = t, c[1] = i, c[2] = a, c[3] = e, c[4] = r, c[5] = o, c[6] = n, c[7] = s, c[8] = l, this;\n        }\n        identity() {\n            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;\n        }\n        copy(t) {\n            const e = this.elements, n = t.elements;\n            return e[0] = n[0], e[1] = n[1], e[2] = n[2], e[3] = n[3], e[4] = n[4], e[5] = n[5], e[6] = n[6], e[7] = n[7], e[8] = n[8], this;\n        }\n        extractBasis(t, e, n) {\n            return t.setFromMatrix3Column(this, 0), e.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this;\n        }\n        setFromMatrix4(t) {\n            const e = t.elements;\n            return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]), this;\n        }\n        multiply(t) {\n            return this.multiplyMatrices(this, t);\n        }\n        premultiply(t) {\n            return this.multiplyMatrices(t, this);\n        }\n        multiplyMatrices(t, e) {\n            const n = t.elements, i = e.elements, r = this.elements, s = n[0], a = n[3], o = n[6], l = n[1], c = n[4], h = n[7], u = n[2], d = n[5], p = n[8], m = i[0], f = i[3], g = i[6], v = i[1], y = i[4], x = i[7], _ = i[2], M = i[5], b = i[8];\n            return r[0] = s * m + a * v + o * _, r[3] = s * f + a * y + o * M, r[6] = s * g + a * x + o * b, r[1] = l * m + c * v + h * _, r[4] = l * f + c * y + h * M, r[7] = l * g + c * x + h * b, r[2] = u * m + d * v + p * _, r[5] = u * f + d * y + p * M, r[8] = u * g + d * x + p * b, this;\n        }\n        multiplyScalar(t) {\n            const e = this.elements;\n            return e[0] *= t, e[3] *= t, e[6] *= t, e[1] *= t, e[4] *= t, e[7] *= t, e[2] *= t, e[5] *= t, e[8] *= t, this;\n        }\n        determinant() {\n            const t = this.elements, e = t[0], n = t[1], i = t[2], r = t[3], s = t[4], a = t[5], o = t[6], l = t[7], c = t[8];\n            return e * s * c - e * a * l - n * r * c + n * a * o + i * r * l - i * s * o;\n        }\n        invert() {\n            const t = this.elements, e = t[0], n = t[1], i = t[2], r = t[3], s = t[4], a = t[5], o = t[6], l = t[7], c = t[8], h = c * s - a * l, u = a * o - c * r, d = l * r - s * o, p = e * h + n * u + i * d;\n            if (0 === p) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n            const m = 1 / p;\n            return t[0] = h * m, t[1] = (i * l - c * n) * m, t[2] = (a * n - i * s) * m, t[3] = u * m, t[4] = (c * e - i * o) * m, t[5] = (i * r - a * e) * m, t[6] = d * m, t[7] = (n * o - l * e) * m, t[8] = (s * e - n * r) * m, this;\n        }\n        transpose() {\n            let t;\n            const e = this.elements;\n            return t = e[1], e[1] = e[3], e[3] = t, t = e[2], e[2] = e[6], e[6] = t, t = e[5], e[5] = e[7], e[7] = t, this;\n        }\n        getNormalMatrix(t) {\n            return this.setFromMatrix4(t).invert().transpose();\n        }\n        transposeIntoArray(t) {\n            const e = this.elements;\n            return t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8], this;\n        }\n        setUvTransform(t, e, n, i, r, s, a) {\n            const o = Math.cos(r), l = Math.sin(r);\n            return this.set(n * o, n * l, -n * (o * s + l * a) + s + t, -i * l, i * o, -i * (-l * s + o * a) + a + e, 0, 0, 1), this;\n        }\n        scale(t, e) {\n            const n = this.elements;\n            return n[0] *= t, n[3] *= t, n[6] *= t, n[1] *= e, n[4] *= e, n[7] *= e, this;\n        }\n        rotate(t) {\n            const e = Math.cos(t), n = Math.sin(t), i = this.elements, r = i[0], s = i[3], a = i[6], o = i[1], l = i[4], c = i[7];\n            return i[0] = e * r + n * o, i[3] = e * s + n * l, i[6] = e * a + n * c, i[1] = -n * r + e * o, i[4] = -n * s + e * l, i[7] = -n * a + e * c, this;\n        }\n        translate(t, e) {\n            const n = this.elements;\n            return n[0] += t * n[2], n[3] += t * n[5], n[6] += t * n[8], n[1] += e * n[2], n[4] += e * n[5], n[7] += e * n[8], this;\n        }\n        equals(t) {\n            const e = this.elements, n = t.elements;\n            for(let t = 0; t < 9; t++)if (e[t] !== n[t]) return !1;\n            return !0;\n        }\n        fromArray(t, e = 0) {\n            for(let n = 0; n < 9; n++)this.elements[n] = t[n + e];\n            return this;\n        }\n        toArray(t = [], e = 0) {\n            const n = this.elements;\n            return t[e] = n[0], t[e + 1] = n[1], t[e + 2] = n[2], t[e + 3] = n[3], t[e + 4] = n[4], t[e + 5] = n[5], t[e + 6] = n[6], t[e + 7] = n[7], t[e + 8] = n[8], t;\n        }\n        clone() {\n            return (new this.constructor).fromArray(this.elements);\n        }\n    }\n    function _t(t) {\n        if (0 === t.length) return -1 / 0;\n        let e = t[0];\n        for(let n = 1, i = t.length; n < i; ++n)t[n] > e && (e = t[n]);\n        return e;\n    }\n    xt.prototype.isMatrix3 = !0;\n    const Mt = {\n        Int8Array: Int8Array,\n        Uint8Array: Uint8Array,\n        Uint8ClampedArray: Uint8ClampedArray,\n        Int16Array: Int16Array,\n        Uint16Array: Uint16Array,\n        Int32Array: Int32Array,\n        Uint32Array: Uint32Array,\n        Float32Array: Float32Array,\n        Float64Array: Float64Array\n    };\n    function bt(t, e) {\n        return new Mt[t](e);\n    }\n    function wt(t) {\n        return document.createElementNS(\"http://www.w3.org/1999/xhtml\", t);\n    }\n    function St(t, e = 0) {\n        let n = 3735928559 ^ e, i = 1103547991 ^ e;\n        for(let e, r = 0; r < t.length; r++)e = t.charCodeAt(r), n = Math.imul(n ^ e, 2654435761), i = Math.imul(i ^ e, 1597334677);\n        return n = Math.imul(n ^ n >>> 16, 2246822507) ^ Math.imul(i ^ i >>> 13, 3266489909), i = Math.imul(i ^ i >>> 16, 2246822507) ^ Math.imul(n ^ n >>> 13, 3266489909), 4294967296 * (2097151 & i) + (n >>> 0);\n    }\n    let Tt;\n    class Et {\n        static getDataURL(t) {\n            if (/^data:/i.test(t.src)) return t.src;\n            if (\"undefined\" == typeof HTMLCanvasElement) return t.src;\n            let e;\n            if (t instanceof HTMLCanvasElement) e = t;\n            else {\n                void 0 === Tt && (Tt = wt(\"canvas\")), Tt.width = t.width, Tt.height = t.height;\n                const n = Tt.getContext(\"2d\");\n                t instanceof ImageData ? n.putImageData(t, 0, 0) : n.drawImage(t, 0, 0, t.width, t.height), e = Tt;\n            }\n            return e.width > 2048 || e.height > 2048 ? (console.warn(\"THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons\", t), e.toDataURL(\"image/jpeg\", .6)) : e.toDataURL(\"image/png\");\n        }\n    }\n    let At = 0;\n    class Lt extends rt {\n        constructor(t = Lt.DEFAULT_IMAGE, e = Lt.DEFAULT_MAPPING, n = 1001, i = 1001, r = 1006, s = 1008, a = 1023, o = 1009, l = 1, c = 3e3){\n            super(), Object.defineProperty(this, \"id\", {\n                value: At++\n            }), this.uuid = ht(), this.name = \"\", this.image = t, this.mipmaps = [], this.mapping = e, this.wrapS = n, this.wrapT = i, this.magFilter = r, this.minFilter = s, this.anisotropy = l, this.format = a, this.internalFormat = null, this.type = o, this.offset = new yt(0, 0), this.repeat = new yt(1, 1), this.center = new yt(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new xt, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = c, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1;\n        }\n        updateMatrix() {\n            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            return this.name = t.name, this.image = t.image, this.mipmaps = t.mipmaps.slice(0), this.mapping = t.mapping, this.wrapS = t.wrapS, this.wrapT = t.wrapT, this.magFilter = t.magFilter, this.minFilter = t.minFilter, this.anisotropy = t.anisotropy, this.format = t.format, this.internalFormat = t.internalFormat, this.type = t.type, this.offset.copy(t.offset), this.repeat.copy(t.repeat), this.center.copy(t.center), this.rotation = t.rotation, this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrix.copy(t.matrix), this.generateMipmaps = t.generateMipmaps, this.premultiplyAlpha = t.premultiplyAlpha, this.flipY = t.flipY, this.unpackAlignment = t.unpackAlignment, this.encoding = t.encoding, this.userData = JSON.parse(JSON.stringify(t.userData)), this;\n        }\n        toJSON(t) {\n            const e = void 0 === t || \"string\" == typeof t;\n            if (!e && void 0 !== t.textures[this.uuid]) return t.textures[this.uuid];\n            const n = {\n                metadata: {\n                    version: 4.5,\n                    type: \"Texture\",\n                    generator: \"Texture.toJSON\"\n                },\n                uuid: this.uuid,\n                name: this.name,\n                mapping: this.mapping,\n                repeat: [\n                    this.repeat.x,\n                    this.repeat.y\n                ],\n                offset: [\n                    this.offset.x,\n                    this.offset.y\n                ],\n                center: [\n                    this.center.x,\n                    this.center.y\n                ],\n                rotation: this.rotation,\n                wrap: [\n                    this.wrapS,\n                    this.wrapT\n                ],\n                format: this.format,\n                type: this.type,\n                encoding: this.encoding,\n                minFilter: this.minFilter,\n                magFilter: this.magFilter,\n                anisotropy: this.anisotropy,\n                flipY: this.flipY,\n                premultiplyAlpha: this.premultiplyAlpha,\n                unpackAlignment: this.unpackAlignment\n            };\n            if (void 0 !== this.image) {\n                const i = this.image;\n                if (void 0 === i.uuid && (i.uuid = ht()), !e && void 0 === t.images[i.uuid]) {\n                    let e;\n                    if (Array.isArray(i)) {\n                        e = [];\n                        for(let t = 0, n = i.length; t < n; t++)i[t].isDataTexture ? e.push(Rt(i[t].image)) : e.push(Rt(i[t]));\n                    } else e = Rt(i);\n                    t.images[i.uuid] = {\n                        uuid: i.uuid,\n                        url: e\n                    };\n                }\n                n.image = i.uuid;\n            }\n            return \"{}\" !== JSON.stringify(this.userData) && (n.userData = this.userData), e || (t.textures[this.uuid] = n), n;\n        }\n        dispose() {\n            this.dispatchEvent({\n                type: \"dispose\"\n            });\n        }\n        transformUv(t) {\n            if (this.mapping !== i) return t;\n            if (t.applyMatrix3(this.matrix), t.x < 0 || t.x > 1) switch(this.wrapS){\n                case h:\n                    t.x = t.x - Math.floor(t.x);\n                    break;\n                case u:\n                    t.x = t.x < 0 ? 0 : 1;\n                    break;\n                case d:\n                    1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x);\n            }\n            if (t.y < 0 || t.y > 1) switch(this.wrapT){\n                case h:\n                    t.y = t.y - Math.floor(t.y);\n                    break;\n                case u:\n                    t.y = t.y < 0 ? 0 : 1;\n                    break;\n                case d:\n                    1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y);\n            }\n            return this.flipY && (t.y = 1 - t.y), t;\n        }\n        set needsUpdate(t) {\n            !0 === t && this.version++;\n        }\n    }\n    function Rt(t) {\n        return \"undefined\" != typeof HTMLImageElement && t instanceof HTMLImageElement || \"undefined\" != typeof HTMLCanvasElement && t instanceof HTMLCanvasElement || \"undefined\" != typeof ImageBitmap && t instanceof ImageBitmap ? Et.getDataURL(t) : t.data ? {\n            data: Array.prototype.slice.call(t.data),\n            width: t.width,\n            height: t.height,\n            type: t.data.constructor.name\n        } : (console.warn(\"THREE.Texture: Unable to serialize Texture.\"), {});\n    }\n    Lt.DEFAULT_IMAGE = void 0, Lt.DEFAULT_MAPPING = i, Lt.prototype.isTexture = !0;\n    class Ct {\n        constructor(t = 0, e = 0, n = 0, i = 1){\n            this.x = t, this.y = e, this.z = n, this.w = i;\n        }\n        get width() {\n            return this.z;\n        }\n        set width(t) {\n            this.z = t;\n        }\n        get height() {\n            return this.w;\n        }\n        set height(t) {\n            this.w = t;\n        }\n        set(t, e, n, i) {\n            return this.x = t, this.y = e, this.z = n, this.w = i, this;\n        }\n        setScalar(t) {\n            return this.x = t, this.y = t, this.z = t, this.w = t, this;\n        }\n        setX(t) {\n            return this.x = t, this;\n        }\n        setY(t) {\n            return this.y = t, this;\n        }\n        setZ(t) {\n            return this.z = t, this;\n        }\n        setW(t) {\n            return this.w = t, this;\n        }\n        setComponent(t, e) {\n            switch(t){\n                case 0:\n                    this.x = e;\n                    break;\n                case 1:\n                    this.y = e;\n                    break;\n                case 2:\n                    this.z = e;\n                    break;\n                case 3:\n                    this.w = e;\n                    break;\n                default:\n                    throw new Error(\"index is out of range: \" + t);\n            }\n            return this;\n        }\n        getComponent(t) {\n            switch(t){\n                case 0:\n                    return this.x;\n                case 1:\n                    return this.y;\n                case 2:\n                    return this.z;\n                case 3:\n                    return this.w;\n                default:\n                    throw new Error(\"index is out of range: \" + t);\n            }\n        }\n        clone() {\n            return new this.constructor(this.x, this.y, this.z, this.w);\n        }\n        copy(t) {\n            return this.x = t.x, this.y = t.y, this.z = t.z, this.w = void 0 !== t.w ? t.w : 1, this;\n        }\n        add(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this);\n        }\n        addScalar(t) {\n            return this.x += t, this.y += t, this.z += t, this.w += t, this;\n        }\n        addVectors(t, e) {\n            return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this.w = t.w + e.w, this;\n        }\n        addScaledVector(t, e) {\n            return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this.w += t.w * e, this;\n        }\n        sub(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this);\n        }\n        subScalar(t) {\n            return this.x -= t, this.y -= t, this.z -= t, this.w -= t, this;\n        }\n        subVectors(t, e) {\n            return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this.w = t.w - e.w, this;\n        }\n        multiply(t) {\n            return this.x *= t.x, this.y *= t.y, this.z *= t.z, this.w *= t.w, this;\n        }\n        multiplyScalar(t) {\n            return this.x *= t, this.y *= t, this.z *= t, this.w *= t, this;\n        }\n        applyMatrix4(t) {\n            const e = this.x, n = this.y, i = this.z, r = this.w, s = t.elements;\n            return this.x = s[0] * e + s[4] * n + s[8] * i + s[12] * r, this.y = s[1] * e + s[5] * n + s[9] * i + s[13] * r, this.z = s[2] * e + s[6] * n + s[10] * i + s[14] * r, this.w = s[3] * e + s[7] * n + s[11] * i + s[15] * r, this;\n        }\n        divideScalar(t) {\n            return this.multiplyScalar(1 / t);\n        }\n        setAxisAngleFromQuaternion(t) {\n            this.w = 2 * Math.acos(t.w);\n            const e = Math.sqrt(1 - t.w * t.w);\n            return e < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = t.x / e, this.y = t.y / e, this.z = t.z / e), this;\n        }\n        setAxisAngleFromRotationMatrix(t) {\n            let e, n, i, r;\n            const s = .01, a = .1, o = t.elements, l = o[0], c = o[4], h = o[8], u = o[1], d = o[5], p = o[9], m = o[2], f = o[6], g = o[10];\n            if (Math.abs(c - u) < s && Math.abs(h - m) < s && Math.abs(p - f) < s) {\n                if (Math.abs(c + u) < a && Math.abs(h + m) < a && Math.abs(p + f) < a && Math.abs(l + d + g - 3) < a) return this.set(1, 0, 0, 0), this;\n                e = Math.PI;\n                const t = (l + 1) / 2, o = (d + 1) / 2, v = (g + 1) / 2, y = (c + u) / 4, x = (h + m) / 4, _ = (p + f) / 4;\n                return t > o && t > v ? t < s ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(t), i = y / n, r = x / n) : o > v ? o < s ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(o), n = y / i, r = _ / i) : v < s ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(v), n = x / r, i = _ / r), this.set(n, i, r, e), this;\n            }\n            let v = Math.sqrt((f - p) * (f - p) + (h - m) * (h - m) + (u - c) * (u - c));\n            return Math.abs(v) < .001 && (v = 1), this.x = (f - p) / v, this.y = (h - m) / v, this.z = (u - c) / v, this.w = Math.acos((l + d + g - 1) / 2), this;\n        }\n        min(t) {\n            return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this.w = Math.min(this.w, t.w), this;\n        }\n        max(t) {\n            return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this.w = Math.max(this.w, t.w), this;\n        }\n        clamp(t, e) {\n            return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this.w = Math.max(t.w, Math.min(e.w, this.w)), this;\n        }\n        clampScalar(t, e) {\n            return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this.z = Math.max(t, Math.min(e, this.z)), this.w = Math.max(t, Math.min(e, this.w)), this;\n        }\n        clampLength(t, e) {\n            const n = this.length();\n            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)));\n        }\n        floor() {\n            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;\n        }\n        ceil() {\n            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;\n        }\n        round() {\n            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;\n        }\n        roundToZero() {\n            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;\n        }\n        negate() {\n            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;\n        }\n        dot(t) {\n            return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;\n        }\n        lengthSq() {\n            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        }\n        length() {\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        }\n        manhattanLength() {\n            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n        }\n        normalize() {\n            return this.divideScalar(this.length() || 1);\n        }\n        setLength(t) {\n            return this.normalize().multiplyScalar(t);\n        }\n        lerp(t, e) {\n            return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this.w += (t.w - this.w) * e, this;\n        }\n        lerpVectors(t, e, n) {\n            return this.x = t.x + (e.x - t.x) * n, this.y = t.y + (e.y - t.y) * n, this.z = t.z + (e.z - t.z) * n, this.w = t.w + (e.w - t.w) * n, this;\n        }\n        equals(t) {\n            return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w;\n        }\n        fromArray(t, e = 0) {\n            return this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this.w = t[e + 3], this;\n        }\n        toArray(t = [], e = 0) {\n            return t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t[e + 3] = this.w, t;\n        }\n        fromBufferAttribute(t, e, n) {\n            return void 0 !== n && console.warn(\"THREE.Vector4: offset has been removed from .fromBufferAttribute().\"), this.x = t.getX(e), this.y = t.getY(e), this.z = t.getZ(e), this.w = t.getW(e), this;\n        }\n        random() {\n            return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;\n        }\n        *[Symbol.iterator]() {\n            yield this.x, yield this.y, yield this.z, yield this.w;\n        }\n    }\n    Ct.prototype.isVector4 = !0;\n    class Pt extends rt {\n        constructor(t, e, n = {}){\n            super(), this.width = t, this.height = e, this.depth = 1, this.scissor = new Ct(0, 0, t, e), this.scissorTest = !1, this.viewport = new Ct(0, 0, t, e), this.texture = new Lt(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.isRenderTargetTexture = !0, this.texture.image = {\n                width: t,\n                height: e,\n                depth: 1\n            }, this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps, this.texture.internalFormat = void 0 !== n.internalFormat ? n.internalFormat : null, this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : g, this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer, this.stencilBuffer = void 0 !== n.stencilBuffer && n.stencilBuffer, this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null;\n        }\n        setTexture(t) {\n            t.image = {\n                width: this.width,\n                height: this.height,\n                depth: this.depth\n            }, this.texture = t;\n        }\n        setSize(t, e, n = 1) {\n            this.width === t && this.height === e && this.depth === n || (this.width = t, this.height = e, this.depth = n, this.texture.image.width = t, this.texture.image.height = e, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, t, e), this.scissor.set(0, 0, t, e);\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            return this.width = t.width, this.height = t.height, this.depth = t.depth, this.viewport.copy(t.viewport), this.texture = t.texture.clone(), this.texture.image = {\n                ...this.texture.image\n            }, this.depthBuffer = t.depthBuffer, this.stencilBuffer = t.stencilBuffer, this.depthTexture = t.depthTexture, this;\n        }\n        dispose() {\n            this.dispatchEvent({\n                type: \"dispose\"\n            });\n        }\n    }\n    Pt.prototype.isWebGLRenderTarget = !0;\n    class It extends Pt {\n        constructor(t, e, n){\n            super(t, e);\n            const i = this.texture;\n            this.texture = [];\n            for(let t = 0; t < n; t++)this.texture[t] = i.clone();\n        }\n        setSize(t, e, n = 1) {\n            if (this.width !== t || this.height !== e || this.depth !== n) {\n                this.width = t, this.height = e, this.depth = n;\n                for(let i = 0, r = this.texture.length; i < r; i++)this.texture[i].image.width = t, this.texture[i].image.height = e, this.texture[i].image.depth = n;\n                this.dispose();\n            }\n            return this.viewport.set(0, 0, t, e), this.scissor.set(0, 0, t, e), this;\n        }\n        copy(t) {\n            this.dispose(), this.width = t.width, this.height = t.height, this.depth = t.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = t.depthBuffer, this.stencilBuffer = t.stencilBuffer, this.depthTexture = t.depthTexture, this.texture.length = 0;\n            for(let e = 0, n = t.texture.length; e < n; e++)this.texture[e] = t.texture[e].clone();\n            return this;\n        }\n    }\n    It.prototype.isWebGLMultipleRenderTargets = !0;\n    class Dt extends Pt {\n        constructor(t, e, n){\n            super(t, e, n), this.samples = 4;\n        }\n        copy(t) {\n            return super.copy.call(this, t), this.samples = t.samples, this;\n        }\n    }\n    Dt.prototype.isWebGLMultisampleRenderTarget = !0;\n    class Nt {\n        constructor(t = 0, e = 0, n = 0, i = 1){\n            this._x = t, this._y = e, this._z = n, this._w = i;\n        }\n        static slerp(t, e, n, i) {\n            return console.warn(\"THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.\"), n.slerpQuaternions(t, e, i);\n        }\n        static slerpFlat(t, e, n, i, r, s, a) {\n            let o = n[i + 0], l = n[i + 1], c = n[i + 2], h = n[i + 3];\n            const u = r[s + 0], d = r[s + 1], p = r[s + 2], m = r[s + 3];\n            if (0 === a) return t[e + 0] = o, t[e + 1] = l, t[e + 2] = c, void (t[e + 3] = h);\n            if (1 === a) return t[e + 0] = u, t[e + 1] = d, t[e + 2] = p, void (t[e + 3] = m);\n            if (h !== m || o !== u || l !== d || c !== p) {\n                let t = 1 - a;\n                const e = o * u + l * d + c * p + h * m, n = e >= 0 ? 1 : -1, i = 1 - e * e;\n                if (i > Number.EPSILON) {\n                    const r = Math.sqrt(i), s = Math.atan2(r, e * n);\n                    t = Math.sin(t * s) / r, a = Math.sin(a * s) / r;\n                }\n                const r = a * n;\n                if (o = o * t + u * r, l = l * t + d * r, c = c * t + p * r, h = h * t + m * r, t === 1 - a) {\n                    const t = 1 / Math.sqrt(o * o + l * l + c * c + h * h);\n                    o *= t, l *= t, c *= t, h *= t;\n                }\n            }\n            t[e] = o, t[e + 1] = l, t[e + 2] = c, t[e + 3] = h;\n        }\n        static multiplyQuaternionsFlat(t, e, n, i, r, s) {\n            const a = n[i], o = n[i + 1], l = n[i + 2], c = n[i + 3], h = r[s], u = r[s + 1], d = r[s + 2], p = r[s + 3];\n            return t[e] = a * p + c * h + o * d - l * u, t[e + 1] = o * p + c * u + l * h - a * d, t[e + 2] = l * p + c * d + a * u - o * h, t[e + 3] = c * p - a * h - o * u - l * d, t;\n        }\n        get x() {\n            return this._x;\n        }\n        set x(t) {\n            this._x = t, this._onChangeCallback();\n        }\n        get y() {\n            return this._y;\n        }\n        set y(t) {\n            this._y = t, this._onChangeCallback();\n        }\n        get z() {\n            return this._z;\n        }\n        set z(t) {\n            this._z = t, this._onChangeCallback();\n        }\n        get w() {\n            return this._w;\n        }\n        set w(t) {\n            this._w = t, this._onChangeCallback();\n        }\n        set(t, e, n, i) {\n            return this._x = t, this._y = e, this._z = n, this._w = i, this._onChangeCallback(), this;\n        }\n        clone() {\n            return new this.constructor(this._x, this._y, this._z, this._w);\n        }\n        copy(t) {\n            return this._x = t.x, this._y = t.y, this._z = t.z, this._w = t.w, this._onChangeCallback(), this;\n        }\n        setFromEuler(t, e) {\n            if (!t || !t.isEuler) throw new Error(\"THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.\");\n            const n = t._x, i = t._y, r = t._z, s = t._order, a = Math.cos, o = Math.sin, l = a(n / 2), c = a(i / 2), h = a(r / 2), u = o(n / 2), d = o(i / 2), p = o(r / 2);\n            switch(s){\n                case \"XYZ\":\n                    this._x = u * c * h + l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h - u * d * p;\n                    break;\n                case \"YXZ\":\n                    this._x = u * c * h + l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h + u * d * p;\n                    break;\n                case \"ZXY\":\n                    this._x = u * c * h - l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h - u * d * p;\n                    break;\n                case \"ZYX\":\n                    this._x = u * c * h - l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h + u * d * p;\n                    break;\n                case \"YZX\":\n                    this._x = u * c * h + l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h - u * d * p;\n                    break;\n                case \"XZY\":\n                    this._x = u * c * h - l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h + u * d * p;\n                    break;\n                default:\n                    console.warn(\"THREE.Quaternion: .setFromEuler() encountered an unknown order: \" + s);\n            }\n            return !1 !== e && this._onChangeCallback(), this;\n        }\n        setFromAxisAngle(t, e) {\n            const n = e / 2, i = Math.sin(n);\n            return this._x = t.x * i, this._y = t.y * i, this._z = t.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;\n        }\n        setFromRotationMatrix(t) {\n            const e = t.elements, n = e[0], i = e[4], r = e[8], s = e[1], a = e[5], o = e[9], l = e[2], c = e[6], h = e[10], u = n + a + h;\n            if (u > 0) {\n                const t = .5 / Math.sqrt(u + 1);\n                this._w = .25 / t, this._x = (c - o) * t, this._y = (r - l) * t, this._z = (s - i) * t;\n            } else if (n > a && n > h) {\n                const t = 2 * Math.sqrt(1 + n - a - h);\n                this._w = (c - o) / t, this._x = .25 * t, this._y = (i + s) / t, this._z = (r + l) / t;\n            } else if (a > h) {\n                const t = 2 * Math.sqrt(1 + a - n - h);\n                this._w = (r - l) / t, this._x = (i + s) / t, this._y = .25 * t, this._z = (o + c) / t;\n            } else {\n                const t = 2 * Math.sqrt(1 + h - n - a);\n                this._w = (s - i) / t, this._x = (r + l) / t, this._y = (o + c) / t, this._z = .25 * t;\n            }\n            return this._onChangeCallback(), this;\n        }\n        setFromUnitVectors(t, e) {\n            let n = t.dot(e) + 1;\n            return n < Number.EPSILON ? (n = 0, Math.abs(t.x) > Math.abs(t.z) ? (this._x = -t.y, this._y = t.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -t.z, this._z = t.y, this._w = n)) : (this._x = t.y * e.z - t.z * e.y, this._y = t.z * e.x - t.x * e.z, this._z = t.x * e.y - t.y * e.x, this._w = n), this.normalize();\n        }\n        angleTo(t) {\n            return 2 * Math.acos(Math.abs(ut(this.dot(t), -1, 1)));\n        }\n        rotateTowards(t, e) {\n            const n = this.angleTo(t);\n            if (0 === n) return this;\n            const i = Math.min(1, e / n);\n            return this.slerp(t, i), this;\n        }\n        identity() {\n            return this.set(0, 0, 0, 1);\n        }\n        invert() {\n            return this.conjugate();\n        }\n        conjugate() {\n            return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;\n        }\n        dot(t) {\n            return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w;\n        }\n        lengthSq() {\n            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n        }\n        length() {\n            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n        }\n        normalize() {\n            let t = this.length();\n            return 0 === t ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (t = 1 / t, this._x = this._x * t, this._y = this._y * t, this._z = this._z * t, this._w = this._w * t), this._onChangeCallback(), this;\n        }\n        multiply(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"), this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t);\n        }\n        premultiply(t) {\n            return this.multiplyQuaternions(t, this);\n        }\n        multiplyQuaternions(t, e) {\n            const n = t._x, i = t._y, r = t._z, s = t._w, a = e._x, o = e._y, l = e._z, c = e._w;\n            return this._x = n * c + s * a + i * l - r * o, this._y = i * c + s * o + r * a - n * l, this._z = r * c + s * l + n * o - i * a, this._w = s * c - n * a - i * o - r * l, this._onChangeCallback(), this;\n        }\n        slerp(t, e) {\n            if (0 === e) return this;\n            if (1 === e) return this.copy(t);\n            const n = this._x, i = this._y, r = this._z, s = this._w;\n            let a = s * t._w + n * t._x + i * t._y + r * t._z;\n            if (a < 0 ? (this._w = -t._w, this._x = -t._x, this._y = -t._y, this._z = -t._z, a = -a) : this.copy(t), a >= 1) return this._w = s, this._x = n, this._y = i, this._z = r, this;\n            const o = 1 - a * a;\n            if (o <= Number.EPSILON) {\n                const t = 1 - e;\n                return this._w = t * s + e * this._w, this._x = t * n + e * this._x, this._y = t * i + e * this._y, this._z = t * r + e * this._z, this.normalize(), this._onChangeCallback(), this;\n            }\n            const l = Math.sqrt(o), c = Math.atan2(l, a), h = Math.sin((1 - e) * c) / l, u = Math.sin(e * c) / l;\n            return this._w = s * h + this._w * u, this._x = n * h + this._x * u, this._y = i * h + this._y * u, this._z = r * h + this._z * u, this._onChangeCallback(), this;\n        }\n        slerpQuaternions(t, e, n) {\n            this.copy(t).slerp(e, n);\n        }\n        random() {\n            const t = Math.random(), e = Math.sqrt(1 - t), n = Math.sqrt(t), i = 2 * Math.PI * Math.random(), r = 2 * Math.PI * Math.random();\n            return this.set(e * Math.cos(i), n * Math.sin(r), n * Math.cos(r), e * Math.sin(i));\n        }\n        equals(t) {\n            return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w;\n        }\n        fromArray(t, e = 0) {\n            return this._x = t[e], this._y = t[e + 1], this._z = t[e + 2], this._w = t[e + 3], this._onChangeCallback(), this;\n        }\n        toArray(t = [], e = 0) {\n            return t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._w, t;\n        }\n        fromBufferAttribute(t, e) {\n            return this._x = t.getX(e), this._y = t.getY(e), this._z = t.getZ(e), this._w = t.getW(e), this;\n        }\n        _onChange(t) {\n            return this._onChangeCallback = t, this;\n        }\n        _onChangeCallback() {}\n    }\n    Nt.prototype.isQuaternion = !0;\n    class zt {\n        constructor(t = 0, e = 0, n = 0){\n            this.x = t, this.y = e, this.z = n;\n        }\n        set(t, e, n) {\n            return void 0 === n && (n = this.z), this.x = t, this.y = e, this.z = n, this;\n        }\n        setScalar(t) {\n            return this.x = t, this.y = t, this.z = t, this;\n        }\n        setX(t) {\n            return this.x = t, this;\n        }\n        setY(t) {\n            return this.y = t, this;\n        }\n        setZ(t) {\n            return this.z = t, this;\n        }\n        setComponent(t, e) {\n            switch(t){\n                case 0:\n                    this.x = e;\n                    break;\n                case 1:\n                    this.y = e;\n                    break;\n                case 2:\n                    this.z = e;\n                    break;\n                default:\n                    throw new Error(\"index is out of range: \" + t);\n            }\n            return this;\n        }\n        getComponent(t) {\n            switch(t){\n                case 0:\n                    return this.x;\n                case 1:\n                    return this.y;\n                case 2:\n                    return this.z;\n                default:\n                    throw new Error(\"index is out of range: \" + t);\n            }\n        }\n        clone() {\n            return new this.constructor(this.x, this.y, this.z);\n        }\n        copy(t) {\n            return this.x = t.x, this.y = t.y, this.z = t.z, this;\n        }\n        add(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this);\n        }\n        addScalar(t) {\n            return this.x += t, this.y += t, this.z += t, this;\n        }\n        addVectors(t, e) {\n            return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this;\n        }\n        addScaledVector(t, e) {\n            return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this;\n        }\n        sub(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this);\n        }\n        subScalar(t) {\n            return this.x -= t, this.y -= t, this.z -= t, this;\n        }\n        subVectors(t, e) {\n            return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this;\n        }\n        multiply(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"), this.multiplyVectors(t, e)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this);\n        }\n        multiplyScalar(t) {\n            return this.x *= t, this.y *= t, this.z *= t, this;\n        }\n        multiplyVectors(t, e) {\n            return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this;\n        }\n        applyEuler(t) {\n            return t && t.isEuler || console.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\"), this.applyQuaternion(Ft.setFromEuler(t));\n        }\n        applyAxisAngle(t, e) {\n            return this.applyQuaternion(Ft.setFromAxisAngle(t, e));\n        }\n        applyMatrix3(t) {\n            const e = this.x, n = this.y, i = this.z, r = t.elements;\n            return this.x = r[0] * e + r[3] * n + r[6] * i, this.y = r[1] * e + r[4] * n + r[7] * i, this.z = r[2] * e + r[5] * n + r[8] * i, this;\n        }\n        applyNormalMatrix(t) {\n            return this.applyMatrix3(t).normalize();\n        }\n        applyMatrix4(t) {\n            const e = this.x, n = this.y, i = this.z, r = t.elements, s = 1 / (r[3] * e + r[7] * n + r[11] * i + r[15]);\n            return this.x = (r[0] * e + r[4] * n + r[8] * i + r[12]) * s, this.y = (r[1] * e + r[5] * n + r[9] * i + r[13]) * s, this.z = (r[2] * e + r[6] * n + r[10] * i + r[14]) * s, this;\n        }\n        applyQuaternion(t) {\n            const e = this.x, n = this.y, i = this.z, r = t.x, s = t.y, a = t.z, o = t.w, l = o * e + s * i - a * n, c = o * n + a * e - r * i, h = o * i + r * n - s * e, u = -r * e - s * n - a * i;\n            return this.x = l * o + u * -r + c * -a - h * -s, this.y = c * o + u * -s + h * -r - l * -a, this.z = h * o + u * -a + l * -s - c * -r, this;\n        }\n        project(t) {\n            return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix);\n        }\n        unproject(t) {\n            return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld);\n        }\n        transformDirection(t) {\n            const e = this.x, n = this.y, i = this.z, r = t.elements;\n            return this.x = r[0] * e + r[4] * n + r[8] * i, this.y = r[1] * e + r[5] * n + r[9] * i, this.z = r[2] * e + r[6] * n + r[10] * i, this.normalize();\n        }\n        divide(t) {\n            return this.x /= t.x, this.y /= t.y, this.z /= t.z, this;\n        }\n        divideScalar(t) {\n            return this.multiplyScalar(1 / t);\n        }\n        min(t) {\n            return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this;\n        }\n        max(t) {\n            return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this;\n        }\n        clamp(t, e) {\n            return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this;\n        }\n        clampScalar(t, e) {\n            return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this.z = Math.max(t, Math.min(e, this.z)), this;\n        }\n        clampLength(t, e) {\n            const n = this.length();\n            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)));\n        }\n        floor() {\n            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;\n        }\n        ceil() {\n            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;\n        }\n        round() {\n            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;\n        }\n        roundToZero() {\n            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;\n        }\n        negate() {\n            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;\n        }\n        dot(t) {\n            return this.x * t.x + this.y * t.y + this.z * t.z;\n        }\n        lengthSq() {\n            return this.x * this.x + this.y * this.y + this.z * this.z;\n        }\n        length() {\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        }\n        manhattanLength() {\n            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n        }\n        normalize() {\n            return this.divideScalar(this.length() || 1);\n        }\n        setLength(t) {\n            return this.normalize().multiplyScalar(t);\n        }\n        lerp(t, e) {\n            return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this;\n        }\n        lerpVectors(t, e, n) {\n            return this.x = t.x + (e.x - t.x) * n, this.y = t.y + (e.y - t.y) * n, this.z = t.z + (e.z - t.z) * n, this;\n        }\n        cross(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"), this.crossVectors(t, e)) : this.crossVectors(this, t);\n        }\n        crossVectors(t, e) {\n            const n = t.x, i = t.y, r = t.z, s = e.x, a = e.y, o = e.z;\n            return this.x = i * o - r * a, this.y = r * s - n * o, this.z = n * a - i * s, this;\n        }\n        projectOnVector(t) {\n            const e = t.lengthSq();\n            if (0 === e) return this.set(0, 0, 0);\n            const n = t.dot(this) / e;\n            return this.copy(t).multiplyScalar(n);\n        }\n        projectOnPlane(t) {\n            return Bt.copy(this).projectOnVector(t), this.sub(Bt);\n        }\n        reflect(t) {\n            return this.sub(Bt.copy(t).multiplyScalar(2 * this.dot(t)));\n        }\n        angleTo(t) {\n            const e = Math.sqrt(this.lengthSq() * t.lengthSq());\n            if (0 === e) return Math.PI / 2;\n            const n = this.dot(t) / e;\n            return Math.acos(ut(n, -1, 1));\n        }\n        distanceTo(t) {\n            return Math.sqrt(this.distanceToSquared(t));\n        }\n        distanceToSquared(t) {\n            const e = this.x - t.x, n = this.y - t.y, i = this.z - t.z;\n            return e * e + n * n + i * i;\n        }\n        manhattanDistanceTo(t) {\n            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z);\n        }\n        setFromSpherical(t) {\n            return this.setFromSphericalCoords(t.radius, t.phi, t.theta);\n        }\n        setFromSphericalCoords(t, e, n) {\n            const i = Math.sin(e) * t;\n            return this.x = i * Math.sin(n), this.y = Math.cos(e) * t, this.z = i * Math.cos(n), this;\n        }\n        setFromCylindrical(t) {\n            return this.setFromCylindricalCoords(t.radius, t.theta, t.y);\n        }\n        setFromCylindricalCoords(t, e, n) {\n            return this.x = t * Math.sin(e), this.y = n, this.z = t * Math.cos(e), this;\n        }\n        setFromMatrixPosition(t) {\n            const e = t.elements;\n            return this.x = e[12], this.y = e[13], this.z = e[14], this;\n        }\n        setFromMatrixScale(t) {\n            const e = this.setFromMatrixColumn(t, 0).length(), n = this.setFromMatrixColumn(t, 1).length(), i = this.setFromMatrixColumn(t, 2).length();\n            return this.x = e, this.y = n, this.z = i, this;\n        }\n        setFromMatrixColumn(t, e) {\n            return this.fromArray(t.elements, 4 * e);\n        }\n        setFromMatrix3Column(t, e) {\n            return this.fromArray(t.elements, 3 * e);\n        }\n        equals(t) {\n            return t.x === this.x && t.y === this.y && t.z === this.z;\n        }\n        fromArray(t, e = 0) {\n            return this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this;\n        }\n        toArray(t = [], e = 0) {\n            return t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t;\n        }\n        fromBufferAttribute(t, e, n) {\n            return void 0 !== n && console.warn(\"THREE.Vector3: offset has been removed from .fromBufferAttribute().\"), this.x = t.getX(e), this.y = t.getY(e), this.z = t.getZ(e), this;\n        }\n        random() {\n            return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;\n        }\n        randomDirection() {\n            const t = 2 * (Math.random() - .5), e = Math.random() * Math.PI * 2, n = Math.sqrt(1 - t ** 2);\n            return this.x = n * Math.cos(e), this.y = n * Math.sin(e), this.z = t, this;\n        }\n        *[Symbol.iterator]() {\n            yield this.x, yield this.y, yield this.z;\n        }\n    }\n    zt.prototype.isVector3 = !0;\n    const Bt = new zt, Ft = new Nt;\n    class Ot {\n        constructor(t = new zt(1 / 0, 1 / 0, 1 / 0), e = new zt(-1 / 0, -1 / 0, -1 / 0)){\n            this.min = t, this.max = e;\n        }\n        set(t, e) {\n            return this.min.copy(t), this.max.copy(e), this;\n        }\n        setFromArray(t) {\n            let e = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, s = -1 / 0, a = -1 / 0;\n            for(let o = 0, l = t.length; o < l; o += 3){\n                const l = t[o], c = t[o + 1], h = t[o + 2];\n                l < e && (e = l), c < n && (n = c), h < i && (i = h), l > r && (r = l), c > s && (s = c), h > a && (a = h);\n            }\n            return this.min.set(e, n, i), this.max.set(r, s, a), this;\n        }\n        setFromBufferAttribute(t) {\n            let e = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, s = -1 / 0, a = -1 / 0;\n            for(let o = 0, l = t.count; o < l; o++){\n                const l = t.getX(o), c = t.getY(o), h = t.getZ(o);\n                l < e && (e = l), c < n && (n = c), h < i && (i = h), l > r && (r = l), c > s && (s = c), h > a && (a = h);\n            }\n            return this.min.set(e, n, i), this.max.set(r, s, a), this;\n        }\n        setFromPoints(t) {\n            this.makeEmpty();\n            for(let e = 0, n = t.length; e < n; e++)this.expandByPoint(t[e]);\n            return this;\n        }\n        setFromCenterAndSize(t, e) {\n            const n = Ht.copy(e).multiplyScalar(.5);\n            return this.min.copy(t).sub(n), this.max.copy(t).add(n), this;\n        }\n        setFromObject(t) {\n            return this.makeEmpty(), this.expandByObject(t);\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            return this.min.copy(t.min), this.max.copy(t.max), this;\n        }\n        makeEmpty() {\n            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;\n        }\n        isEmpty() {\n            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n        }\n        getCenter(t) {\n            return this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5);\n        }\n        getSize(t) {\n            return this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min);\n        }\n        expandByPoint(t) {\n            return this.min.min(t), this.max.max(t), this;\n        }\n        expandByVector(t) {\n            return this.min.sub(t), this.max.add(t), this;\n        }\n        expandByScalar(t) {\n            return this.min.addScalar(-t), this.max.addScalar(t), this;\n        }\n        expandByObject(t) {\n            t.updateWorldMatrix(!1, !1);\n            const e = t.geometry;\n            void 0 !== e && (null === e.boundingBox && e.computeBoundingBox(), Gt.copy(e.boundingBox), Gt.applyMatrix4(t.matrixWorld), this.union(Gt));\n            const n = t.children;\n            for(let t = 0, e = n.length; t < e; t++)this.expandByObject(n[t]);\n            return this;\n        }\n        containsPoint(t) {\n            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z);\n        }\n        containsBox(t) {\n            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z;\n        }\n        getParameter(t, e) {\n            return e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z));\n        }\n        intersectsBox(t) {\n            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z);\n        }\n        intersectsSphere(t) {\n            return this.clampPoint(t.center, Ht), Ht.distanceToSquared(t.center) <= t.radius * t.radius;\n        }\n        intersectsPlane(t) {\n            let e, n;\n            return t.normal.x > 0 ? (e = t.normal.x * this.min.x, n = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x, n = t.normal.x * this.min.x), t.normal.y > 0 ? (e += t.normal.y * this.min.y, n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y, n += t.normal.y * this.min.y), t.normal.z > 0 ? (e += t.normal.z * this.min.z, n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z, n += t.normal.z * this.min.z), e <= -t.constant && n >= -t.constant;\n        }\n        intersectsTriangle(t) {\n            if (this.isEmpty()) return !1;\n            this.getCenter(Yt), Jt.subVectors(this.max, Yt), kt.subVectors(t.a, Yt), Vt.subVectors(t.b, Yt), Wt.subVectors(t.c, Yt), jt.subVectors(Vt, kt), qt.subVectors(Wt, Vt), Xt.subVectors(kt, Wt);\n            let e = [\n                0,\n                -jt.z,\n                jt.y,\n                0,\n                -qt.z,\n                qt.y,\n                0,\n                -Xt.z,\n                Xt.y,\n                jt.z,\n                0,\n                -jt.x,\n                qt.z,\n                0,\n                -qt.x,\n                Xt.z,\n                0,\n                -Xt.x,\n                -jt.y,\n                jt.x,\n                0,\n                -qt.y,\n                qt.x,\n                0,\n                -Xt.y,\n                Xt.x,\n                0\n            ];\n            return !!Kt(e, kt, Vt, Wt, Jt) && (e = [\n                1,\n                0,\n                0,\n                0,\n                1,\n                0,\n                0,\n                0,\n                1\n            ], !!Kt(e, kt, Vt, Wt, Jt) && (Zt.crossVectors(jt, qt), e = [\n                Zt.x,\n                Zt.y,\n                Zt.z\n            ], Kt(e, kt, Vt, Wt, Jt)));\n        }\n        clampPoint(t, e) {\n            return e.copy(t).clamp(this.min, this.max);\n        }\n        distanceToPoint(t) {\n            return Ht.copy(t).clamp(this.min, this.max).sub(t).length();\n        }\n        getBoundingSphere(t) {\n            return this.getCenter(t.center), t.radius = .5 * this.getSize(Ht).length(), t;\n        }\n        intersect(t) {\n            return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this;\n        }\n        union(t) {\n            return this.min.min(t.min), this.max.max(t.max), this;\n        }\n        applyMatrix4(t) {\n            return this.isEmpty() || (Ut[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t), Ut[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t), Ut[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t), Ut[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t), Ut[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t), Ut[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t), Ut[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t), Ut[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t), this.setFromPoints(Ut)), this;\n        }\n        translate(t) {\n            return this.min.add(t), this.max.add(t), this;\n        }\n        equals(t) {\n            return t.min.equals(this.min) && t.max.equals(this.max);\n        }\n    }\n    Ot.prototype.isBox3 = !0;\n    const Ut = [\n        new zt,\n        new zt,\n        new zt,\n        new zt,\n        new zt,\n        new zt,\n        new zt,\n        new zt\n    ], Ht = new zt, Gt = new Ot, kt = new zt, Vt = new zt, Wt = new zt, jt = new zt, qt = new zt, Xt = new zt, Yt = new zt, Jt = new zt, Zt = new zt, Qt = new zt;\n    function Kt(t, e, n, i, r) {\n        for(let s = 0, a = t.length - 3; s <= a; s += 3){\n            Qt.fromArray(t, s);\n            const a = r.x * Math.abs(Qt.x) + r.y * Math.abs(Qt.y) + r.z * Math.abs(Qt.z), o = e.dot(Qt), l = n.dot(Qt), c = i.dot(Qt);\n            if (Math.max(-Math.max(o, l, c), Math.min(o, l, c)) > a) return !1;\n        }\n        return !0;\n    }\n    const $t = new Ot, te = new zt, ee = new zt, ne = new zt;\n    class ie {\n        constructor(t = new zt, e = -1){\n            this.center = t, this.radius = e;\n        }\n        set(t, e) {\n            return this.center.copy(t), this.radius = e, this;\n        }\n        setFromPoints(t, e) {\n            const n = this.center;\n            void 0 !== e ? n.copy(e) : $t.setFromPoints(t).getCenter(n);\n            let i = 0;\n            for(let e = 0, r = t.length; e < r; e++)i = Math.max(i, n.distanceToSquared(t[e]));\n            return this.radius = Math.sqrt(i), this;\n        }\n        copy(t) {\n            return this.center.copy(t.center), this.radius = t.radius, this;\n        }\n        isEmpty() {\n            return this.radius < 0;\n        }\n        makeEmpty() {\n            return this.center.set(0, 0, 0), this.radius = -1, this;\n        }\n        containsPoint(t) {\n            return t.distanceToSquared(this.center) <= this.radius * this.radius;\n        }\n        distanceToPoint(t) {\n            return t.distanceTo(this.center) - this.radius;\n        }\n        intersectsSphere(t) {\n            const e = this.radius + t.radius;\n            return t.center.distanceToSquared(this.center) <= e * e;\n        }\n        intersectsBox(t) {\n            return t.intersectsSphere(this);\n        }\n        intersectsPlane(t) {\n            return Math.abs(t.distanceToPoint(this.center)) <= this.radius;\n        }\n        clampPoint(t, e) {\n            const n = this.center.distanceToSquared(t);\n            return e.copy(t), n > this.radius * this.radius && (e.sub(this.center).normalize(), e.multiplyScalar(this.radius).add(this.center)), e;\n        }\n        getBoundingBox(t) {\n            return this.isEmpty() ? (t.makeEmpty(), t) : (t.set(this.center, this.center), t.expandByScalar(this.radius), t);\n        }\n        applyMatrix4(t) {\n            return this.center.applyMatrix4(t), this.radius = this.radius * t.getMaxScaleOnAxis(), this;\n        }\n        translate(t) {\n            return this.center.add(t), this;\n        }\n        expandByPoint(t) {\n            ne.subVectors(t, this.center);\n            const e = ne.lengthSq();\n            if (e > this.radius * this.radius) {\n                const t = Math.sqrt(e), n = .5 * (t - this.radius);\n                this.center.add(ne.multiplyScalar(n / t)), this.radius += n;\n            }\n            return this;\n        }\n        union(t) {\n            return ee.subVectors(t.center, this.center).normalize().multiplyScalar(t.radius), this.expandByPoint(te.copy(t.center).add(ee)), this.expandByPoint(te.copy(t.center).sub(ee)), this;\n        }\n        equals(t) {\n            return t.center.equals(this.center) && t.radius === this.radius;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }\n    const re = new zt, se = new zt, ae = new zt, oe = new zt, le = new zt, ce = new zt, he = new zt;\n    class ue {\n        constructor(t = new zt, e = new zt(0, 0, -1)){\n            this.origin = t, this.direction = e;\n        }\n        set(t, e) {\n            return this.origin.copy(t), this.direction.copy(e), this;\n        }\n        copy(t) {\n            return this.origin.copy(t.origin), this.direction.copy(t.direction), this;\n        }\n        at(t, e) {\n            return e.copy(this.direction).multiplyScalar(t).add(this.origin);\n        }\n        lookAt(t) {\n            return this.direction.copy(t).sub(this.origin).normalize(), this;\n        }\n        recast(t) {\n            return this.origin.copy(this.at(t, re)), this;\n        }\n        closestPointToPoint(t, e) {\n            e.subVectors(t, this.origin);\n            const n = e.dot(this.direction);\n            return n < 0 ? e.copy(this.origin) : e.copy(this.direction).multiplyScalar(n).add(this.origin);\n        }\n        distanceToPoint(t) {\n            return Math.sqrt(this.distanceSqToPoint(t));\n        }\n        distanceSqToPoint(t) {\n            const e = re.subVectors(t, this.origin).dot(this.direction);\n            return e < 0 ? this.origin.distanceToSquared(t) : (re.copy(this.direction).multiplyScalar(e).add(this.origin), re.distanceToSquared(t));\n        }\n        distanceSqToSegment(t, e, n, i) {\n            se.copy(t).add(e).multiplyScalar(.5), ae.copy(e).sub(t).normalize(), oe.copy(this.origin).sub(se);\n            const r = .5 * t.distanceTo(e), s = -this.direction.dot(ae), a = oe.dot(this.direction), o = -oe.dot(ae), l = oe.lengthSq(), c = Math.abs(1 - s * s);\n            let h, u, d, p;\n            if (c > 0) {\n                if (h = s * o - a, u = s * a - o, p = r * c, h >= 0) {\n                    if (u >= -p) {\n                        if (u <= p) {\n                            const t = 1 / c;\n                            h *= t, u *= t, d = h * (h + s * u + 2 * a) + u * (s * h + u + 2 * o) + l;\n                        } else u = r, h = Math.max(0, -(s * u + a)), d = -h * h + u * (u + 2 * o) + l;\n                    } else u = -r, h = Math.max(0, -(s * u + a)), d = -h * h + u * (u + 2 * o) + l;\n                } else u <= -p ? (h = Math.max(0, -(-s * r + a)), u = h > 0 ? -r : Math.min(Math.max(-r, -o), r), d = -h * h + u * (u + 2 * o) + l) : u <= p ? (h = 0, u = Math.min(Math.max(-r, -o), r), d = u * (u + 2 * o) + l) : (h = Math.max(0, -(s * r + a)), u = h > 0 ? r : Math.min(Math.max(-r, -o), r), d = -h * h + u * (u + 2 * o) + l);\n            } else u = s > 0 ? -r : r, h = Math.max(0, -(s * u + a)), d = -h * h + u * (u + 2 * o) + l;\n            return n && n.copy(this.direction).multiplyScalar(h).add(this.origin), i && i.copy(ae).multiplyScalar(u).add(se), d;\n        }\n        intersectSphere(t, e) {\n            re.subVectors(t.center, this.origin);\n            const n = re.dot(this.direction), i = re.dot(re) - n * n, r = t.radius * t.radius;\n            if (i > r) return null;\n            const s = Math.sqrt(r - i), a = n - s, o = n + s;\n            return a < 0 && o < 0 ? null : a < 0 ? this.at(o, e) : this.at(a, e);\n        }\n        intersectsSphere(t) {\n            return this.distanceSqToPoint(t.center) <= t.radius * t.radius;\n        }\n        distanceToPlane(t) {\n            const e = t.normal.dot(this.direction);\n            if (0 === e) return 0 === t.distanceToPoint(this.origin) ? 0 : null;\n            const n = -(this.origin.dot(t.normal) + t.constant) / e;\n            return n >= 0 ? n : null;\n        }\n        intersectPlane(t, e) {\n            const n = this.distanceToPlane(t);\n            return null === n ? null : this.at(n, e);\n        }\n        intersectsPlane(t) {\n            const e = t.distanceToPoint(this.origin);\n            if (0 === e) return !0;\n            return t.normal.dot(this.direction) * e < 0;\n        }\n        intersectBox(t, e) {\n            let n, i, r, s, a, o;\n            const l = 1 / this.direction.x, c = 1 / this.direction.y, h = 1 / this.direction.z, u = this.origin;\n            return l >= 0 ? (n = (t.min.x - u.x) * l, i = (t.max.x - u.x) * l) : (n = (t.max.x - u.x) * l, i = (t.min.x - u.x) * l), c >= 0 ? (r = (t.min.y - u.y) * c, s = (t.max.y - u.y) * c) : (r = (t.max.y - u.y) * c, s = (t.min.y - u.y) * c), n > s || r > i ? null : ((r > n || n != n) && (n = r), (s < i || i != i) && (i = s), h >= 0 ? (a = (t.min.z - u.z) * h, o = (t.max.z - u.z) * h) : (a = (t.max.z - u.z) * h, o = (t.min.z - u.z) * h), n > o || a > i ? null : ((a > n || n != n) && (n = a), (o < i || i != i) && (i = o), i < 0 ? null : this.at(n >= 0 ? n : i, e)));\n        }\n        intersectsBox(t) {\n            return null !== this.intersectBox(t, re);\n        }\n        intersectTriangle(t, e, n, i, r) {\n            le.subVectors(e, t), ce.subVectors(n, t), he.crossVectors(le, ce);\n            let s, a = this.direction.dot(he);\n            if (a > 0) {\n                if (i) return null;\n                s = 1;\n            } else {\n                if (!(a < 0)) return null;\n                s = -1, a = -a;\n            }\n            oe.subVectors(this.origin, t);\n            const o = s * this.direction.dot(ce.crossVectors(oe, ce));\n            if (o < 0) return null;\n            const l = s * this.direction.dot(le.cross(oe));\n            if (l < 0) return null;\n            if (o + l > a) return null;\n            const c = -s * oe.dot(he);\n            return c < 0 ? null : this.at(c / a, r);\n        }\n        applyMatrix4(t) {\n            return this.origin.applyMatrix4(t), this.direction.transformDirection(t), this;\n        }\n        equals(t) {\n            return t.origin.equals(this.origin) && t.direction.equals(this.direction);\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }\n    class de {\n        constructor(){\n            this.elements = [\n                1,\n                0,\n                0,\n                0,\n                0,\n                1,\n                0,\n                0,\n                0,\n                0,\n                1,\n                0,\n                0,\n                0,\n                0,\n                1\n            ], arguments.length > 0 && console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\");\n        }\n        set(t, e, n, i, r, s, a, o, l, c, h, u, d, p, m, f) {\n            const g = this.elements;\n            return g[0] = t, g[4] = e, g[8] = n, g[12] = i, g[1] = r, g[5] = s, g[9] = a, g[13] = o, g[2] = l, g[6] = c, g[10] = h, g[14] = u, g[3] = d, g[7] = p, g[11] = m, g[15] = f, this;\n        }\n        identity() {\n            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;\n        }\n        clone() {\n            return (new de).fromArray(this.elements);\n        }\n        copy(t) {\n            const e = this.elements, n = t.elements;\n            return e[0] = n[0], e[1] = n[1], e[2] = n[2], e[3] = n[3], e[4] = n[4], e[5] = n[5], e[6] = n[6], e[7] = n[7], e[8] = n[8], e[9] = n[9], e[10] = n[10], e[11] = n[11], e[12] = n[12], e[13] = n[13], e[14] = n[14], e[15] = n[15], this;\n        }\n        copyPosition(t) {\n            const e = this.elements, n = t.elements;\n            return e[12] = n[12], e[13] = n[13], e[14] = n[14], this;\n        }\n        setFromMatrix3(t) {\n            const e = t.elements;\n            return this.set(e[0], e[3], e[6], 0, e[1], e[4], e[7], 0, e[2], e[5], e[8], 0, 0, 0, 0, 1), this;\n        }\n        extractBasis(t, e, n) {\n            return t.setFromMatrixColumn(this, 0), e.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;\n        }\n        makeBasis(t, e, n) {\n            return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1), this;\n        }\n        extractRotation(t) {\n            const e = this.elements, n = t.elements, i = 1 / pe.setFromMatrixColumn(t, 0).length(), r = 1 / pe.setFromMatrixColumn(t, 1).length(), s = 1 / pe.setFromMatrixColumn(t, 2).length();\n            return e[0] = n[0] * i, e[1] = n[1] * i, e[2] = n[2] * i, e[3] = 0, e[4] = n[4] * r, e[5] = n[5] * r, e[6] = n[6] * r, e[7] = 0, e[8] = n[8] * s, e[9] = n[9] * s, e[10] = n[10] * s, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;\n        }\n        makeRotationFromEuler(t) {\n            t && t.isEuler || console.error(\"THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");\n            const e = this.elements, n = t.x, i = t.y, r = t.z, s = Math.cos(n), a = Math.sin(n), o = Math.cos(i), l = Math.sin(i), c = Math.cos(r), h = Math.sin(r);\n            if (\"XYZ\" === t.order) {\n                const t = s * c, n = s * h, i = a * c, r = a * h;\n                e[0] = o * c, e[4] = -o * h, e[8] = l, e[1] = n + i * l, e[5] = t - r * l, e[9] = -a * o, e[2] = r - t * l, e[6] = i + n * l, e[10] = s * o;\n            } else if (\"YXZ\" === t.order) {\n                const t = o * c, n = o * h, i = l * c, r = l * h;\n                e[0] = t + r * a, e[4] = i * a - n, e[8] = s * l, e[1] = s * h, e[5] = s * c, e[9] = -a, e[2] = n * a - i, e[6] = r + t * a, e[10] = s * o;\n            } else if (\"ZXY\" === t.order) {\n                const t = o * c, n = o * h, i = l * c, r = l * h;\n                e[0] = t - r * a, e[4] = -s * h, e[8] = i + n * a, e[1] = n + i * a, e[5] = s * c, e[9] = r - t * a, e[2] = -s * l, e[6] = a, e[10] = s * o;\n            } else if (\"ZYX\" === t.order) {\n                const t = s * c, n = s * h, i = a * c, r = a * h;\n                e[0] = o * c, e[4] = i * l - n, e[8] = t * l + r, e[1] = o * h, e[5] = r * l + t, e[9] = n * l - i, e[2] = -l, e[6] = a * o, e[10] = s * o;\n            } else if (\"YZX\" === t.order) {\n                const t = s * o, n = s * l, i = a * o, r = a * l;\n                e[0] = o * c, e[4] = r - t * h, e[8] = i * h + n, e[1] = h, e[5] = s * c, e[9] = -a * c, e[2] = -l * c, e[6] = n * h + i, e[10] = t - r * h;\n            } else if (\"XZY\" === t.order) {\n                const t = s * o, n = s * l, i = a * o, r = a * l;\n                e[0] = o * c, e[4] = -h, e[8] = l * c, e[1] = t * h + r, e[5] = s * c, e[9] = n * h - i, e[2] = i * h - n, e[6] = a * c, e[10] = r * h + t;\n            }\n            return e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;\n        }\n        makeRotationFromQuaternion(t) {\n            return this.compose(fe, t, ge);\n        }\n        lookAt(t, e, n) {\n            const i = this.elements;\n            return xe.subVectors(t, e), 0 === xe.lengthSq() && (xe.z = 1), xe.normalize(), ve.crossVectors(n, xe), 0 === ve.lengthSq() && (1 === Math.abs(n.z) ? xe.x += 1e-4 : xe.z += 1e-4, xe.normalize(), ve.crossVectors(n, xe)), ve.normalize(), ye.crossVectors(xe, ve), i[0] = ve.x, i[4] = ye.x, i[8] = xe.x, i[1] = ve.y, i[5] = ye.y, i[9] = xe.y, i[2] = ve.z, i[6] = ye.z, i[10] = xe.z, this;\n        }\n        multiply(t, e) {\n            return void 0 !== e ? (console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"), this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t);\n        }\n        premultiply(t) {\n            return this.multiplyMatrices(t, this);\n        }\n        multiplyMatrices(t, e) {\n            const n = t.elements, i = e.elements, r = this.elements, s = n[0], a = n[4], o = n[8], l = n[12], c = n[1], h = n[5], u = n[9], d = n[13], p = n[2], m = n[6], f = n[10], g = n[14], v = n[3], y = n[7], x = n[11], _ = n[15], M = i[0], b = i[4], w = i[8], S = i[12], T = i[1], E = i[5], A = i[9], L = i[13], R = i[2], C = i[6], P = i[10], I = i[14], D = i[3], N = i[7], z = i[11], B = i[15];\n            return r[0] = s * M + a * T + o * R + l * D, r[4] = s * b + a * E + o * C + l * N, r[8] = s * w + a * A + o * P + l * z, r[12] = s * S + a * L + o * I + l * B, r[1] = c * M + h * T + u * R + d * D, r[5] = c * b + h * E + u * C + d * N, r[9] = c * w + h * A + u * P + d * z, r[13] = c * S + h * L + u * I + d * B, r[2] = p * M + m * T + f * R + g * D, r[6] = p * b + m * E + f * C + g * N, r[10] = p * w + m * A + f * P + g * z, r[14] = p * S + m * L + f * I + g * B, r[3] = v * M + y * T + x * R + _ * D, r[7] = v * b + y * E + x * C + _ * N, r[11] = v * w + y * A + x * P + _ * z, r[15] = v * S + y * L + x * I + _ * B, this;\n        }\n        multiplyScalar(t) {\n            const e = this.elements;\n            return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this;\n        }\n        determinant() {\n            const t = this.elements, e = t[0], n = t[4], i = t[8], r = t[12], s = t[1], a = t[5], o = t[9], l = t[13], c = t[2], h = t[6], u = t[10], d = t[14];\n            return t[3] * (+r * o * h - i * l * h - r * a * u + n * l * u + i * a * d - n * o * d) + t[7] * (+e * o * d - e * l * u + r * s * u - i * s * d + i * l * c - r * o * c) + t[11] * (+e * l * h - e * a * d - r * s * h + n * s * d + r * a * c - n * l * c) + t[15] * (-i * a * c - e * o * h + e * a * u + i * s * h - n * s * u + n * o * c);\n        }\n        transpose() {\n            const t = this.elements;\n            let e;\n            return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this;\n        }\n        setPosition(t, e, n) {\n            const i = this.elements;\n            return t.isVector3 ? (i[12] = t.x, i[13] = t.y, i[14] = t.z) : (i[12] = t, i[13] = e, i[14] = n), this;\n        }\n        invert() {\n            const t = this.elements, e = t[0], n = t[1], i = t[2], r = t[3], s = t[4], a = t[5], o = t[6], l = t[7], c = t[8], h = t[9], u = t[10], d = t[11], p = t[12], m = t[13], f = t[14], g = t[15], v = h * f * l - m * u * l + m * o * d - a * f * d - h * o * g + a * u * g, y = p * u * l - c * f * l - p * o * d + s * f * d + c * o * g - s * u * g, x = c * m * l - p * h * l + p * a * d - s * m * d - c * a * g + s * h * g, _ = p * h * o - c * m * o - p * a * u + s * m * u + c * a * f - s * h * f, M = e * v + n * y + i * x + r * _;\n            if (0 === M) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            const b = 1 / M;\n            return t[0] = v * b, t[1] = (m * u * r - h * f * r - m * i * d + n * f * d + h * i * g - n * u * g) * b, t[2] = (a * f * r - m * o * r + m * i * l - n * f * l - a * i * g + n * o * g) * b, t[3] = (h * o * r - a * u * r - h * i * l + n * u * l + a * i * d - n * o * d) * b, t[4] = y * b, t[5] = (c * f * r - p * u * r + p * i * d - e * f * d - c * i * g + e * u * g) * b, t[6] = (p * o * r - s * f * r - p * i * l + e * f * l + s * i * g - e * o * g) * b, t[7] = (s * u * r - c * o * r + c * i * l - e * u * l - s * i * d + e * o * d) * b, t[8] = x * b, t[9] = (p * h * r - c * m * r - p * n * d + e * m * d + c * n * g - e * h * g) * b, t[10] = (s * m * r - p * a * r + p * n * l - e * m * l - s * n * g + e * a * g) * b, t[11] = (c * a * r - s * h * r - c * n * l + e * h * l + s * n * d - e * a * d) * b, t[12] = _ * b, t[13] = (c * m * i - p * h * i + p * n * u - e * m * u - c * n * f + e * h * f) * b, t[14] = (p * a * i - s * m * i - p * n * o + e * m * o + s * n * f - e * a * f) * b, t[15] = (s * h * i - c * a * i + c * n * o - e * h * o - s * n * u + e * a * u) * b, this;\n        }\n        scale(t) {\n            const e = this.elements, n = t.x, i = t.y, r = t.z;\n            return e[0] *= n, e[4] *= i, e[8] *= r, e[1] *= n, e[5] *= i, e[9] *= r, e[2] *= n, e[6] *= i, e[10] *= r, e[3] *= n, e[7] *= i, e[11] *= r, this;\n        }\n        getMaxScaleOnAxis() {\n            const t = this.elements, e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2], n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6], i = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];\n            return Math.sqrt(Math.max(e, n, i));\n        }\n        makeTranslation(t, e, n) {\n            return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1), this;\n        }\n        makeRotationX(t) {\n            const e = Math.cos(t), n = Math.sin(t);\n            return this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1), this;\n        }\n        makeRotationY(t) {\n            const e = Math.cos(t), n = Math.sin(t);\n            return this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1), this;\n        }\n        makeRotationZ(t) {\n            const e = Math.cos(t), n = Math.sin(t);\n            return this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;\n        }\n        makeRotationAxis(t, e) {\n            const n = Math.cos(e), i = Math.sin(e), r = 1 - n, s = t.x, a = t.y, o = t.z, l = r * s, c = r * a;\n            return this.set(l * s + n, l * a - i * o, l * o + i * a, 0, l * a + i * o, c * a + n, c * o - i * s, 0, l * o - i * a, c * o + i * s, r * o * o + n, 0, 0, 0, 0, 1), this;\n        }\n        makeScale(t, e, n) {\n            return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;\n        }\n        makeShear(t, e, n, i, r, s) {\n            return this.set(1, n, r, 0, t, 1, s, 0, e, i, 1, 0, 0, 0, 0, 1), this;\n        }\n        compose(t, e, n) {\n            const i = this.elements, r = e._x, s = e._y, a = e._z, o = e._w, l = r + r, c = s + s, h = a + a, u = r * l, d = r * c, p = r * h, m = s * c, f = s * h, g = a * h, v = o * l, y = o * c, x = o * h, _ = n.x, M = n.y, b = n.z;\n            return i[0] = (1 - (m + g)) * _, i[1] = (d + x) * _, i[2] = (p - y) * _, i[3] = 0, i[4] = (d - x) * M, i[5] = (1 - (u + g)) * M, i[6] = (f + v) * M, i[7] = 0, i[8] = (p + y) * b, i[9] = (f - v) * b, i[10] = (1 - (u + m)) * b, i[11] = 0, i[12] = t.x, i[13] = t.y, i[14] = t.z, i[15] = 1, this;\n        }\n        decompose(t, e, n) {\n            const i = this.elements;\n            let r = pe.set(i[0], i[1], i[2]).length();\n            const s = pe.set(i[4], i[5], i[6]).length(), a = pe.set(i[8], i[9], i[10]).length();\n            this.determinant() < 0 && (r = -r), t.x = i[12], t.y = i[13], t.z = i[14], me.copy(this);\n            const o = 1 / r, l = 1 / s, c = 1 / a;\n            return me.elements[0] *= o, me.elements[1] *= o, me.elements[2] *= o, me.elements[4] *= l, me.elements[5] *= l, me.elements[6] *= l, me.elements[8] *= c, me.elements[9] *= c, me.elements[10] *= c, e.setFromRotationMatrix(me), n.x = r, n.y = s, n.z = a, this;\n        }\n        makePerspective(t, e, n, i, r, s) {\n            void 0 === s && console.warn(\"THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.\");\n            const a = this.elements, o = 2 * r / (e - t), l = 2 * r / (n - i), c = (e + t) / (e - t), h = (n + i) / (n - i), u = -(s + r) / (s - r), d = -2 * s * r / (s - r);\n            return a[0] = o, a[4] = 0, a[8] = c, a[12] = 0, a[1] = 0, a[5] = l, a[9] = h, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = u, a[14] = d, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;\n        }\n        makeOrthographic(t, e, n, i, r, s) {\n            const a = this.elements, o = 1 / (e - t), l = 1 / (n - i), c = 1 / (s - r), h = (e + t) * o, u = (n + i) * l, d = (s + r) * c;\n            return a[0] = 2 * o, a[4] = 0, a[8] = 0, a[12] = -h, a[1] = 0, a[5] = 2 * l, a[9] = 0, a[13] = -u, a[2] = 0, a[6] = 0, a[10] = -2 * c, a[14] = -d, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;\n        }\n        equals(t) {\n            const e = this.elements, n = t.elements;\n            for(let t = 0; t < 16; t++)if (e[t] !== n[t]) return !1;\n            return !0;\n        }\n        fromArray(t, e = 0) {\n            for(let n = 0; n < 16; n++)this.elements[n] = t[n + e];\n            return this;\n        }\n        toArray(t = [], e = 0) {\n            const n = this.elements;\n            return t[e] = n[0], t[e + 1] = n[1], t[e + 2] = n[2], t[e + 3] = n[3], t[e + 4] = n[4], t[e + 5] = n[5], t[e + 6] = n[6], t[e + 7] = n[7], t[e + 8] = n[8], t[e + 9] = n[9], t[e + 10] = n[10], t[e + 11] = n[11], t[e + 12] = n[12], t[e + 13] = n[13], t[e + 14] = n[14], t[e + 15] = n[15], t;\n        }\n    }\n    de.prototype.isMatrix4 = !0;\n    const pe = new zt, me = new de, fe = new zt(0, 0, 0), ge = new zt(1, 1, 1), ve = new zt, ye = new zt, xe = new zt, _e = new de, Me = new Nt;\n    class be {\n        constructor(t = 0, e = 0, n = 0, i = be.DefaultOrder){\n            this._x = t, this._y = e, this._z = n, this._order = i;\n        }\n        get x() {\n            return this._x;\n        }\n        set x(t) {\n            this._x = t, this._onChangeCallback();\n        }\n        get y() {\n            return this._y;\n        }\n        set y(t) {\n            this._y = t, this._onChangeCallback();\n        }\n        get z() {\n            return this._z;\n        }\n        set z(t) {\n            this._z = t, this._onChangeCallback();\n        }\n        get order() {\n            return this._order;\n        }\n        set order(t) {\n            this._order = t, this._onChangeCallback();\n        }\n        set(t, e, n, i = this._order) {\n            return this._x = t, this._y = e, this._z = n, this._order = i, this._onChangeCallback(), this;\n        }\n        clone() {\n            return new this.constructor(this._x, this._y, this._z, this._order);\n        }\n        copy(t) {\n            return this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this._onChangeCallback(), this;\n        }\n        setFromRotationMatrix(t, e = this._order, n = !0) {\n            const i = t.elements, r = i[0], s = i[4], a = i[8], o = i[1], l = i[5], c = i[9], h = i[2], u = i[6], d = i[10];\n            switch(e){\n                case \"XYZ\":\n                    this._y = Math.asin(ut(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-c, d), this._z = Math.atan2(-s, r)) : (this._x = Math.atan2(u, l), this._z = 0);\n                    break;\n                case \"YXZ\":\n                    this._x = Math.asin(-ut(c, -1, 1)), Math.abs(c) < .9999999 ? (this._y = Math.atan2(a, d), this._z = Math.atan2(o, l)) : (this._y = Math.atan2(-h, r), this._z = 0);\n                    break;\n                case \"ZXY\":\n                    this._x = Math.asin(ut(u, -1, 1)), Math.abs(u) < .9999999 ? (this._y = Math.atan2(-h, d), this._z = Math.atan2(-s, l)) : (this._y = 0, this._z = Math.atan2(o, r));\n                    break;\n                case \"ZYX\":\n                    this._y = Math.asin(-ut(h, -1, 1)), Math.abs(h) < .9999999 ? (this._x = Math.atan2(u, d), this._z = Math.atan2(o, r)) : (this._x = 0, this._z = Math.atan2(-s, l));\n                    break;\n                case \"YZX\":\n                    this._z = Math.asin(ut(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(-c, l), this._y = Math.atan2(-h, r)) : (this._x = 0, this._y = Math.atan2(a, d));\n                    break;\n                case \"XZY\":\n                    this._z = Math.asin(-ut(s, -1, 1)), Math.abs(s) < .9999999 ? (this._x = Math.atan2(u, l), this._y = Math.atan2(a, r)) : (this._x = Math.atan2(-c, d), this._y = 0);\n                    break;\n                default:\n                    console.warn(\"THREE.Euler: .setFromRotationMatrix() encountered an unknown order: \" + e);\n            }\n            return this._order = e, !0 === n && this._onChangeCallback(), this;\n        }\n        setFromQuaternion(t, e, n) {\n            return _e.makeRotationFromQuaternion(t), this.setFromRotationMatrix(_e, e, n);\n        }\n        setFromVector3(t, e = this._order) {\n            return this.set(t.x, t.y, t.z, e);\n        }\n        reorder(t) {\n            return Me.setFromEuler(this), this.setFromQuaternion(Me, t);\n        }\n        equals(t) {\n            return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order;\n        }\n        fromArray(t) {\n            return this._x = t[0], this._y = t[1], this._z = t[2], void 0 !== t[3] && (this._order = t[3]), this._onChangeCallback(), this;\n        }\n        toArray(t = [], e = 0) {\n            return t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._order, t;\n        }\n        toVector3(t) {\n            return t ? t.set(this._x, this._y, this._z) : new zt(this._x, this._y, this._z);\n        }\n        _onChange(t) {\n            return this._onChangeCallback = t, this;\n        }\n        _onChangeCallback() {}\n    }\n    be.prototype.isEuler = !0, be.DefaultOrder = \"XYZ\", be.RotationOrders = [\n        \"XYZ\",\n        \"YZX\",\n        \"ZXY\",\n        \"XZY\",\n        \"YXZ\",\n        \"ZYX\"\n    ];\n    class we {\n        constructor(){\n            this.mask = 1;\n        }\n        set(t) {\n            this.mask = 1 << t | 0;\n        }\n        enable(t) {\n            this.mask |= 1 << t | 0;\n        }\n        enableAll() {\n            this.mask = -1;\n        }\n        toggle(t) {\n            this.mask ^= 1 << t | 0;\n        }\n        disable(t) {\n            this.mask &= ~(1 << t | 0);\n        }\n        disableAll() {\n            this.mask = 0;\n        }\n        test(t) {\n            return 0 != (this.mask & t.mask);\n        }\n    }\n    let Se = 0;\n    const Te = new zt, Ee = new Nt, Ae = new de, Le = new zt, Re = new zt, Ce = new zt, Pe = new Nt, Ie = new zt(1, 0, 0), De = new zt(0, 1, 0), Ne = new zt(0, 0, 1), ze = {\n        type: \"added\"\n    }, Be = {\n        type: \"removed\"\n    };\n    class Fe extends rt {\n        constructor(){\n            super(), Object.defineProperty(this, \"id\", {\n                value: Se++\n            }), this.uuid = ht(), this.name = \"\", this.type = \"Object3D\", this.parent = null, this.children = [], this.up = Fe.DefaultUp.clone();\n            const t = new zt, e = new be, n = new Nt, i = new zt(1, 1, 1);\n            e._onChange(function() {\n                n.setFromEuler(e, !1);\n            }), n._onChange(function() {\n                e.setFromQuaternion(n, void 0, !1);\n            }), Object.defineProperties(this, {\n                position: {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: t\n                },\n                rotation: {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: e\n                },\n                quaternion: {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: n\n                },\n                scale: {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: i\n                },\n                modelViewMatrix: {\n                    value: new de\n                },\n                normalMatrix: {\n                    value: new xt\n                }\n            }), this.matrix = new de, this.matrixWorld = new de, this.matrixAutoUpdate = Fe.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new we, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};\n        }\n        onBeforeRender() {}\n        onAfterRender() {}\n        applyMatrix4(t) {\n            this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(t), this.matrix.decompose(this.position, this.quaternion, this.scale);\n        }\n        applyQuaternion(t) {\n            return this.quaternion.premultiply(t), this;\n        }\n        setRotationFromAxisAngle(t, e) {\n            this.quaternion.setFromAxisAngle(t, e);\n        }\n        setRotationFromEuler(t) {\n            this.quaternion.setFromEuler(t, !0);\n        }\n        setRotationFromMatrix(t) {\n            this.quaternion.setFromRotationMatrix(t);\n        }\n        setRotationFromQuaternion(t) {\n            this.quaternion.copy(t);\n        }\n        rotateOnAxis(t, e) {\n            return Ee.setFromAxisAngle(t, e), this.quaternion.multiply(Ee), this;\n        }\n        rotateOnWorldAxis(t, e) {\n            return Ee.setFromAxisAngle(t, e), this.quaternion.premultiply(Ee), this;\n        }\n        rotateX(t) {\n            return this.rotateOnAxis(Ie, t);\n        }\n        rotateY(t) {\n            return this.rotateOnAxis(De, t);\n        }\n        rotateZ(t) {\n            return this.rotateOnAxis(Ne, t);\n        }\n        translateOnAxis(t, e) {\n            return Te.copy(t).applyQuaternion(this.quaternion), this.position.add(Te.multiplyScalar(e)), this;\n        }\n        translateX(t) {\n            return this.translateOnAxis(Ie, t);\n        }\n        translateY(t) {\n            return this.translateOnAxis(De, t);\n        }\n        translateZ(t) {\n            return this.translateOnAxis(Ne, t);\n        }\n        localToWorld(t) {\n            return t.applyMatrix4(this.matrixWorld);\n        }\n        worldToLocal(t) {\n            return t.applyMatrix4(Ae.copy(this.matrixWorld).invert());\n        }\n        lookAt(t, e, n) {\n            t.isVector3 ? Le.copy(t) : Le.set(t, e, n);\n            const i = this.parent;\n            this.updateWorldMatrix(!0, !1), Re.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Ae.lookAt(Re, Le, this.up) : Ae.lookAt(Le, Re, this.up), this.quaternion.setFromRotationMatrix(Ae), i && (Ae.extractRotation(i.matrixWorld), Ee.setFromRotationMatrix(Ae), this.quaternion.premultiply(Ee.invert()));\n        }\n        add(t) {\n            if (arguments.length > 1) {\n                for(let t = 0; t < arguments.length; t++)this.add(arguments[t]);\n                return this;\n            }\n            return t === this ? (console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", t), this) : (t && t.isObject3D ? (null !== t.parent && t.parent.remove(t), t.parent = this, this.children.push(t), t.dispatchEvent(ze)) : console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", t), this);\n        }\n        remove(t) {\n            if (arguments.length > 1) {\n                for(let t = 0; t < arguments.length; t++)this.remove(arguments[t]);\n                return this;\n            }\n            const e = this.children.indexOf(t);\n            return -1 !== e && (t.parent = null, this.children.splice(e, 1), t.dispatchEvent(Be)), this;\n        }\n        removeFromParent() {\n            const t = this.parent;\n            return null !== t && t.remove(this), this;\n        }\n        clear() {\n            for(let t = 0; t < this.children.length; t++){\n                const e = this.children[t];\n                e.parent = null, e.dispatchEvent(Be);\n            }\n            return this.children.length = 0, this;\n        }\n        attach(t) {\n            return this.updateWorldMatrix(!0, !1), Ae.copy(this.matrixWorld).invert(), null !== t.parent && (t.parent.updateWorldMatrix(!0, !1), Ae.multiply(t.parent.matrixWorld)), t.applyMatrix4(Ae), this.add(t), t.updateWorldMatrix(!1, !0), this;\n        }\n        getObjectById(t) {\n            return this.getObjectByProperty(\"id\", t);\n        }\n        getObjectByName(t) {\n            return this.getObjectByProperty(\"name\", t);\n        }\n        getObjectByProperty(t, e) {\n            if (this[t] === e) return this;\n            for(let n = 0, i = this.children.length; n < i; n++){\n                const i = this.children[n].getObjectByProperty(t, e);\n                if (void 0 !== i) return i;\n            }\n        }\n        getWorldPosition(t) {\n            return this.updateWorldMatrix(!0, !1), t.setFromMatrixPosition(this.matrixWorld);\n        }\n        getWorldQuaternion(t) {\n            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Re, t, Ce), t;\n        }\n        getWorldScale(t) {\n            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Re, Pe, t), t;\n        }\n        getWorldDirection(t) {\n            this.updateWorldMatrix(!0, !1);\n            const e = this.matrixWorld.elements;\n            return t.set(e[8], e[9], e[10]).normalize();\n        }\n        raycast() {}\n        traverse(t) {\n            t(this);\n            const e = this.children;\n            for(let n = 0, i = e.length; n < i; n++)e[n].traverse(t);\n        }\n        traverseVisible(t) {\n            if (!1 === this.visible) return;\n            t(this);\n            const e = this.children;\n            for(let n = 0, i = e.length; n < i; n++)e[n].traverseVisible(t);\n        }\n        traverseAncestors(t) {\n            const e = this.parent;\n            null !== e && (t(e), e.traverseAncestors(t));\n        }\n        updateMatrix() {\n            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;\n        }\n        updateMatrixWorld(t) {\n            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, t = !0);\n            const e = this.children;\n            for(let n = 0, i = e.length; n < i; n++)e[n].updateMatrixWorld(t);\n        }\n        updateWorldMatrix(t, e) {\n            const n = this.parent;\n            if (!0 === t && null !== n && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), !0 === e) {\n                const t = this.children;\n                for(let e = 0, n = t.length; e < n; e++)t[e].updateWorldMatrix(!1, !0);\n            }\n        }\n        toJSON(t) {\n            const e = void 0 === t || \"string\" == typeof t, n = {};\n            e && (t = {\n                geometries: {},\n                materials: {},\n                textures: {},\n                images: {},\n                shapes: {},\n                skeletons: {},\n                animations: {}\n            }, n.metadata = {\n                version: 4.5,\n                type: \"Object\",\n                generator: \"Object3D.toJSON\"\n            });\n            const i = {};\n            function r(e, n) {\n                return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)), n.uuid;\n            }\n            if (i.uuid = this.uuid, i.type = this.type, \"\" !== this.name && (i.name = this.name), !0 === this.castShadow && (i.castShadow = !0), !0 === this.receiveShadow && (i.receiveShadow = !0), !1 === this.visible && (i.visible = !1), !1 === this.frustumCulled && (i.frustumCulled = !1), 0 !== this.renderOrder && (i.renderOrder = this.renderOrder), \"{}\" !== JSON.stringify(this.userData) && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = \"InstancedMesh\", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), null !== this.instanceColor && (i.instanceColor = this.instanceColor.toJSON())), this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(t).uuid)), this.environment && this.environment.isTexture && (i.environment = this.environment.toJSON(t).uuid);\n            else if (this.isMesh || this.isLine || this.isPoints) {\n                i.geometry = r(t.geometries, this.geometry);\n                const e = this.geometry.parameters;\n                if (void 0 !== e && void 0 !== e.shapes) {\n                    const n = e.shapes;\n                    if (Array.isArray(n)) for(let e = 0, i = n.length; e < i; e++){\n                        const i = n[e];\n                        r(t.shapes, i);\n                    }\n                    else r(t.shapes, n);\n                }\n            }\n            if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), void 0 !== this.skeleton && (r(t.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), void 0 !== this.material) {\n                if (Array.isArray(this.material)) {\n                    const e = [];\n                    for(let n = 0, i = this.material.length; n < i; n++)e.push(r(t.materials, this.material[n]));\n                    i.material = e;\n                } else i.material = r(t.materials, this.material);\n            }\n            if (this.children.length > 0) {\n                i.children = [];\n                for(let e = 0; e < this.children.length; e++)i.children.push(this.children[e].toJSON(t).object);\n            }\n            if (this.animations.length > 0) {\n                i.animations = [];\n                for(let e = 0; e < this.animations.length; e++){\n                    const n = this.animations[e];\n                    i.animations.push(r(t.animations, n));\n                }\n            }\n            if (e) {\n                const e = s(t.geometries), i = s(t.materials), r = s(t.textures), a = s(t.images), o = s(t.shapes), l = s(t.skeletons), c = s(t.animations);\n                e.length > 0 && (n.geometries = e), i.length > 0 && (n.materials = i), r.length > 0 && (n.textures = r), a.length > 0 && (n.images = a), o.length > 0 && (n.shapes = o), l.length > 0 && (n.skeletons = l), c.length > 0 && (n.animations = c);\n            }\n            return n.object = i, n;\n            function s(t) {\n                const e = [];\n                for(const n in t){\n                    const i = t[n];\n                    delete i.metadata, e.push(i);\n                }\n                return e;\n            }\n        }\n        clone(t) {\n            return (new this.constructor).copy(this, t);\n        }\n        copy(t, e = !0) {\n            if (this.name = t.name, this.up.copy(t.up), this.position.copy(t.position), this.rotation.order = t.rotation.order, this.quaternion.copy(t.quaternion), this.scale.copy(t.scale), this.matrix.copy(t.matrix), this.matrixWorld.copy(t.matrixWorld), this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate, this.layers.mask = t.layers.mask, this.visible = t.visible, this.castShadow = t.castShadow, this.receiveShadow = t.receiveShadow, this.frustumCulled = t.frustumCulled, this.renderOrder = t.renderOrder, this.userData = JSON.parse(JSON.stringify(t.userData)), !0 === e) for(let e = 0; e < t.children.length; e++){\n                const n = t.children[e];\n                this.add(n.clone());\n            }\n            return this;\n        }\n    }\n    Fe.DefaultUp = new zt(0, 1, 0), Fe.DefaultMatrixAutoUpdate = !0, Fe.prototype.isObject3D = !0;\n    const Oe = new zt, Ue = new zt, He = new zt, Ge = new zt, ke = new zt, Ve = new zt, We = new zt, je = new zt, qe = new zt, Xe = new zt;\n    class Ye {\n        constructor(t = new zt, e = new zt, n = new zt){\n            this.a = t, this.b = e, this.c = n;\n        }\n        static getNormal(t, e, n, i) {\n            i.subVectors(n, e), Oe.subVectors(t, e), i.cross(Oe);\n            const r = i.lengthSq();\n            return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);\n        }\n        static getBarycoord(t, e, n, i, r) {\n            Oe.subVectors(i, e), Ue.subVectors(n, e), He.subVectors(t, e);\n            const s = Oe.dot(Oe), a = Oe.dot(Ue), o = Oe.dot(He), l = Ue.dot(Ue), c = Ue.dot(He), h = s * l - a * a;\n            if (0 === h) return r.set(-2, -1, -1);\n            const u = 1 / h, d = (l * o - a * c) * u, p = (s * c - a * o) * u;\n            return r.set(1 - d - p, p, d);\n        }\n        static containsPoint(t, e, n, i) {\n            return this.getBarycoord(t, e, n, i, Ge), Ge.x >= 0 && Ge.y >= 0 && Ge.x + Ge.y <= 1;\n        }\n        static getUV(t, e, n, i, r, s, a, o) {\n            return this.getBarycoord(t, e, n, i, Ge), o.set(0, 0), o.addScaledVector(r, Ge.x), o.addScaledVector(s, Ge.y), o.addScaledVector(a, Ge.z), o;\n        }\n        static isFrontFacing(t, e, n, i) {\n            return Oe.subVectors(n, e), Ue.subVectors(t, e), Oe.cross(Ue).dot(i) < 0;\n        }\n        set(t, e, n) {\n            return this.a.copy(t), this.b.copy(e), this.c.copy(n), this;\n        }\n        setFromPointsAndIndices(t, e, n, i) {\n            return this.a.copy(t[e]), this.b.copy(t[n]), this.c.copy(t[i]), this;\n        }\n        setFromAttributeAndIndices(t, e, n, i) {\n            return this.a.fromBufferAttribute(t, e), this.b.fromBufferAttribute(t, n), this.c.fromBufferAttribute(t, i), this;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this;\n        }\n        getArea() {\n            return Oe.subVectors(this.c, this.b), Ue.subVectors(this.a, this.b), .5 * Oe.cross(Ue).length();\n        }\n        getMidpoint(t) {\n            return t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n        }\n        getNormal(t) {\n            return Ye.getNormal(this.a, this.b, this.c, t);\n        }\n        getPlane(t) {\n            return t.setFromCoplanarPoints(this.a, this.b, this.c);\n        }\n        getBarycoord(t, e) {\n            return Ye.getBarycoord(t, this.a, this.b, this.c, e);\n        }\n        getUV(t, e, n, i, r) {\n            return Ye.getUV(t, this.a, this.b, this.c, e, n, i, r);\n        }\n        containsPoint(t) {\n            return Ye.containsPoint(t, this.a, this.b, this.c);\n        }\n        isFrontFacing(t) {\n            return Ye.isFrontFacing(this.a, this.b, this.c, t);\n        }\n        intersectsBox(t) {\n            return t.intersectsTriangle(this);\n        }\n        closestPointToPoint(t, e) {\n            const n = this.a, i = this.b, r = this.c;\n            let s, a;\n            ke.subVectors(i, n), Ve.subVectors(r, n), je.subVectors(t, n);\n            const o = ke.dot(je), l = Ve.dot(je);\n            if (o <= 0 && l <= 0) return e.copy(n);\n            qe.subVectors(t, i);\n            const c = ke.dot(qe), h = Ve.dot(qe);\n            if (c >= 0 && h <= c) return e.copy(i);\n            const u = o * h - c * l;\n            if (u <= 0 && o >= 0 && c <= 0) return s = o / (o - c), e.copy(n).addScaledVector(ke, s);\n            Xe.subVectors(t, r);\n            const d = ke.dot(Xe), p = Ve.dot(Xe);\n            if (p >= 0 && d <= p) return e.copy(r);\n            const m = d * l - o * p;\n            if (m <= 0 && l >= 0 && p <= 0) return a = l / (l - p), e.copy(n).addScaledVector(Ve, a);\n            const f = c * p - d * h;\n            if (f <= 0 && h - c >= 0 && d - p >= 0) return We.subVectors(r, i), a = (h - c) / (h - c + (d - p)), e.copy(i).addScaledVector(We, a);\n            const g = 1 / (f + m + u);\n            return s = m * g, a = u * g, e.copy(n).addScaledVector(ke, s).addScaledVector(Ve, a);\n        }\n        equals(t) {\n            return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c);\n        }\n    }\n    let Je = 0;\n    class Ze extends rt {\n        constructor(){\n            super(), Object.defineProperty(this, \"id\", {\n                value: Je++\n            }), this.uuid = ht(), this.name = \"\", this.type = \"Material\", this.fog = !0, this.blending = 1, this.side = 0, this.vertexColors = !1, this.opacity = 1, this.format = E, this.transparent = !1, this.blendSrc = 204, this.blendDst = 205, this.blendEquation = n, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = 3, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = 519, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = tt, this.stencilZFail = tt, this.stencilZPass = tt, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;\n        }\n        get alphaTest() {\n            return this._alphaTest;\n        }\n        set alphaTest(t) {\n            this._alphaTest > 0 != t > 0 && this.version++, this._alphaTest = t;\n        }\n        onBuild() {}\n        onBeforeRender() {}\n        onBeforeCompile() {}\n        customProgramCacheKey() {\n            return this.onBeforeCompile.toString();\n        }\n        setValues(t) {\n            if (void 0 !== t) for(const e in t){\n                const n = t[e];\n                if (void 0 === n) {\n                    console.warn(\"THREE.Material: '\" + e + \"' parameter is undefined.\");\n                    continue;\n                }\n                if (\"shading\" === e) {\n                    console.warn(\"THREE.\" + this.type + \": .shading has been removed. Use the boolean .flatShading instead.\"), this.flatShading = 1 === n;\n                    continue;\n                }\n                const i = this[e];\n                void 0 !== i ? i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[e] = n : console.warn(\"THREE.\" + this.type + \": '\" + e + \"' is not a property of this material.\");\n            }\n        }\n        toJSON(t) {\n            const e = void 0 === t || \"string\" == typeof t;\n            e && (t = {\n                textures: {},\n                images: {}\n            });\n            const n = {\n                metadata: {\n                    version: 4.5,\n                    type: \"Material\",\n                    generator: \"Material.toJSON\"\n                }\n            };\n            function i(t) {\n                const e = [];\n                for(const n in t){\n                    const i = t[n];\n                    delete i.metadata, e.push(i);\n                }\n                return e;\n            }\n            if (n.uuid = this.uuid, n.type = this.type, \"\" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), void 0 !== this.roughness && (n.roughness = this.roughness), void 0 !== this.metalness && (n.metalness = this.metalness), void 0 !== this.sheen && (n.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()), void 0 !== this.sheenRoughness && (n.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), void 0 !== this.specularIntensity && (n.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()), void 0 !== this.shininess && (n.shininess = this.shininess), void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat), void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(t).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(t).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(t).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(t).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(t).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(t).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(t).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(t).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(t).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(t).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(t).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(t).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(t).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(t).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(t).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(t).uuid), this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(t).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(t).uuid, void 0 !== this.combine && (n.combine = this.combine)), void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity), void 0 !== this.reflectivity && (n.reflectivity = this.reflectivity), void 0 !== this.refractionRatio && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(t).uuid), void 0 !== this.transmission && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(t).uuid), void 0 !== this.thickness && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(t).uuid), void 0 !== this.attenuationDistance && (n.attenuationDistance = this.attenuationDistance), void 0 !== this.attenuationColor && (n.attenuationColor = this.attenuationColor.getHex()), void 0 !== this.size && (n.size = this.size), null !== this.shadowSide && (n.shadowSide = this.shadowSide), void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), 1 !== this.blending && (n.blending = this.blending), 0 !== this.side && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), this.format !== E && (n.format = this.format), !0 === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), !0 === this.polygonOffset && (n.polygonOffset = !0), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), void 0 !== this.dashSize && (n.dashSize = this.dashSize), void 0 !== this.gapSize && (n.gapSize = this.gapSize), void 0 !== this.scale && (n.scale = this.scale), !0 === this.dithering && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), !0 === this.alphaToCoverage && (n.alphaToCoverage = this.alphaToCoverage), !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), \"round\" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), \"round\" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), !0 === this.flatShading && (n.flatShading = this.flatShading), !1 === this.visible && (n.visible = !1), !1 === this.toneMapped && (n.toneMapped = !1), \"{}\" !== JSON.stringify(this.userData) && (n.userData = this.userData), e) {\n                const e = i(t.textures), r = i(t.images);\n                e.length > 0 && (n.textures = e), r.length > 0 && (n.images = r);\n            }\n            return n;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            this.name = t.name, this.fog = t.fog, this.blending = t.blending, this.side = t.side, this.vertexColors = t.vertexColors, this.opacity = t.opacity, this.format = t.format, this.transparent = t.transparent, this.blendSrc = t.blendSrc, this.blendDst = t.blendDst, this.blendEquation = t.blendEquation, this.blendSrcAlpha = t.blendSrcAlpha, this.blendDstAlpha = t.blendDstAlpha, this.blendEquationAlpha = t.blendEquationAlpha, this.depthFunc = t.depthFunc, this.depthTest = t.depthTest, this.depthWrite = t.depthWrite, this.stencilWriteMask = t.stencilWriteMask, this.stencilFunc = t.stencilFunc, this.stencilRef = t.stencilRef, this.stencilFuncMask = t.stencilFuncMask, this.stencilFail = t.stencilFail, this.stencilZFail = t.stencilZFail, this.stencilZPass = t.stencilZPass, this.stencilWrite = t.stencilWrite;\n            const e = t.clippingPlanes;\n            let n = null;\n            if (null !== e) {\n                const t = e.length;\n                n = new Array(t);\n                for(let i = 0; i !== t; ++i)n[i] = e[i].clone();\n            }\n            return this.clippingPlanes = n, this.clipIntersection = t.clipIntersection, this.clipShadows = t.clipShadows, this.shadowSide = t.shadowSide, this.colorWrite = t.colorWrite, this.precision = t.precision, this.polygonOffset = t.polygonOffset, this.polygonOffsetFactor = t.polygonOffsetFactor, this.polygonOffsetUnits = t.polygonOffsetUnits, this.dithering = t.dithering, this.alphaTest = t.alphaTest, this.alphaToCoverage = t.alphaToCoverage, this.premultipliedAlpha = t.premultipliedAlpha, this.visible = t.visible, this.toneMapped = t.toneMapped, this.userData = JSON.parse(JSON.stringify(t.userData)), this;\n        }\n        dispose() {\n            this.dispatchEvent({\n                type: \"dispose\"\n            });\n        }\n        set needsUpdate(t) {\n            !0 === t && this.version++;\n        }\n    }\n    Ze.prototype.isMaterial = !0;\n    const Qe = {\n        aliceblue: 15792383,\n        antiquewhite: 16444375,\n        aqua: 65535,\n        aquamarine: 8388564,\n        azure: 15794175,\n        beige: 16119260,\n        bisque: 16770244,\n        black: 0,\n        blanchedalmond: 16772045,\n        blue: 255,\n        blueviolet: 9055202,\n        brown: 10824234,\n        burlywood: 14596231,\n        cadetblue: 6266528,\n        chartreuse: 8388352,\n        chocolate: 13789470,\n        coral: 16744272,\n        cornflowerblue: 6591981,\n        cornsilk: 16775388,\n        crimson: 14423100,\n        cyan: 65535,\n        darkblue: 139,\n        darkcyan: 35723,\n        darkgoldenrod: 12092939,\n        darkgray: 11119017,\n        darkgreen: 25600,\n        darkgrey: 11119017,\n        darkkhaki: 12433259,\n        darkmagenta: 9109643,\n        darkolivegreen: 5597999,\n        darkorange: 16747520,\n        darkorchid: 10040012,\n        darkred: 9109504,\n        darksalmon: 15308410,\n        darkseagreen: 9419919,\n        darkslateblue: 4734347,\n        darkslategray: 3100495,\n        darkslategrey: 3100495,\n        darkturquoise: 52945,\n        darkviolet: 9699539,\n        deeppink: 16716947,\n        deepskyblue: 49151,\n        dimgray: 6908265,\n        dimgrey: 6908265,\n        dodgerblue: 2003199,\n        firebrick: 11674146,\n        floralwhite: 16775920,\n        forestgreen: 2263842,\n        fuchsia: 16711935,\n        gainsboro: 14474460,\n        ghostwhite: 16316671,\n        gold: 16766720,\n        goldenrod: 14329120,\n        gray: 8421504,\n        green: 32768,\n        greenyellow: 11403055,\n        grey: 8421504,\n        honeydew: 15794160,\n        hotpink: 16738740,\n        indianred: 13458524,\n        indigo: 4915330,\n        ivory: 16777200,\n        khaki: 15787660,\n        lavender: 15132410,\n        lavenderblush: 16773365,\n        lawngreen: 8190976,\n        lemonchiffon: 16775885,\n        lightblue: 11393254,\n        lightcoral: 15761536,\n        lightcyan: 14745599,\n        lightgoldenrodyellow: 16448210,\n        lightgray: 13882323,\n        lightgreen: 9498256,\n        lightgrey: 13882323,\n        lightpink: 16758465,\n        lightsalmon: 16752762,\n        lightseagreen: 2142890,\n        lightskyblue: 8900346,\n        lightslategray: 7833753,\n        lightslategrey: 7833753,\n        lightsteelblue: 11584734,\n        lightyellow: 16777184,\n        lime: 65280,\n        limegreen: 3329330,\n        linen: 16445670,\n        magenta: 16711935,\n        maroon: 8388608,\n        mediumaquamarine: 6737322,\n        mediumblue: 205,\n        mediumorchid: 12211667,\n        mediumpurple: 9662683,\n        mediumseagreen: 3978097,\n        mediumslateblue: 8087790,\n        mediumspringgreen: 64154,\n        mediumturquoise: 4772300,\n        mediumvioletred: 13047173,\n        midnightblue: 1644912,\n        mintcream: 16121850,\n        mistyrose: 16770273,\n        moccasin: 16770229,\n        navajowhite: 16768685,\n        navy: 128,\n        oldlace: 16643558,\n        olive: 8421376,\n        olivedrab: 7048739,\n        orange: 16753920,\n        orangered: 16729344,\n        orchid: 14315734,\n        palegoldenrod: 15657130,\n        palegreen: 10025880,\n        paleturquoise: 11529966,\n        palevioletred: 14381203,\n        papayawhip: 16773077,\n        peachpuff: 16767673,\n        peru: 13468991,\n        pink: 16761035,\n        plum: 14524637,\n        powderblue: 11591910,\n        purple: 8388736,\n        rebeccapurple: 6697881,\n        red: 16711680,\n        rosybrown: 12357519,\n        royalblue: 4286945,\n        saddlebrown: 9127187,\n        salmon: 16416882,\n        sandybrown: 16032864,\n        seagreen: 3050327,\n        seashell: 16774638,\n        sienna: 10506797,\n        silver: 12632256,\n        skyblue: 8900331,\n        slateblue: 6970061,\n        slategray: 7372944,\n        slategrey: 7372944,\n        snow: 16775930,\n        springgreen: 65407,\n        steelblue: 4620980,\n        tan: 13808780,\n        teal: 32896,\n        thistle: 14204888,\n        tomato: 16737095,\n        turquoise: 4251856,\n        violet: 15631086,\n        wheat: 16113331,\n        white: 16777215,\n        whitesmoke: 16119285,\n        yellow: 16776960,\n        yellowgreen: 10145074\n    }, Ke = {\n        h: 0,\n        s: 0,\n        l: 0\n    }, $e = {\n        h: 0,\n        s: 0,\n        l: 0\n    };\n    function tn(t, e, n) {\n        return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t;\n    }\n    function en(t) {\n        return t < .04045 ? .0773993808 * t : Math.pow(.9478672986 * t + .0521327014, 2.4);\n    }\n    function nn(t) {\n        return t < .0031308 ? 12.92 * t : 1.055 * Math.pow(t, .41666) - .055;\n    }\n    class rn {\n        constructor(t, e, n){\n            return void 0 === e && void 0 === n ? this.set(t) : this.setRGB(t, e, n);\n        }\n        set(t) {\n            return t && t.isColor ? this.copy(t) : \"number\" == typeof t ? this.setHex(t) : \"string\" == typeof t && this.setStyle(t), this;\n        }\n        setScalar(t) {\n            return this.r = t, this.g = t, this.b = t, this;\n        }\n        setHex(t) {\n            return t = Math.floor(t), this.r = (t >> 16 & 255) / 255, this.g = (t >> 8 & 255) / 255, this.b = (255 & t) / 255, this;\n        }\n        setRGB(t, e, n) {\n            return this.r = t, this.g = e, this.b = n, this;\n        }\n        setHSL(t, e, n) {\n            if (t = dt(t, 1), e = ut(e, 0, 1), n = ut(n, 0, 1), 0 === e) this.r = this.g = this.b = n;\n            else {\n                const i = n <= .5 ? n * (1 + e) : n + e - n * e, r = 2 * n - i;\n                this.r = tn(r, i, t + 1 / 3), this.g = tn(r, i, t), this.b = tn(r, i, t - 1 / 3);\n            }\n            return this;\n        }\n        setStyle(t) {\n            function e(e) {\n                void 0 !== e && parseFloat(e) < 1 && console.warn(\"THREE.Color: Alpha component of \" + t + \" will be ignored.\");\n            }\n            let n;\n            if (n = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(t)) {\n                let t;\n                const i = n[1], r = n[2];\n                switch(i){\n                    case \"rgb\":\n                    case \"rgba\":\n                        if (t = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r)) return this.r = Math.min(255, parseInt(t[1], 10)) / 255, this.g = Math.min(255, parseInt(t[2], 10)) / 255, this.b = Math.min(255, parseInt(t[3], 10)) / 255, e(t[4]), this;\n                        if (t = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r)) return this.r = Math.min(100, parseInt(t[1], 10)) / 100, this.g = Math.min(100, parseInt(t[2], 10)) / 100, this.b = Math.min(100, parseInt(t[3], 10)) / 100, e(t[4]), this;\n                        break;\n                    case \"hsl\":\n                    case \"hsla\":\n                        if (t = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r)) {\n                            const n = parseFloat(t[1]) / 360, i = parseInt(t[2], 10) / 100, r = parseInt(t[3], 10) / 100;\n                            return e(t[4]), this.setHSL(n, i, r);\n                        }\n                }\n            } else if (n = /^\\#([A-Fa-f\\d]+)$/.exec(t)) {\n                const t = n[1], e = t.length;\n                if (3 === e) return this.r = parseInt(t.charAt(0) + t.charAt(0), 16) / 255, this.g = parseInt(t.charAt(1) + t.charAt(1), 16) / 255, this.b = parseInt(t.charAt(2) + t.charAt(2), 16) / 255, this;\n                if (6 === e) return this.r = parseInt(t.charAt(0) + t.charAt(1), 16) / 255, this.g = parseInt(t.charAt(2) + t.charAt(3), 16) / 255, this.b = parseInt(t.charAt(4) + t.charAt(5), 16) / 255, this;\n            }\n            return t && t.length > 0 ? this.setColorName(t) : this;\n        }\n        setColorName(t) {\n            const e = Qe[t.toLowerCase()];\n            return void 0 !== e ? this.setHex(e) : console.warn(\"THREE.Color: Unknown color \" + t), this;\n        }\n        clone() {\n            return new this.constructor(this.r, this.g, this.b);\n        }\n        copy(t) {\n            return this.r = t.r, this.g = t.g, this.b = t.b, this;\n        }\n        copyGammaToLinear(t, e = 2) {\n            return this.r = Math.pow(t.r, e), this.g = Math.pow(t.g, e), this.b = Math.pow(t.b, e), this;\n        }\n        copyLinearToGamma(t, e = 2) {\n            const n = e > 0 ? 1 / e : 1;\n            return this.r = Math.pow(t.r, n), this.g = Math.pow(t.g, n), this.b = Math.pow(t.b, n), this;\n        }\n        convertGammaToLinear(t) {\n            return this.copyGammaToLinear(this, t), this;\n        }\n        convertLinearToGamma(t) {\n            return this.copyLinearToGamma(this, t), this;\n        }\n        copySRGBToLinear(t) {\n            return this.r = en(t.r), this.g = en(t.g), this.b = en(t.b), this;\n        }\n        copyLinearToSRGB(t) {\n            return this.r = nn(t.r), this.g = nn(t.g), this.b = nn(t.b), this;\n        }\n        convertSRGBToLinear() {\n            return this.copySRGBToLinear(this), this;\n        }\n        convertLinearToSRGB() {\n            return this.copyLinearToSRGB(this), this;\n        }\n        getHex() {\n            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;\n        }\n        getHexString() {\n            return (\"000000\" + this.getHex().toString(16)).slice(-6);\n        }\n        getHSL(t) {\n            const e = this.r, n = this.g, i = this.b, r = Math.max(e, n, i), s = Math.min(e, n, i);\n            let a, o;\n            const l = (s + r) / 2;\n            if (s === r) a = 0, o = 0;\n            else {\n                const t = r - s;\n                switch(o = l <= .5 ? t / (r + s) : t / (2 - r - s), r){\n                    case e:\n                        a = (n - i) / t + (n < i ? 6 : 0);\n                        break;\n                    case n:\n                        a = (i - e) / t + 2;\n                        break;\n                    case i:\n                        a = (e - n) / t + 4;\n                }\n                a /= 6;\n            }\n            return t.h = a, t.s = o, t.l = l, t;\n        }\n        getStyle() {\n            return \"rgb(\" + (255 * this.r | 0) + \",\" + (255 * this.g | 0) + \",\" + (255 * this.b | 0) + \")\";\n        }\n        offsetHSL(t, e, n) {\n            return this.getHSL(Ke), Ke.h += t, Ke.s += e, Ke.l += n, this.setHSL(Ke.h, Ke.s, Ke.l), this;\n        }\n        add(t) {\n            return this.r += t.r, this.g += t.g, this.b += t.b, this;\n        }\n        addColors(t, e) {\n            return this.r = t.r + e.r, this.g = t.g + e.g, this.b = t.b + e.b, this;\n        }\n        addScalar(t) {\n            return this.r += t, this.g += t, this.b += t, this;\n        }\n        sub(t) {\n            return this.r = Math.max(0, this.r - t.r), this.g = Math.max(0, this.g - t.g), this.b = Math.max(0, this.b - t.b), this;\n        }\n        multiply(t) {\n            return this.r *= t.r, this.g *= t.g, this.b *= t.b, this;\n        }\n        multiplyScalar(t) {\n            return this.r *= t, this.g *= t, this.b *= t, this;\n        }\n        lerp(t, e) {\n            return this.r += (t.r - this.r) * e, this.g += (t.g - this.g) * e, this.b += (t.b - this.b) * e, this;\n        }\n        lerpColors(t, e, n) {\n            return this.r = t.r + (e.r - t.r) * n, this.g = t.g + (e.g - t.g) * n, this.b = t.b + (e.b - t.b) * n, this;\n        }\n        lerpHSL(t, e) {\n            this.getHSL(Ke), t.getHSL($e);\n            const n = pt(Ke.h, $e.h, e), i = pt(Ke.s, $e.s, e), r = pt(Ke.l, $e.l, e);\n            return this.setHSL(n, i, r), this;\n        }\n        equals(t) {\n            return t.r === this.r && t.g === this.g && t.b === this.b;\n        }\n        fromArray(t, e = 0) {\n            return this.r = t[e], this.g = t[e + 1], this.b = t[e + 2], this;\n        }\n        toArray(t = [], e = 0) {\n            return t[e] = this.r, t[e + 1] = this.g, t[e + 2] = this.b, t;\n        }\n        fromBufferAttribute(t, e) {\n            return this.r = t.getX(e), this.g = t.getY(e), this.b = t.getZ(e), !0 === t.normalized && (this.r /= 255, this.g /= 255, this.b /= 255), this;\n        }\n        toJSON() {\n            return this.getHex();\n        }\n    }\n    rn.NAMES = Qe, rn.prototype.isColor = !0, rn.prototype.r = 1, rn.prototype.g = 1, rn.prototype.b = 1;\n    class sn extends Ze {\n        constructor(t){\n            super(), this.type = \"MeshBasicMaterial\", this.color = new rn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this;\n        }\n    }\n    sn.prototype.isMeshBasicMaterial = !0;\n    const an = new zt, on = new yt;\n    class ln {\n        constructor(t, e, n){\n            if (Array.isArray(t)) throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");\n            this.name = \"\", this.array = t, this.itemSize = e, this.count = void 0 !== t ? t.length / e : 0, this.normalized = !0 === n, this.usage = et, this.updateRange = {\n                offset: 0,\n                count: -1\n            }, this.version = 0;\n        }\n        onUploadCallback() {}\n        set needsUpdate(t) {\n            !0 === t && this.version++;\n        }\n        setUsage(t) {\n            return this.usage = t, this;\n        }\n        copy(t) {\n            return this.name = t.name, this.array = new t.array.constructor(t.array), this.itemSize = t.itemSize, this.count = t.count, this.normalized = t.normalized, this.usage = t.usage, this;\n        }\n        copyAt(t, e, n) {\n            t *= this.itemSize, n *= e.itemSize;\n            for(let i = 0, r = this.itemSize; i < r; i++)this.array[t + i] = e.array[n + i];\n            return this;\n        }\n        copyArray(t) {\n            return this.array.set(t), this;\n        }\n        copyColorsArray(t) {\n            const e = this.array;\n            let n = 0;\n            for(let i = 0, r = t.length; i < r; i++){\n                let r = t[i];\n                void 0 === r && (console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\", i), r = new rn), e[n++] = r.r, e[n++] = r.g, e[n++] = r.b;\n            }\n            return this;\n        }\n        copyVector2sArray(t) {\n            const e = this.array;\n            let n = 0;\n            for(let i = 0, r = t.length; i < r; i++){\n                let r = t[i];\n                void 0 === r && (console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\", i), r = new yt), e[n++] = r.x, e[n++] = r.y;\n            }\n            return this;\n        }\n        copyVector3sArray(t) {\n            const e = this.array;\n            let n = 0;\n            for(let i = 0, r = t.length; i < r; i++){\n                let r = t[i];\n                void 0 === r && (console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\", i), r = new zt), e[n++] = r.x, e[n++] = r.y, e[n++] = r.z;\n            }\n            return this;\n        }\n        copyVector4sArray(t) {\n            const e = this.array;\n            let n = 0;\n            for(let i = 0, r = t.length; i < r; i++){\n                let r = t[i];\n                void 0 === r && (console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\", i), r = new Ct), e[n++] = r.x, e[n++] = r.y, e[n++] = r.z, e[n++] = r.w;\n            }\n            return this;\n        }\n        applyMatrix3(t) {\n            if (2 === this.itemSize) for(let e = 0, n = this.count; e < n; e++)on.fromBufferAttribute(this, e), on.applyMatrix3(t), this.setXY(e, on.x, on.y);\n            else if (3 === this.itemSize) for(let e = 0, n = this.count; e < n; e++)an.fromBufferAttribute(this, e), an.applyMatrix3(t), this.setXYZ(e, an.x, an.y, an.z);\n            return this;\n        }\n        applyMatrix4(t) {\n            for(let e = 0, n = this.count; e < n; e++)an.x = this.getX(e), an.y = this.getY(e), an.z = this.getZ(e), an.applyMatrix4(t), this.setXYZ(e, an.x, an.y, an.z);\n            return this;\n        }\n        applyNormalMatrix(t) {\n            for(let e = 0, n = this.count; e < n; e++)an.x = this.getX(e), an.y = this.getY(e), an.z = this.getZ(e), an.applyNormalMatrix(t), this.setXYZ(e, an.x, an.y, an.z);\n            return this;\n        }\n        transformDirection(t) {\n            for(let e = 0, n = this.count; e < n; e++)an.x = this.getX(e), an.y = this.getY(e), an.z = this.getZ(e), an.transformDirection(t), this.setXYZ(e, an.x, an.y, an.z);\n            return this;\n        }\n        set(t, e = 0) {\n            return this.array.set(t, e), this;\n        }\n        getX(t) {\n            return this.array[t * this.itemSize];\n        }\n        setX(t, e) {\n            return this.array[t * this.itemSize] = e, this;\n        }\n        getY(t) {\n            return this.array[t * this.itemSize + 1];\n        }\n        setY(t, e) {\n            return this.array[t * this.itemSize + 1] = e, this;\n        }\n        getZ(t) {\n            return this.array[t * this.itemSize + 2];\n        }\n        setZ(t, e) {\n            return this.array[t * this.itemSize + 2] = e, this;\n        }\n        getW(t) {\n            return this.array[t * this.itemSize + 3];\n        }\n        setW(t, e) {\n            return this.array[t * this.itemSize + 3] = e, this;\n        }\n        setXY(t, e, n) {\n            return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = n, this;\n        }\n        setXYZ(t, e, n, i) {\n            return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = n, this.array[t + 2] = i, this;\n        }\n        setXYZW(t, e, n, i, r) {\n            return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = n, this.array[t + 2] = i, this.array[t + 3] = r, this;\n        }\n        onUpload(t) {\n            return this.onUploadCallback = t, this;\n        }\n        clone() {\n            return new this.constructor(this.array, this.itemSize).copy(this);\n        }\n        toJSON() {\n            const t = {\n                itemSize: this.itemSize,\n                type: this.array.constructor.name,\n                array: Array.prototype.slice.call(this.array),\n                normalized: this.normalized\n            };\n            return \"\" !== this.name && (t.name = this.name), this.usage !== et && (t.usage = this.usage), 0 === this.updateRange.offset && -1 === this.updateRange.count || (t.updateRange = this.updateRange), t;\n        }\n    }\n    ln.prototype.isBufferAttribute = !0;\n    class cn extends ln {\n        constructor(t, e, n){\n            super(new Int8Array(t), e, n);\n        }\n    }\n    class hn extends ln {\n        constructor(t, e, n){\n            super(new Uint8Array(t), e, n);\n        }\n    }\n    class un extends ln {\n        constructor(t, e, n){\n            super(new Uint8ClampedArray(t), e, n);\n        }\n    }\n    class dn extends ln {\n        constructor(t, e, n){\n            super(new Int16Array(t), e, n);\n        }\n    }\n    class pn extends ln {\n        constructor(t, e, n){\n            super(new Uint16Array(t), e, n);\n        }\n    }\n    class mn extends ln {\n        constructor(t, e, n){\n            super(new Int32Array(t), e, n);\n        }\n    }\n    class fn extends ln {\n        constructor(t, e, n){\n            super(new Uint32Array(t), e, n);\n        }\n    }\n    class gn extends ln {\n        constructor(t, e, n){\n            super(new Uint16Array(t), e, n);\n        }\n    }\n    gn.prototype.isFloat16BufferAttribute = !0;\n    class vn extends ln {\n        constructor(t, e, n){\n            super(new Float32Array(t), e, n);\n        }\n    }\n    class yn extends ln {\n        constructor(t, e, n){\n            super(new Float64Array(t), e, n);\n        }\n    }\n    let xn = 0;\n    const _n = new de, Mn = new Fe, bn = new zt, wn = new Ot, Sn = new Ot, Tn = new zt;\n    class En extends rt {\n        constructor(){\n            super(), Object.defineProperty(this, \"id\", {\n                value: xn++\n            }), this.uuid = ht(), this.name = \"\", this.type = \"BufferGeometry\", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {\n                start: 0,\n                count: 1 / 0\n            }, this.userData = {};\n        }\n        getIndex() {\n            return this.index;\n        }\n        setIndex(t) {\n            return Array.isArray(t) ? this.index = new (_t(t) > 65535 ? fn : pn)(t, 1) : this.index = t, this;\n        }\n        getAttribute(t) {\n            return this.attributes[t];\n        }\n        setAttribute(t, e) {\n            return this.attributes[t] = e, this;\n        }\n        deleteAttribute(t) {\n            return delete this.attributes[t], this;\n        }\n        hasAttribute(t) {\n            return void 0 !== this.attributes[t];\n        }\n        addGroup(t, e, n = 0) {\n            this.groups.push({\n                start: t,\n                count: e,\n                materialIndex: n\n            });\n        }\n        clearGroups() {\n            this.groups = [];\n        }\n        setDrawRange(t, e) {\n            this.drawRange.start = t, this.drawRange.count = e;\n        }\n        applyMatrix4(t) {\n            const e = this.attributes.position;\n            void 0 !== e && (e.applyMatrix4(t), e.needsUpdate = !0);\n            const n = this.attributes.normal;\n            if (void 0 !== n) {\n                const e = (new xt).getNormalMatrix(t);\n                n.applyNormalMatrix(e), n.needsUpdate = !0;\n            }\n            const i = this.attributes.tangent;\n            return void 0 !== i && (i.transformDirection(t), i.needsUpdate = !0), null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this;\n        }\n        applyQuaternion(t) {\n            return _n.makeRotationFromQuaternion(t), this.applyMatrix4(_n), this;\n        }\n        rotateX(t) {\n            return _n.makeRotationX(t), this.applyMatrix4(_n), this;\n        }\n        rotateY(t) {\n            return _n.makeRotationY(t), this.applyMatrix4(_n), this;\n        }\n        rotateZ(t) {\n            return _n.makeRotationZ(t), this.applyMatrix4(_n), this;\n        }\n        translate(t, e, n) {\n            return _n.makeTranslation(t, e, n), this.applyMatrix4(_n), this;\n        }\n        scale(t, e, n) {\n            return _n.makeScale(t, e, n), this.applyMatrix4(_n), this;\n        }\n        lookAt(t) {\n            return Mn.lookAt(t), Mn.updateMatrix(), this.applyMatrix4(Mn.matrix), this;\n        }\n        center() {\n            return this.computeBoundingBox(), this.boundingBox.getCenter(bn).negate(), this.translate(bn.x, bn.y, bn.z), this;\n        }\n        setFromPoints(t) {\n            const e = [];\n            for(let n = 0, i = t.length; n < i; n++){\n                const i = t[n];\n                e.push(i.x, i.y, i.z || 0);\n            }\n            return this.setAttribute(\"position\", new vn(e, 3)), this;\n        }\n        computeBoundingBox() {\n            null === this.boundingBox && (this.boundingBox = new Ot);\n            const t = this.attributes.position, e = this.morphAttributes.position;\n            if (t && t.isGLBufferAttribute) return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this), void this.boundingBox.set(new zt(-1 / 0, -1 / 0, -1 / 0), new zt(1 / 0, 1 / 0, 1 / 0));\n            if (void 0 !== t) {\n                if (this.boundingBox.setFromBufferAttribute(t), e) for(let t = 0, n = e.length; t < n; t++){\n                    const n = e[t];\n                    wn.setFromBufferAttribute(n), this.morphTargetsRelative ? (Tn.addVectors(this.boundingBox.min, wn.min), this.boundingBox.expandByPoint(Tn), Tn.addVectors(this.boundingBox.max, wn.max), this.boundingBox.expandByPoint(Tn)) : (this.boundingBox.expandByPoint(wn.min), this.boundingBox.expandByPoint(wn.max));\n                }\n            } else this.boundingBox.makeEmpty();\n            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n        }\n        computeBoundingSphere() {\n            null === this.boundingSphere && (this.boundingSphere = new ie);\n            const t = this.attributes.position, e = this.morphAttributes.position;\n            if (t && t.isGLBufferAttribute) return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this), void this.boundingSphere.set(new zt, 1 / 0);\n            if (t) {\n                const n = this.boundingSphere.center;\n                if (wn.setFromBufferAttribute(t), e) for(let t = 0, n = e.length; t < n; t++){\n                    const n = e[t];\n                    Sn.setFromBufferAttribute(n), this.morphTargetsRelative ? (Tn.addVectors(wn.min, Sn.min), wn.expandByPoint(Tn), Tn.addVectors(wn.max, Sn.max), wn.expandByPoint(Tn)) : (wn.expandByPoint(Sn.min), wn.expandByPoint(Sn.max));\n                }\n                wn.getCenter(n);\n                let i = 0;\n                for(let e = 0, r = t.count; e < r; e++)Tn.fromBufferAttribute(t, e), i = Math.max(i, n.distanceToSquared(Tn));\n                if (e) for(let r = 0, s = e.length; r < s; r++){\n                    const s = e[r], a = this.morphTargetsRelative;\n                    for(let e = 0, r = s.count; e < r; e++)Tn.fromBufferAttribute(s, e), a && (bn.fromBufferAttribute(t, e), Tn.add(bn)), i = Math.max(i, n.distanceToSquared(Tn));\n                }\n                this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n            }\n        }\n        computeTangents() {\n            const t = this.index, e = this.attributes;\n            if (null === t || void 0 === e.position || void 0 === e.normal || void 0 === e.uv) return void console.error(\"THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)\");\n            const n = t.array, i = e.position.array, r = e.normal.array, s = e.uv.array, a = i.length / 3;\n            void 0 === e.tangent && this.setAttribute(\"tangent\", new ln(new Float32Array(4 * a), 4));\n            const o = e.tangent.array, l = [], c = [];\n            for(let t = 0; t < a; t++)l[t] = new zt, c[t] = new zt;\n            const h = new zt, u = new zt, d = new zt, p = new yt, m = new yt, f = new yt, g = new zt, v = new zt;\n            function y(t, e, n) {\n                h.fromArray(i, 3 * t), u.fromArray(i, 3 * e), d.fromArray(i, 3 * n), p.fromArray(s, 2 * t), m.fromArray(s, 2 * e), f.fromArray(s, 2 * n), u.sub(h), d.sub(h), m.sub(p), f.sub(p);\n                const r = 1 / (m.x * f.y - f.x * m.y);\n                isFinite(r) && (g.copy(u).multiplyScalar(f.y).addScaledVector(d, -m.y).multiplyScalar(r), v.copy(d).multiplyScalar(m.x).addScaledVector(u, -f.x).multiplyScalar(r), l[t].add(g), l[e].add(g), l[n].add(g), c[t].add(v), c[e].add(v), c[n].add(v));\n            }\n            let x = this.groups;\n            0 === x.length && (x = [\n                {\n                    start: 0,\n                    count: n.length\n                }\n            ]);\n            for(let t = 0, e = x.length; t < e; ++t){\n                const e = x[t], i = e.start;\n                for(let t = i, r = i + e.count; t < r; t += 3)y(n[t + 0], n[t + 1], n[t + 2]);\n            }\n            const _ = new zt, M = new zt, b = new zt, w = new zt;\n            function S(t) {\n                b.fromArray(r, 3 * t), w.copy(b);\n                const e = l[t];\n                _.copy(e), _.sub(b.multiplyScalar(b.dot(e))).normalize(), M.crossVectors(w, e);\n                const n = M.dot(c[t]) < 0 ? -1 : 1;\n                o[4 * t] = _.x, o[4 * t + 1] = _.y, o[4 * t + 2] = _.z, o[4 * t + 3] = n;\n            }\n            for(let t = 0, e = x.length; t < e; ++t){\n                const e = x[t], i = e.start;\n                for(let t = i, r = i + e.count; t < r; t += 3)S(n[t + 0]), S(n[t + 1]), S(n[t + 2]);\n            }\n        }\n        computeVertexNormals() {\n            const t = this.index, e = this.getAttribute(\"position\");\n            if (void 0 !== e) {\n                let n = this.getAttribute(\"normal\");\n                if (void 0 === n) n = new ln(new Float32Array(3 * e.count), 3), this.setAttribute(\"normal\", n);\n                else for(let t = 0, e = n.count; t < e; t++)n.setXYZ(t, 0, 0, 0);\n                const i = new zt, r = new zt, s = new zt, a = new zt, o = new zt, l = new zt, c = new zt, h = new zt;\n                if (t) for(let u = 0, d = t.count; u < d; u += 3){\n                    const d = t.getX(u + 0), p = t.getX(u + 1), m = t.getX(u + 2);\n                    i.fromBufferAttribute(e, d), r.fromBufferAttribute(e, p), s.fromBufferAttribute(e, m), c.subVectors(s, r), h.subVectors(i, r), c.cross(h), a.fromBufferAttribute(n, d), o.fromBufferAttribute(n, p), l.fromBufferAttribute(n, m), a.add(c), o.add(c), l.add(c), n.setXYZ(d, a.x, a.y, a.z), n.setXYZ(p, o.x, o.y, o.z), n.setXYZ(m, l.x, l.y, l.z);\n                }\n                else for(let t = 0, a = e.count; t < a; t += 3)i.fromBufferAttribute(e, t + 0), r.fromBufferAttribute(e, t + 1), s.fromBufferAttribute(e, t + 2), c.subVectors(s, r), h.subVectors(i, r), c.cross(h), n.setXYZ(t + 0, c.x, c.y, c.z), n.setXYZ(t + 1, c.x, c.y, c.z), n.setXYZ(t + 2, c.x, c.y, c.z);\n                this.normalizeNormals(), n.needsUpdate = !0;\n            }\n        }\n        merge(t, e) {\n            if (!t || !t.isBufferGeometry) return void console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\", t);\n            void 0 === e && (e = 0, console.warn(\"THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.\"));\n            const n = this.attributes;\n            for(const i in n){\n                if (void 0 === t.attributes[i]) continue;\n                const r = n[i].array, s = t.attributes[i], a = s.array, o = s.itemSize * e, l = Math.min(a.length, r.length - o);\n                for(let t = 0, e = o; t < l; t++, e++)r[e] = a[t];\n            }\n            return this;\n        }\n        normalizeNormals() {\n            const t = this.attributes.normal;\n            for(let e = 0, n = t.count; e < n; e++)Tn.fromBufferAttribute(t, e), Tn.normalize(), t.setXYZ(e, Tn.x, Tn.y, Tn.z);\n        }\n        toNonIndexed() {\n            function t(t, e) {\n                const n = t.array, i = t.itemSize, r = t.normalized, s = new n.constructor(e.length * i);\n                let a = 0, o = 0;\n                for(let r = 0, l = e.length; r < l; r++){\n                    a = t.isInterleavedBufferAttribute ? e[r] * t.data.stride + t.offset : e[r] * i;\n                    for(let t = 0; t < i; t++)s[o++] = n[a++];\n                }\n                return new ln(s, i, r);\n            }\n            if (null === this.index) return console.warn(\"THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.\"), this;\n            const e = new En, n = this.index.array, i = this.attributes;\n            for(const r in i){\n                const s = t(i[r], n);\n                e.setAttribute(r, s);\n            }\n            const r = this.morphAttributes;\n            for(const i in r){\n                const s = [], a = r[i];\n                for(let e = 0, i = a.length; e < i; e++){\n                    const i = t(a[e], n);\n                    s.push(i);\n                }\n                e.morphAttributes[i] = s;\n            }\n            e.morphTargetsRelative = this.morphTargetsRelative;\n            const s = this.groups;\n            for(let t = 0, n = s.length; t < n; t++){\n                const n = s[t];\n                e.addGroup(n.start, n.count, n.materialIndex);\n            }\n            return e;\n        }\n        toJSON() {\n            const t = {\n                metadata: {\n                    version: 4.5,\n                    type: \"BufferGeometry\",\n                    generator: \"BufferGeometry.toJSON\"\n                }\n            };\n            if (t.uuid = this.uuid, t.type = this.type, \"\" !== this.name && (t.name = this.name), Object.keys(this.userData).length > 0 && (t.userData = this.userData), void 0 !== this.parameters) {\n                const e = this.parameters;\n                for(const n in e)void 0 !== e[n] && (t[n] = e[n]);\n                return t;\n            }\n            t.data = {\n                attributes: {}\n            };\n            const e = this.index;\n            null !== e && (t.data.index = {\n                type: e.array.constructor.name,\n                array: Array.prototype.slice.call(e.array)\n            });\n            const n = this.attributes;\n            for(const e in n){\n                const i = n[e];\n                t.data.attributes[e] = i.toJSON(t.data);\n            }\n            const i = {};\n            let r = !1;\n            for(const e in this.morphAttributes){\n                const n = this.morphAttributes[e], s = [];\n                for(let e = 0, i = n.length; e < i; e++){\n                    const i = n[e];\n                    s.push(i.toJSON(t.data));\n                }\n                s.length > 0 && (i[e] = s, r = !0);\n            }\n            r && (t.data.morphAttributes = i, t.data.morphTargetsRelative = this.morphTargetsRelative);\n            const s = this.groups;\n            s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));\n            const a = this.boundingSphere;\n            return null !== a && (t.data.boundingSphere = {\n                center: a.center.toArray(),\n                radius: a.radius\n            }), t;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;\n            const e = {};\n            this.name = t.name;\n            const n = t.index;\n            null !== n && this.setIndex(n.clone(e));\n            const i = t.attributes;\n            for(const t in i){\n                const n = i[t];\n                this.setAttribute(t, n.clone(e));\n            }\n            const r = t.morphAttributes;\n            for(const t in r){\n                const n = [], i = r[t];\n                for(let t = 0, r = i.length; t < r; t++)n.push(i[t].clone(e));\n                this.morphAttributes[t] = n;\n            }\n            this.morphTargetsRelative = t.morphTargetsRelative;\n            const s = t.groups;\n            for(let t = 0, e = s.length; t < e; t++){\n                const e = s[t];\n                this.addGroup(e.start, e.count, e.materialIndex);\n            }\n            const a = t.boundingBox;\n            null !== a && (this.boundingBox = a.clone());\n            const o = t.boundingSphere;\n            return null !== o && (this.boundingSphere = o.clone()), this.drawRange.start = t.drawRange.start, this.drawRange.count = t.drawRange.count, this.userData = t.userData, void 0 !== t.parameters && (this.parameters = Object.assign({}, t.parameters)), this;\n        }\n        dispose() {\n            this.dispatchEvent({\n                type: \"dispose\"\n            });\n        }\n    }\n    En.prototype.isBufferGeometry = !0;\n    const An = new de, Ln = new ue, Rn = new ie, Cn = new zt, Pn = new zt, In = new zt, Dn = new zt, Nn = new zt, zn = new zt, Bn = new zt, Fn = new zt, On = new zt, Un = new yt, Hn = new yt, Gn = new yt, kn = new zt, Vn = new zt;\n    class Wn extends Fe {\n        constructor(t = new En, e = new sn){\n            super(), this.type = \"Mesh\", this.geometry = t, this.material = e, this.updateMorphTargets();\n        }\n        copy(t) {\n            return super.copy(t), void 0 !== t.morphTargetInfluences && (this.morphTargetInfluences = t.morphTargetInfluences.slice()), void 0 !== t.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)), this.material = t.material, this.geometry = t.geometry, this;\n        }\n        updateMorphTargets() {\n            const t = this.geometry;\n            if (t.isBufferGeometry) {\n                const e = t.morphAttributes, n = Object.keys(e);\n                if (n.length > 0) {\n                    const t = e[n[0]];\n                    if (void 0 !== t) {\n                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};\n                        for(let e = 0, n = t.length; e < n; e++){\n                            const n = t[e].name || String(e);\n                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e;\n                        }\n                    }\n                }\n            } else {\n                const e = t.morphTargets;\n                void 0 !== e && e.length > 0 && console.error(\"THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");\n            }\n        }\n        raycast(t, e) {\n            const n = this.geometry, i = this.material, r = this.matrixWorld;\n            if (void 0 === i) return;\n            if (null === n.boundingSphere && n.computeBoundingSphere(), Rn.copy(n.boundingSphere), Rn.applyMatrix4(r), !1 === t.ray.intersectsSphere(Rn)) return;\n            if (An.copy(r).invert(), Ln.copy(t.ray).applyMatrix4(An), null !== n.boundingBox && !1 === Ln.intersectsBox(n.boundingBox)) return;\n            let s;\n            if (n.isBufferGeometry) {\n                const r = n.index, a = n.attributes.position, o = n.morphAttributes.position, l = n.morphTargetsRelative, c = n.attributes.uv, h = n.attributes.uv2, u = n.groups, d = n.drawRange;\n                if (null !== r) {\n                    if (Array.isArray(i)) for(let n = 0, p = u.length; n < p; n++){\n                        const p = u[n], m = i[p.materialIndex];\n                        for(let n = Math.max(p.start, d.start), i = Math.min(r.count, Math.min(p.start + p.count, d.start + d.count)); n < i; n += 3){\n                            const i = r.getX(n), u = r.getX(n + 1), d = r.getX(n + 2);\n                            s = jn(this, m, t, Ln, a, o, l, c, h, i, u, d), s && (s.faceIndex = Math.floor(n / 3), s.face.materialIndex = p.materialIndex, e.push(s));\n                        }\n                    }\n                    else for(let n = Math.max(0, d.start), u = Math.min(r.count, d.start + d.count); n < u; n += 3){\n                        const u = r.getX(n), d = r.getX(n + 1), p = r.getX(n + 2);\n                        s = jn(this, i, t, Ln, a, o, l, c, h, u, d, p), s && (s.faceIndex = Math.floor(n / 3), e.push(s));\n                    }\n                } else if (void 0 !== a) {\n                    if (Array.isArray(i)) for(let n = 0, r = u.length; n < r; n++){\n                        const r = u[n], p = i[r.materialIndex];\n                        for(let n = Math.max(r.start, d.start), i = Math.min(a.count, Math.min(r.start + r.count, d.start + d.count)); n < i; n += 3)s = jn(this, p, t, Ln, a, o, l, c, h, n, n + 1, n + 2), s && (s.faceIndex = Math.floor(n / 3), s.face.materialIndex = r.materialIndex, e.push(s));\n                    }\n                    else for(let n = Math.max(0, d.start), r = Math.min(a.count, d.start + d.count); n < r; n += 3)s = jn(this, i, t, Ln, a, o, l, c, h, n, n + 1, n + 2), s && (s.faceIndex = Math.floor(n / 3), e.push(s));\n                }\n            } else n.isGeometry && console.error(\"THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");\n        }\n    }\n    function jn(t, e, n, i, r, s, a, o, l, c, h, u) {\n        Cn.fromBufferAttribute(r, c), Pn.fromBufferAttribute(r, h), In.fromBufferAttribute(r, u);\n        const d = t.morphTargetInfluences;\n        if (s && d) {\n            Bn.set(0, 0, 0), Fn.set(0, 0, 0), On.set(0, 0, 0);\n            for(let t = 0, e = s.length; t < e; t++){\n                const e = d[t], n = s[t];\n                0 !== e && (Dn.fromBufferAttribute(n, c), Nn.fromBufferAttribute(n, h), zn.fromBufferAttribute(n, u), a ? (Bn.addScaledVector(Dn, e), Fn.addScaledVector(Nn, e), On.addScaledVector(zn, e)) : (Bn.addScaledVector(Dn.sub(Cn), e), Fn.addScaledVector(Nn.sub(Pn), e), On.addScaledVector(zn.sub(In), e)));\n            }\n            Cn.add(Bn), Pn.add(Fn), In.add(On);\n        }\n        t.isSkinnedMesh && (t.boneTransform(c, Cn), t.boneTransform(h, Pn), t.boneTransform(u, In));\n        const p = function(t, e, n, i, r, s, a, o) {\n            let l;\n            if (l = 1 === e.side ? i.intersectTriangle(a, s, r, !0, o) : i.intersectTriangle(r, s, a, 2 !== e.side, o), null === l) return null;\n            Vn.copy(o), Vn.applyMatrix4(t.matrixWorld);\n            const c = n.ray.origin.distanceTo(Vn);\n            return c < n.near || c > n.far ? null : {\n                distance: c,\n                point: Vn.clone(),\n                object: t\n            };\n        }(t, e, n, i, Cn, Pn, In, kn);\n        if (p) {\n            o && (Un.fromBufferAttribute(o, c), Hn.fromBufferAttribute(o, h), Gn.fromBufferAttribute(o, u), p.uv = Ye.getUV(kn, Cn, Pn, In, Un, Hn, Gn, new yt)), l && (Un.fromBufferAttribute(l, c), Hn.fromBufferAttribute(l, h), Gn.fromBufferAttribute(l, u), p.uv2 = Ye.getUV(kn, Cn, Pn, In, Un, Hn, Gn, new yt));\n            const t = {\n                a: c,\n                b: h,\n                c: u,\n                normal: new zt,\n                materialIndex: 0\n            };\n            Ye.getNormal(Cn, Pn, In, t.normal), p.face = t;\n        }\n        return p;\n    }\n    Wn.prototype.isMesh = !0;\n    class qn extends En {\n        constructor(t = 1, e = 1, n = 1, i = 1, r = 1, s = 1){\n            super(), this.type = \"BoxGeometry\", this.parameters = {\n                width: t,\n                height: e,\n                depth: n,\n                widthSegments: i,\n                heightSegments: r,\n                depthSegments: s\n            };\n            const a = this;\n            i = Math.floor(i), r = Math.floor(r), s = Math.floor(s);\n            const o = [], l = [], c = [], h = [];\n            let u = 0, d = 0;\n            function p(t, e, n, i, r, s, p, m, f, g, v) {\n                const y = s / f, x = p / g, _ = s / 2, M = p / 2, b = m / 2, w = f + 1, S = g + 1;\n                let T = 0, E = 0;\n                const A = new zt;\n                for(let s = 0; s < S; s++){\n                    const a = s * x - M;\n                    for(let o = 0; o < w; o++){\n                        const u = o * y - _;\n                        A[t] = u * i, A[e] = a * r, A[n] = b, l.push(A.x, A.y, A.z), A[t] = 0, A[e] = 0, A[n] = m > 0 ? 1 : -1, c.push(A.x, A.y, A.z), h.push(o / f), h.push(1 - s / g), T += 1;\n                    }\n                }\n                for(let t = 0; t < g; t++)for(let e = 0; e < f; e++){\n                    const n = u + e + w * t, i = u + e + w * (t + 1), r = u + (e + 1) + w * (t + 1), s = u + (e + 1) + w * t;\n                    o.push(n, i, s), o.push(i, r, s), E += 6;\n                }\n                a.addGroup(d, E, v), d += E, u += T;\n            }\n            p(\"z\", \"y\", \"x\", -1, -1, n, e, t, s, r, 0), p(\"z\", \"y\", \"x\", 1, -1, n, e, -t, s, r, 1), p(\"x\", \"z\", \"y\", 1, 1, t, n, e, i, s, 2), p(\"x\", \"z\", \"y\", 1, -1, t, n, -e, i, s, 3), p(\"x\", \"y\", \"z\", 1, -1, t, e, n, i, r, 4), p(\"x\", \"y\", \"z\", -1, -1, t, e, -n, i, r, 5), this.setIndex(o), this.setAttribute(\"position\", new vn(l, 3)), this.setAttribute(\"normal\", new vn(c, 3)), this.setAttribute(\"uv\", new vn(h, 2));\n        }\n        static fromJSON(t) {\n            return new qn(t.width, t.height, t.depth, t.widthSegments, t.heightSegments, t.depthSegments);\n        }\n    }\n    function Xn(t) {\n        const e = {};\n        for(const n in t){\n            e[n] = {};\n            for(const i in t[n]){\n                const r = t[n][i];\n                r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture || r.isQuaternion) ? e[n][i] = r.clone() : Array.isArray(r) ? e[n][i] = r.slice() : e[n][i] = r;\n            }\n        }\n        return e;\n    }\n    function Yn(t) {\n        const e = {};\n        for(let n = 0; n < t.length; n++){\n            const i = Xn(t[n]);\n            for(const t in i)e[t] = i[t];\n        }\n        return e;\n    }\n    const Jn = {\n        clone: Xn,\n        merge: Yn\n    };\n    class Zn extends Ze {\n        constructor(t){\n            super(), this.type = \"ShaderMaterial\", this.defines = {}, this.uniforms = {}, this.vertexShader = \"void main() {\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\", this.fragmentShader = \"void main() {\\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\", this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.extensions = {\n                derivatives: !1,\n                fragDepth: !1,\n                drawBuffers: !1,\n                shaderTextureLOD: !1\n            }, this.defaultAttributeValues = {\n                color: [\n                    1,\n                    1,\n                    1\n                ],\n                uv: [\n                    0,\n                    0\n                ],\n                uv2: [\n                    0,\n                    0\n                ]\n            }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, void 0 !== t && (void 0 !== t.attributes && console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"), this.setValues(t));\n        }\n        copy(t) {\n            return super.copy(t), this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this.uniforms = Xn(t.uniforms), this.defines = Object.assign({}, t.defines), this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.lights = t.lights, this.clipping = t.clipping, this.extensions = Object.assign({}, t.extensions), this.glslVersion = t.glslVersion, this;\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            e.glslVersion = this.glslVersion, e.uniforms = {};\n            for(const n in this.uniforms){\n                const i = this.uniforms[n].value;\n                i && i.isTexture ? e.uniforms[n] = {\n                    type: \"t\",\n                    value: i.toJSON(t).uuid\n                } : i && i.isColor ? e.uniforms[n] = {\n                    type: \"c\",\n                    value: i.getHex()\n                } : i && i.isVector2 ? e.uniforms[n] = {\n                    type: \"v2\",\n                    value: i.toArray()\n                } : i && i.isVector3 ? e.uniforms[n] = {\n                    type: \"v3\",\n                    value: i.toArray()\n                } : i && i.isVector4 ? e.uniforms[n] = {\n                    type: \"v4\",\n                    value: i.toArray()\n                } : i && i.isMatrix3 ? e.uniforms[n] = {\n                    type: \"m3\",\n                    value: i.toArray()\n                } : i && i.isMatrix4 ? e.uniforms[n] = {\n                    type: \"m4\",\n                    value: i.toArray()\n                } : e.uniforms[n] = {\n                    value: i\n                };\n            }\n            Object.keys(this.defines).length > 0 && (e.defines = this.defines), e.vertexShader = this.vertexShader, e.fragmentShader = this.fragmentShader;\n            const n = {};\n            for(const t in this.extensions)!0 === this.extensions[t] && (n[t] = !0);\n            return Object.keys(n).length > 0 && (e.extensions = n), e;\n        }\n    }\n    Zn.prototype.isShaderMaterial = !0;\n    class Qn extends Fe {\n        constructor(){\n            super(), this.type = \"Camera\", this.matrixWorldInverse = new de, this.projectionMatrix = new de, this.projectionMatrixInverse = new de;\n        }\n        copy(t, e) {\n            return super.copy(t, e), this.matrixWorldInverse.copy(t.matrixWorldInverse), this.projectionMatrix.copy(t.projectionMatrix), this.projectionMatrixInverse.copy(t.projectionMatrixInverse), this;\n        }\n        getWorldDirection(t) {\n            this.updateWorldMatrix(!0, !1);\n            const e = this.matrixWorld.elements;\n            return t.set(-e[8], -e[9], -e[10]).normalize();\n        }\n        updateMatrixWorld(t) {\n            super.updateMatrixWorld(t), this.matrixWorldInverse.copy(this.matrixWorld).invert();\n        }\n        updateWorldMatrix(t, e) {\n            super.updateWorldMatrix(t, e), this.matrixWorldInverse.copy(this.matrixWorld).invert();\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }\n    Qn.prototype.isCamera = !0;\n    class Kn extends Qn {\n        constructor(t = 50, e = 1, n = .1, i = 2e3){\n            super(), this.type = \"PerspectiveCamera\", this.fov = t, this.zoom = 1, this.near = n, this.far = i, this.focus = 10, this.aspect = e, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();\n        }\n        copy(t, e) {\n            return super.copy(t, e), this.fov = t.fov, this.zoom = t.zoom, this.near = t.near, this.far = t.far, this.focus = t.focus, this.aspect = t.aspect, this.view = null === t.view ? null : Object.assign({}, t.view), this.filmGauge = t.filmGauge, this.filmOffset = t.filmOffset, this;\n        }\n        setFocalLength(t) {\n            const e = .5 * this.getFilmHeight() / t;\n            this.fov = 2 * ot * Math.atan(e), this.updateProjectionMatrix();\n        }\n        getFocalLength() {\n            const t = Math.tan(.5 * at * this.fov);\n            return .5 * this.getFilmHeight() / t;\n        }\n        getEffectiveFOV() {\n            return 2 * ot * Math.atan(Math.tan(.5 * at * this.fov) / this.zoom);\n        }\n        getFilmWidth() {\n            return this.filmGauge * Math.min(this.aspect, 1);\n        }\n        getFilmHeight() {\n            return this.filmGauge / Math.max(this.aspect, 1);\n        }\n        setViewOffset(t, e, n, i, r, s) {\n            this.aspect = t / e, null === this.view && (this.view = {\n                enabled: !0,\n                fullWidth: 1,\n                fullHeight: 1,\n                offsetX: 0,\n                offsetY: 0,\n                width: 1,\n                height: 1\n            }), this.view.enabled = !0, this.view.fullWidth = t, this.view.fullHeight = e, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = s, this.updateProjectionMatrix();\n        }\n        clearViewOffset() {\n            null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix();\n        }\n        updateProjectionMatrix() {\n            const t = this.near;\n            let e = t * Math.tan(.5 * at * this.fov) / this.zoom, n = 2 * e, i = this.aspect * n, r = -0.5 * i;\n            const s = this.view;\n            if (null !== this.view && this.view.enabled) {\n                const t = s.fullWidth, a = s.fullHeight;\n                r += s.offsetX * i / t, e -= s.offsetY * n / a, i *= s.width / t, n *= s.height / a;\n            }\n            const a = this.filmOffset;\n            0 !== a && (r += t * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, e, e - n, t, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            return e.object.fov = this.fov, e.object.zoom = this.zoom, e.object.near = this.near, e.object.far = this.far, e.object.focus = this.focus, e.object.aspect = this.aspect, null !== this.view && (e.object.view = Object.assign({}, this.view)), e.object.filmGauge = this.filmGauge, e.object.filmOffset = this.filmOffset, e;\n        }\n    }\n    Kn.prototype.isPerspectiveCamera = !0;\n    const $n = 90;\n    class ti extends Fe {\n        constructor(t, e, n){\n            if (super(), this.type = \"CubeCamera\", !0 !== n.isWebGLCubeRenderTarget) return void console.error(\"THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.\");\n            this.renderTarget = n;\n            const i = new Kn($n, 1, t, e);\n            i.layers = this.layers, i.up.set(0, -1, 0), i.lookAt(new zt(1, 0, 0)), this.add(i);\n            const r = new Kn($n, 1, t, e);\n            r.layers = this.layers, r.up.set(0, -1, 0), r.lookAt(new zt(-1, 0, 0)), this.add(r);\n            const s = new Kn($n, 1, t, e);\n            s.layers = this.layers, s.up.set(0, 0, 1), s.lookAt(new zt(0, 1, 0)), this.add(s);\n            const a = new Kn($n, 1, t, e);\n            a.layers = this.layers, a.up.set(0, 0, -1), a.lookAt(new zt(0, -1, 0)), this.add(a);\n            const o = new Kn($n, 1, t, e);\n            o.layers = this.layers, o.up.set(0, -1, 0), o.lookAt(new zt(0, 0, 1)), this.add(o);\n            const l = new Kn($n, 1, t, e);\n            l.layers = this.layers, l.up.set(0, -1, 0), l.lookAt(new zt(0, 0, -1)), this.add(l);\n        }\n        update(t, e) {\n            null === this.parent && this.updateMatrixWorld();\n            const n = this.renderTarget, [i, r, s, a, o, l] = this.children, c = t.xr.enabled, h = t.getRenderTarget();\n            t.xr.enabled = !1;\n            const u = n.texture.generateMipmaps;\n            n.texture.generateMipmaps = !1, t.setRenderTarget(n, 0), t.render(e, i), t.setRenderTarget(n, 1), t.render(e, r), t.setRenderTarget(n, 2), t.render(e, s), t.setRenderTarget(n, 3), t.render(e, a), t.setRenderTarget(n, 4), t.render(e, o), n.texture.generateMipmaps = u, t.setRenderTarget(n, 5), t.render(e, l), t.setRenderTarget(h), t.xr.enabled = c;\n        }\n    }\n    class ei extends Lt {\n        constructor(t, e, n, i, s, a, o, l, c, h){\n            super(t = void 0 !== t ? t : [], e = void 0 !== e ? e : r, n, i, s, a, o, l, c, h), this.flipY = !1;\n        }\n        get images() {\n            return this.image;\n        }\n        set images(t) {\n            this.image = t;\n        }\n    }\n    ei.prototype.isCubeTexture = !0;\n    class ni extends Pt {\n        constructor(t, e, n){\n            Number.isInteger(e) && (console.warn(\"THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )\"), e = n), super(t, t, e), e = e || {}, this.texture = new ei(void 0, e.mapping, e.wrapS, e.wrapT, e.magFilter, e.minFilter, e.format, e.type, e.anisotropy, e.encoding), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = void 0 !== e.generateMipmaps && e.generateMipmaps, this.texture.minFilter = void 0 !== e.minFilter ? e.minFilter : g, this.texture._needsFlipEnvMap = !1;\n        }\n        fromEquirectangularTexture(t, e) {\n            this.texture.type = e.type, this.texture.format = E, this.texture.encoding = e.encoding, this.texture.generateMipmaps = e.generateMipmaps, this.texture.minFilter = e.minFilter, this.texture.magFilter = e.magFilter;\n            const n = {\n                uniforms: {\n                    tEquirect: {\n                        value: null\n                    }\n                },\n                vertexShader: \"\\n\\n\t\t\t\tvarying vec3 vWorldDirection;\\n\\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\t\t\t\t}\\n\\n\t\t\t\tvoid main() {\\n\\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\t\t\t\t\t#include <begin_vertex>\\n\t\t\t\t\t#include <project_vertex>\\n\\n\t\t\t\t}\\n\t\t\t\",\n                fragmentShader: \"\\n\\n\t\t\t\tuniform sampler2D tEquirect;\\n\\n\t\t\t\tvarying vec3 vWorldDirection;\\n\\n\t\t\t\t#include <common>\\n\\n\t\t\t\tvoid main() {\\n\\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\\n\\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\\n\\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\t\t\t\t}\\n\t\t\t\"\n            }, i = new qn(5, 5, 5), r = new Zn({\n                name: \"CubemapFromEquirect\",\n                uniforms: Xn(n.uniforms),\n                vertexShader: n.vertexShader,\n                fragmentShader: n.fragmentShader,\n                side: 1,\n                blending: 0\n            });\n            r.uniforms.tEquirect.value = e;\n            const s = new Wn(i, r), a = e.minFilter;\n            e.minFilter === y && (e.minFilter = g);\n            return new ti(1, 10, this).update(t, s), e.minFilter = a, s.geometry.dispose(), s.material.dispose(), this;\n        }\n        clear(t, e, n, i) {\n            const r = t.getRenderTarget();\n            for(let r = 0; r < 6; r++)t.setRenderTarget(this, r), t.clear(e, n, i);\n            t.setRenderTarget(r);\n        }\n    }\n    ni.prototype.isWebGLCubeRenderTarget = !0;\n    const ii = new zt, ri = new zt, si = new xt;\n    class ai {\n        constructor(t = new zt(1, 0, 0), e = 0){\n            this.normal = t, this.constant = e;\n        }\n        set(t, e) {\n            return this.normal.copy(t), this.constant = e, this;\n        }\n        setComponents(t, e, n, i) {\n            return this.normal.set(t, e, n), this.constant = i, this;\n        }\n        setFromNormalAndCoplanarPoint(t, e) {\n            return this.normal.copy(t), this.constant = -e.dot(this.normal), this;\n        }\n        setFromCoplanarPoints(t, e, n) {\n            const i = ii.subVectors(n, e).cross(ri.subVectors(t, e)).normalize();\n            return this.setFromNormalAndCoplanarPoint(i, t), this;\n        }\n        copy(t) {\n            return this.normal.copy(t.normal), this.constant = t.constant, this;\n        }\n        normalize() {\n            const t = 1 / this.normal.length();\n            return this.normal.multiplyScalar(t), this.constant *= t, this;\n        }\n        negate() {\n            return this.constant *= -1, this.normal.negate(), this;\n        }\n        distanceToPoint(t) {\n            return this.normal.dot(t) + this.constant;\n        }\n        distanceToSphere(t) {\n            return this.distanceToPoint(t.center) - t.radius;\n        }\n        projectPoint(t, e) {\n            return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t);\n        }\n        intersectLine(t, e) {\n            const n = t.delta(ii), i = this.normal.dot(n);\n            if (0 === i) return 0 === this.distanceToPoint(t.start) ? e.copy(t.start) : null;\n            const r = -(t.start.dot(this.normal) + this.constant) / i;\n            return r < 0 || r > 1 ? null : e.copy(n).multiplyScalar(r).add(t.start);\n        }\n        intersectsLine(t) {\n            const e = this.distanceToPoint(t.start), n = this.distanceToPoint(t.end);\n            return e < 0 && n > 0 || n < 0 && e > 0;\n        }\n        intersectsBox(t) {\n            return t.intersectsPlane(this);\n        }\n        intersectsSphere(t) {\n            return t.intersectsPlane(this);\n        }\n        coplanarPoint(t) {\n            return t.copy(this.normal).multiplyScalar(-this.constant);\n        }\n        applyMatrix4(t, e) {\n            const n = e || si.getNormalMatrix(t), i = this.coplanarPoint(ii).applyMatrix4(t), r = this.normal.applyMatrix3(n).normalize();\n            return this.constant = -i.dot(r), this;\n        }\n        translate(t) {\n            return this.constant -= t.dot(this.normal), this;\n        }\n        equals(t) {\n            return t.normal.equals(this.normal) && t.constant === this.constant;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }\n    ai.prototype.isPlane = !0;\n    const oi = new ie, li = new zt;\n    class ci {\n        constructor(t = new ai, e = new ai, n = new ai, i = new ai, r = new ai, s = new ai){\n            this.planes = [\n                t,\n                e,\n                n,\n                i,\n                r,\n                s\n            ];\n        }\n        set(t, e, n, i, r, s) {\n            const a = this.planes;\n            return a[0].copy(t), a[1].copy(e), a[2].copy(n), a[3].copy(i), a[4].copy(r), a[5].copy(s), this;\n        }\n        copy(t) {\n            const e = this.planes;\n            for(let n = 0; n < 6; n++)e[n].copy(t.planes[n]);\n            return this;\n        }\n        setFromProjectionMatrix(t) {\n            const e = this.planes, n = t.elements, i = n[0], r = n[1], s = n[2], a = n[3], o = n[4], l = n[5], c = n[6], h = n[7], u = n[8], d = n[9], p = n[10], m = n[11], f = n[12], g = n[13], v = n[14], y = n[15];\n            return e[0].setComponents(a - i, h - o, m - u, y - f).normalize(), e[1].setComponents(a + i, h + o, m + u, y + f).normalize(), e[2].setComponents(a + r, h + l, m + d, y + g).normalize(), e[3].setComponents(a - r, h - l, m - d, y - g).normalize(), e[4].setComponents(a - s, h - c, m - p, y - v).normalize(), e[5].setComponents(a + s, h + c, m + p, y + v).normalize(), this;\n        }\n        intersectsObject(t) {\n            const e = t.geometry;\n            return null === e.boundingSphere && e.computeBoundingSphere(), oi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld), this.intersectsSphere(oi);\n        }\n        intersectsSprite(t) {\n            return oi.center.set(0, 0, 0), oi.radius = .7071067811865476, oi.applyMatrix4(t.matrixWorld), this.intersectsSphere(oi);\n        }\n        intersectsSphere(t) {\n            const e = this.planes, n = t.center, i = -t.radius;\n            for(let t = 0; t < 6; t++){\n                if (e[t].distanceToPoint(n) < i) return !1;\n            }\n            return !0;\n        }\n        intersectsBox(t) {\n            const e = this.planes;\n            for(let n = 0; n < 6; n++){\n                const i = e[n];\n                if (li.x = i.normal.x > 0 ? t.max.x : t.min.x, li.y = i.normal.y > 0 ? t.max.y : t.min.y, li.z = i.normal.z > 0 ? t.max.z : t.min.z, i.distanceToPoint(li) < 0) return !1;\n            }\n            return !0;\n        }\n        containsPoint(t) {\n            const e = this.planes;\n            for(let n = 0; n < 6; n++)if (e[n].distanceToPoint(t) < 0) return !1;\n            return !0;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }\n    function hi() {\n        let t = null, e = !1, n = null, i = null;\n        function r(e, s) {\n            n(e, s), i = t.requestAnimationFrame(r);\n        }\n        return {\n            start: function() {\n                !0 !== e && null !== n && (i = t.requestAnimationFrame(r), e = !0);\n            },\n            stop: function() {\n                t.cancelAnimationFrame(i), e = !1;\n            },\n            setAnimationLoop: function(t) {\n                n = t;\n            },\n            setContext: function(e) {\n                t = e;\n            }\n        };\n    }\n    function ui(t, e) {\n        const n = e.isWebGL2, i = new WeakMap;\n        return {\n            get: function(t) {\n                return t.isInterleavedBufferAttribute && (t = t.data), i.get(t);\n            },\n            remove: function(e) {\n                e.isInterleavedBufferAttribute && (e = e.data);\n                const n = i.get(e);\n                n && (t.deleteBuffer(n.buffer), i.delete(e));\n            },\n            update: function(e, r) {\n                if (e.isGLBufferAttribute) {\n                    const t = i.get(e);\n                    return void ((!t || t.version < e.version) && i.set(e, {\n                        buffer: e.buffer,\n                        type: e.type,\n                        bytesPerElement: e.elementSize,\n                        version: e.version\n                    }));\n                }\n                e.isInterleavedBufferAttribute && (e = e.data);\n                const s = i.get(e);\n                void 0 === s ? i.set(e, function(e, i) {\n                    const r = e.array, s = e.usage, a = t.createBuffer();\n                    t.bindBuffer(i, a), t.bufferData(i, r, s), e.onUploadCallback();\n                    let o = 5126;\n                    return r instanceof Float32Array ? o = 5126 : r instanceof Float64Array ? console.warn(\"THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.\") : r instanceof Uint16Array ? e.isFloat16BufferAttribute ? n ? o = 5131 : console.warn(\"THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.\") : o = 5123 : r instanceof Int16Array ? o = 5122 : r instanceof Uint32Array ? o = 5125 : r instanceof Int32Array ? o = 5124 : r instanceof Int8Array ? o = 5120 : (r instanceof Uint8Array || r instanceof Uint8ClampedArray) && (o = 5121), {\n                        buffer: a,\n                        type: o,\n                        bytesPerElement: r.BYTES_PER_ELEMENT,\n                        version: e.version\n                    };\n                }(e, r)) : s.version < e.version && (!function(e, i, r) {\n                    const s = i.array, a = i.updateRange;\n                    t.bindBuffer(r, e), -1 === a.count ? t.bufferSubData(r, 0, s) : (n ? t.bufferSubData(r, a.offset * s.BYTES_PER_ELEMENT, s, a.offset, a.count) : t.bufferSubData(r, a.offset * s.BYTES_PER_ELEMENT, s.subarray(a.offset, a.offset + a.count)), a.count = -1);\n                }(s.buffer, e, r), s.version = e.version);\n            }\n        };\n    }\n    class di extends En {\n        constructor(t = 1, e = 1, n = 1, i = 1){\n            super(), this.type = \"PlaneGeometry\", this.parameters = {\n                width: t,\n                height: e,\n                widthSegments: n,\n                heightSegments: i\n            };\n            const r = t / 2, s = e / 2, a = Math.floor(n), o = Math.floor(i), l = a + 1, c = o + 1, h = t / a, u = e / o, d = [], p = [], m = [], f = [];\n            for(let t = 0; t < c; t++){\n                const e = t * u - s;\n                for(let n = 0; n < l; n++){\n                    const i = n * h - r;\n                    p.push(i, -e, 0), m.push(0, 0, 1), f.push(n / a), f.push(1 - t / o);\n                }\n            }\n            for(let t = 0; t < o; t++)for(let e = 0; e < a; e++){\n                const n = e + l * t, i = e + l * (t + 1), r = e + 1 + l * (t + 1), s = e + 1 + l * t;\n                d.push(n, i, s), d.push(i, r, s);\n            }\n            this.setIndex(d), this.setAttribute(\"position\", new vn(p, 3)), this.setAttribute(\"normal\", new vn(m, 3)), this.setAttribute(\"uv\", new vn(f, 2));\n        }\n        static fromJSON(t) {\n            return new di(t.width, t.height, t.widthSegments, t.heightSegments);\n        }\n    }\n    const pi = {\n        alphamap_fragment: \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\",\n        alphamap_pars_fragment: \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\",\n        alphatest_fragment: \"#ifdef USE_ALPHATEST\\n\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\",\n        alphatest_pars_fragment: \"#ifdef USE_ALPHATEST\\n\tuniform float alphaTest;\\n#endif\",\n        aomap_fragment: \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\t#endif\\n#endif\",\n        aomap_pars_fragment: \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\",\n        begin_vertex: \"vec3 transformed = vec3( position );\",\n        beginnormal_vertex: \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\",\n        bsdfs: \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\tconst float LUT_SIZE = 64.0;\\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\tfloat dotNV = saturate( dot( N, V ) );\\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\tfloat l = length( f );\\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\tfloat x = dot( v1, v2 );\\n\tfloat y = abs( x );\\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\tfloat v = a / b;\\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\tvec3 lightNormal = cross( v1, v2 );\\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\tvec3 T1, T2;\\n\tT1 = normalize( V - N * dot( V, N ) );\\n\tT2 = - cross( N, T1 );\\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\tvec3 coords[ 4 ];\\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\tvec3 vectorFormFactor = vec3( 0.0 );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\tfloat alpha = pow2( roughness );\\n\tfloat invAlpha = 1.0 / alpha;\\n\tfloat cos2h = dotNH * dotNH;\\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\tfloat V = V_Neubelt( dotNV, dotNL );\\n\treturn sheenColor * ( D * V );\\n}\\n#endif\",\n        bumpmap_pars_fragment: \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\",\n        clipping_planes_fragment: \"#if NUM_CLIPPING_PLANES > 0\\n\tvec4 plane;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\t\tplane = clippingPlanes[ i ];\\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\t\tbool clipped = true;\\n\t\t#pragma unroll_loop_start\\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\t\t\tplane = clippingPlanes[ i ];\\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\t\t}\\n\t\t#pragma unroll_loop_end\\n\t\tif ( clipped ) discard;\\n\t#endif\\n#endif\",\n        clipping_planes_pars_fragment: \"#if NUM_CLIPPING_PLANES > 0\\n\tvarying vec3 vClipPosition;\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\",\n        clipping_planes_pars_vertex: \"#if NUM_CLIPPING_PLANES > 0\\n\tvarying vec3 vClipPosition;\\n#endif\",\n        clipping_planes_vertex: \"#if NUM_CLIPPING_PLANES > 0\\n\tvClipPosition = - mvPosition.xyz;\\n#endif\",\n        color_fragment: \"#if defined( USE_COLOR_ALPHA )\\n\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\tdiffuseColor.rgb *= vColor;\\n#endif\",\n        color_pars_fragment: \"#if defined( USE_COLOR_ALPHA )\\n\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\tvarying vec3 vColor;\\n#endif\",\n        color_pars_vertex: \"#if defined( USE_COLOR_ALPHA )\\n\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\tvarying vec3 vColor;\\n#endif\",\n        color_vertex: \"#if defined( USE_COLOR_ALPHA )\\n\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\tvColor.xyz *= instanceColor.xyz;\\n#endif\",\n        common: \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\tfloat precisionSafeLength( vec3 v ) {\\n\t\tfloat maxComponent = max3( abs( v ) );\\n\t\treturn length( v / maxComponent ) * maxComponent;\\n\t}\\n#endif\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\tmat3 tmp;\\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\treturn vec2( u, v );\\n}\",\n        cube_uv_reflection_fragment: \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\t#define cubeUV_maxMipLevel 8.0\\n\t#define cubeUV_minMipLevel 4.0\\n\t#define cubeUV_maxTileSize 256.0\\n\t#define cubeUV_minTileSize 16.0\\n\tfloat getFace( vec3 direction ) {\\n\t\tvec3 absDirection = abs( direction );\\n\t\tfloat face = - 1.0;\\n\t\tif ( absDirection.x > absDirection.z ) {\\n\t\t\tif ( absDirection.x > absDirection.y )\\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\t\t\telse\\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\t\t} else {\\n\t\t\tif ( absDirection.z > absDirection.y )\\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\t\t\telse\\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\t\t}\\n\t\treturn face;\\n\t}\\n\tvec2 getUV( vec3 direction, float face ) {\\n\t\tvec2 uv;\\n\t\tif ( face == 0.0 ) {\\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\t\t} else if ( face == 1.0 ) {\\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\t\t} else if ( face == 2.0 ) {\\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\t\t} else if ( face == 3.0 ) {\\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\t\t} else if ( face == 4.0 ) {\\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\t\t} else {\\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\t\t}\\n\t\treturn 0.5 * ( uv + 1.0 );\\n\t}\\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\t\tfloat face = getFace( direction );\\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\t\tfloat faceSize = exp2( mipInt );\\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\t\tvec2 f = fract( uv );\\n\t\tuv += 0.5 - f;\\n\t\tif ( face > 2.0 ) {\\n\t\t\tuv.y += faceSize;\\n\t\t\tface -= 3.0;\\n\t\t}\\n\t\tuv.x += face * faceSize;\\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\t\t}\\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\t\tuv *= texelSize;\\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\t\tuv.x += texelSize;\\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\t\tuv.y += texelSize;\\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\t\tuv.x -= texelSize;\\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\t\tvec3 tm = mix( tl, tr, f.x );\\n\t\tvec3 bm = mix( bl, br, f.x );\\n\t\treturn mix( tm, bm, f.y );\\n\t}\\n\t#define r0 1.0\\n\t#define v0 0.339\\n\t#define m0 - 2.0\\n\t#define r1 0.8\\n\t#define v1 0.276\\n\t#define m1 - 1.0\\n\t#define r4 0.4\\n\t#define v4 0.046\\n\t#define m4 2.0\\n\t#define r5 0.305\\n\t#define v5 0.016\\n\t#define m5 3.0\\n\t#define r6 0.21\\n\t#define v6 0.0038\\n\t#define m6 4.0\\n\tfloat roughnessToMip( float roughness ) {\\n\t\tfloat mip = 0.0;\\n\t\tif ( roughness >= r1 ) {\\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\t\t} else if ( roughness >= r4 ) {\\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\t\t} else if ( roughness >= r5 ) {\\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\t\t} else if ( roughness >= r6 ) {\\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\t\t} else {\\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\\n\t\treturn mip;\\n\t}\\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\t\tfloat mipF = fract( mip );\\n\t\tfloat mipInt = floor( mip );\\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\t\tif ( mipF == 0.0 ) {\\n\t\t\treturn vec4( color0, 1.0 );\\n\t\t} else {\\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\t\t}\\n\t}\\n#endif\",\n        defaultnormal_vertex: \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\tmat3 m = mat3( instanceMatrix );\\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\t#ifdef FLIP_SIDED\\n\t\ttransformedTangent = - transformedTangent;\\n\t#endif\\n#endif\",\n        displacementmap_pars_vertex: \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\",\n        displacementmap_vertex: \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\",\n        emissivemap_fragment: \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\",\n        emissivemap_pars_fragment: \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\",\n        encodings_fragment: \"gl_FragColor = linearToOutputTexel( gl_FragColor );\",\n        encodings_pars_fragment: \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\tM = ceil( M * 255.0 ) / 255.0;\\n\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\tvec4 vResult;\\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\tvResult.w = fract( Le );\\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\tfloat Le = value.z * 255.0 + value.w;\\n\tvec3 Xp_Y_XYZp;\\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\",\n        envmap_fragment: \"#ifdef USE_ENVMAP\\n\t#ifdef ENV_WORLDPOS\\n\t\tvec3 cameraToFrag;\\n\t\tif ( isOrthographic ) {\\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\t\t} else {\\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\t\t}\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t\tenvColor = envMapTexelToLinear( envColor );\\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\t#else\\n\t\tvec4 envColor = vec4( 0.0 );\\n\t#endif\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\",\n        envmap_common_pars_fragment: \"#ifdef USE_ENVMAP\\n\tuniform float envMapIntensity;\\n\tuniform float flipEnvMap;\\n\tuniform int maxMipLevel;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\t\\n#endif\",\n        envmap_pars_fragment: \"#ifdef USE_ENVMAP\\n\tuniform float reflectivity;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\t#define ENV_WORLDPOS\\n\t#endif\\n\t#ifdef ENV_WORLDPOS\\n\t\tvarying vec3 vWorldPosition;\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\",\n        envmap_pars_vertex: \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\t\t#define ENV_WORLDPOS\\n\t#endif\\n\t#ifdef ENV_WORLDPOS\\n\t\t\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\",\n        envmap_physical_pars_fragment: \"#if defined( USE_ENVMAP )\\n\t#ifdef ENVMAP_MODE_REFRACTION\\n\t\tuniform float refractionRatio;\\n\t#endif\\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t\t#else\\n\t\t\treturn vec3( 0.0 );\\n\t\t#endif\\n\t}\\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 reflectVec;\\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\t\treflectVec = reflect( - viewDir, normal );\\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\t\t\t#else\\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\t\t\t#endif\\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\t\t\treturn envMapColor.rgb * envMapIntensity;\\n\t\t#else\\n\t\t\treturn vec3( 0.0 );\\n\t\t#endif\\n\t}\\n#endif\",\n        envmap_vertex: \"#ifdef USE_ENVMAP\\n\t#ifdef ENV_WORLDPOS\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex;\\n\t\tif ( isOrthographic ) {\\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\t\t} else {\\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\t}\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\",\n        fog_vertex: \"#ifdef USE_FOG\\n\tvFogDepth = - mvPosition.z;\\n#endif\",\n        fog_pars_vertex: \"#ifdef USE_FOG\\n\tvarying float vFogDepth;\\n#endif\",\n        fog_fragment: \"#ifdef USE_FOG\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\",\n        fog_pars_fragment: \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\tvarying float vFogDepth;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\",\n        gradientmap_pars_fragment: \"#ifdef USE_GRADIENTMAP\\n\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\tfloat dotNL = dot( normal, lightDirection );\\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\t#ifdef USE_GRADIENTMAP\\n\t\treturn texture2D( gradientMap, coord ).rgb;\\n\t#else\\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\t#endif\\n}\",\n        lightmap_fragment: \"#ifdef USE_LIGHTMAP\\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tlightMapIrradiance *= PI;\\n\t#endif\\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\",\n        lightmap_pars_fragment: \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\",\n        lights_lambert_vertex: \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\t\t#endif\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\",\n        lights_pars_begin: \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\tif ( cutoffDistance > 0.0 ) {\\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t}\\n\t\treturn distanceFalloff;\\n\t#else\\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\t\t}\\n\t\treturn 1.0;\\n\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\t\tlight.color = directionalLight.color;\\n\t\tlight.direction = directionalLight.direction;\\n\t\tlight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tlight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tlight.color = pointLight.color;\\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tlight.direction = normalize( lVector );\\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\tif ( spotAttenuation > 0.0 ) {\\n\t\t\tfloat lightDistance = length( lVector );\\n\t\t\tlight.color = spotLight.color * spotAttenuation;\\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\t\t} else {\\n\t\t\tlight.color = vec3( 0.0 );\\n\t\t\tlight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\tstruct RectAreaLight {\\n\t\tvec3 color;\\n\t\tvec3 position;\\n\t\tvec3 halfWidth;\\n\t\tvec3 halfHeight;\\n\t};\\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\treturn irradiance;\\n\t}\\n#endif\",\n        lights_toon_fragment: \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\",\n        lights_toon_pars_fragment: \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\t(0)\",\n        lights_phong_fragment: \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\",\n        lights_phong_pars_fragment: \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\tvec3 diffuseColor;\\n\tvec3 specularColor;\\n\tfloat specularShininess;\\n\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\",\n        lights_physical_fragment: \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\t#ifdef SPECULAR\\n\t\tfloat specularIntensityFactor = specularIntensity;\\n\t\tvec3 specularColorFactor = specularColor;\\n\t\t#ifdef USE_SPECULARINTENSITYMAP\\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\t\t#endif\\n\t\t#ifdef USE_SPECULARCOLORMAP\\n\t\t\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\\n\t\t#endif\\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\t#else\\n\t\tfloat specularIntensityFactor = 1.0;\\n\t\tvec3 specularColorFactor = vec3( 1.0 );\\n\t\tmaterial.specularF90 = 1.0;\\n\t#endif\\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\tmaterial.clearcoat = clearcoat;\\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\tmaterial.clearcoatF90 = 1.0;\\n\t#ifdef USE_CLEARCOATMAP\\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\t#endif\\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\t#endif\\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\tmaterial.clearcoatRoughness += geometryRoughness;\\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\tmaterial.sheenColor = sheenColor;\\n\t#ifdef USE_SHEENCOLORMAP\\n\t\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\\n\t#endif\\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\t#ifdef USE_SHEENROUGHNESSMAP\\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\t#endif\\n#endif\",\n        lights_physical_pars_fragment: \"struct PhysicalMaterial {\\n\tvec3 diffuseColor;\\n\tfloat roughness;\\n\tvec3 specularColor;\\n\tfloat specularF90;\\n\t#ifdef USE_CLEARCOAT\\n\t\tfloat clearcoat;\\n\t\tfloat clearcoatRoughness;\\n\t\tvec3 clearcoatF0;\\n\t\tfloat clearcoatF90;\\n\t#endif\\n\t#ifdef USE_SHEEN\\n\t\tvec3 sheenColor;\\n\t\tfloat sheenRoughness;\\n\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\tfloat Ess = fab.x + fab.y;\\n\tfloat Ems = 1.0 - Ess;\\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\tsingleScatter += FssEss;\\n\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\t\tvec3 normal = geometry.normal;\\n\t\tvec3 viewDir = geometry.viewDir;\\n\t\tvec3 position = geometry.position;\\n\t\tvec3 lightPos = rectAreaLight.position;\\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\t\tvec3 lightColor = rectAreaLight.color;\\n\t\tfloat roughness = material.roughness;\\n\t\tvec3 rectCoords[ 4 ];\\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\t\tvec4 t1 = texture2D( ltc_1, uv );\\n\t\tvec4 t2 = texture2D( ltc_2, uv );\\n\t\tmat3 mInv = mat3(\\n\t\t\tvec3( t1.x, 0, t1.y ),\\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\\n\t\t\tvec3( t1.z, 0, t1.w )\\n\t\t);\\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifdef USE_CLEARCOAT\\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\t#endif\\n\t#ifdef USE_SHEEN\\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\t#endif\\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\t#ifdef USE_CLEARCOAT\\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\t#endif\\n\tvec3 singleScattering = vec3( 0.0 );\\n\tvec3 multiScattering = vec3( 0.0 );\\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\",\n        lights_fragment_begin: \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\tPointLightShadow pointLightShadow;\\n\t#endif\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\t\tpointLightShadow = pointLightShadows[ i ];\\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\tSpotLightShadow spotLightShadow;\\n\t#endif\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\t\tspotLightShadow = spotLightShadows[ i ];\\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\tDirectionalLightShadow directionalLightShadow;\\n\t#endif\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\tRectAreaLight rectAreaLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\t\trectAreaLight = rectAreaLights[ i ];\\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 iblIrradiance = vec3( 0.0 );\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\t#pragma unroll_loop_start\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\t\t}\\n\t\t#pragma unroll_loop_end\\n\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\tvec3 radiance = vec3( 0.0 );\\n\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\",\n        lights_fragment_maps: \"#if defined( RE_IndirectDiffuse )\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\t#ifdef USE_CLEARCOAT\\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\t#endif\\n#endif\",\n        lights_fragment_end: \"#if defined( RE_IndirectDiffuse )\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\",\n        logdepthbuf_fragment: \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\",\n        logdepthbuf_pars_fragment: \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\tuniform float logDepthBufFC;\\n\tvarying float vFragDepth;\\n\tvarying float vIsPerspective;\\n#endif\",\n        logdepthbuf_pars_vertex: \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t\tvarying float vIsPerspective;\\n\t#else\\n\t\tuniform float logDepthBufFC;\\n\t#endif\\n#endif\",\n        logdepthbuf_vertex: \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\t#else\\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\t\t\tgl_Position.z *= gl_Position.w;\\n\t\t}\\n\t#endif\\n#endif\",\n        map_fragment: \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\",\n        map_pars_fragment: \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\",\n        map_particle_fragment: \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, uv );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\",\n        map_particle_pars_fragment: \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\",\n        metalnessmap_fragment: \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.b;\\n#endif\",\n        metalnessmap_pars_fragment: \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\",\n        morphnormal_vertex: \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal *= morphTargetBaseInfluence;\\n\t#ifdef MORPHTARGETS_TEXTURE\\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\t\t}\\n\t#else\\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\t#endif\\n#endif\",\n        morphtarget_pars_vertex: \"#ifdef USE_MORPHTARGETS\\n\tuniform float morphTargetBaseInfluence;\\n\t#ifdef MORPHTARGETS_TEXTURE\\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\t\tuniform sampler2DArray morphTargetsTexture;\\n\t\tuniform vec2 morphTargetsTextureSize;\\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\t\t}\\n\t#else\\n\t\t#ifndef USE_MORPHNORMALS\\n\t\t\tuniform float morphTargetInfluences[ 8 ];\\n\t\t#else\\n\t\t\tuniform float morphTargetInfluences[ 4 ];\\n\t\t#endif\\n\t#endif\\n#endif\",\n        morphtarget_vertex: \"#ifdef USE_MORPHTARGETS\\n\ttransformed *= morphTargetBaseInfluence;\\n\t#ifdef MORPHTARGETS_TEXTURE\\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\t\t\t#ifndef USE_MORPHNORMALS\\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\t\t\t#else\\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\t\t\t#endif\\n\t\t}\\n\t#else\\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\t\t#ifndef USE_MORPHNORMALS\\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\t\t#endif\\n\t#endif\\n#endif\",\n        normal_fragment_begin: \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * faceDirection;\\n\t#endif\\n\t#ifdef USE_TANGENT\\n\t\tvec3 tangent = normalize( vTangent );\\n\t\tvec3 bitangent = normalize( vBitangent );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\ttangent = tangent * faceDirection;\\n\t\t\tbitangent = bitangent * faceDirection;\\n\t\t#endif\\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\t\t#endif\\n\t#endif\\n#endif\\nvec3 geometryNormal = normal;\",\n        normal_fragment_maps: \"#ifdef OBJECTSPACE_NORMALMAP\\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t#ifdef FLIP_SIDED\\n\t\tnormal = - normal;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * faceDirection;\\n\t#endif\\n\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\tmapN.xy *= normalScale;\\n\t#ifdef USE_TANGENT\\n\t\tnormal = normalize( vTBN * mapN );\\n\t#else\\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\t#endif\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\",\n        normal_pars_fragment: \"#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n\t#ifdef USE_TANGENT\\n\t\tvarying vec3 vTangent;\\n\t\tvarying vec3 vBitangent;\\n\t#endif\\n#endif\",\n        normal_pars_vertex: \"#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n\t#ifdef USE_TANGENT\\n\t\tvarying vec3 vTangent;\\n\t\tvarying vec3 vBitangent;\\n\t#endif\\n#endif\",\n        normal_vertex: \"#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n\t#ifdef USE_TANGENT\\n\t\tvTangent = normalize( transformedTangent );\\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\t#endif\\n#endif\",\n        normalmap_pars_fragment: \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 N = surf_norm;\\n\t\tvec3 q1perp = cross( q1, N );\\n\t\tvec3 q0perp = cross( N, q0 );\\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\t}\\n#endif\",\n        clearcoat_normal_fragment_begin: \"#ifdef USE_CLEARCOAT\\n\tvec3 clearcoatNormal = geometryNormal;\\n#endif\",\n        clearcoat_normal_fragment_maps: \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\t#ifdef USE_TANGENT\\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\t#else\\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\t#endif\\n#endif\",\n        clearcoat_pars_fragment: \"#ifdef USE_CLEARCOATMAP\\n\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\tuniform sampler2D clearcoatNormalMap;\\n\tuniform vec2 clearcoatNormalScale;\\n#endif\",\n        output_fragment: \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n        packing: \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\",\n        premultiplied_alpha_fragment: \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\",\n        project_vertex: \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\",\n        dithering_fragment: \"#ifdef DITHERING\\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\",\n        dithering_pars_fragment: \"#ifdef DITHERING\\n\tvec3 dithering( vec3 color ) {\\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\t\treturn color + dither_shift_RGB;\\n\t}\\n#endif\",\n        roughnessmap_fragment: \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.g;\\n#endif\",\n        roughnessmap_pars_fragment: \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\",\n        shadowmap_pars_fragment: \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tstruct DirectionalLightShadow {\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t\tstruct SpotLightShadow {\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tstruct PointLightShadow {\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t\tfloat shadowCameraNear;\\n\t\t\tfloat shadowCameraFar;\\n\t\t};\\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\t}\\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\t\tfloat occlusion = 1.0;\\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\t\tfloat hard_shadow = step( compare , distribution.x );\\n\t\tif (hard_shadow != 1.0 ) {\\n\t\t\tfloat distance = compare - distribution.x ;\\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\t\t}\\n\t\treturn occlusion;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tfloat shadow = 1.0;\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\tfloat dx2 = dx0 / 2.0;\\n\t\t\tfloat dy2 = dy0 / 2.0;\\n\t\t\tfloat dx3 = dx1 / 2.0;\\n\t\t\tfloat dy3 = dy1 / 2.0;\\n\t\t\tshadow = (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 17.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx = texelSize.x;\\n\t\t\tfloat dy = texelSize.y;\\n\t\t\tvec2 uv = shadowCoord.xy;\\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\t\t\tuv -= f * texelSize;\\n\t\t\tshadow = (\\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\t\t\t\t\t f.x ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\t\t\t\t\t f.x ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\t\t\t\t\t f.y ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\t\t\t\t\t f.y ) +\\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\t\t\t\t\t\t\tf.x ),\\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\t\t\t\t\t\t\tf.x ),\\n\t\t\t\t\t f.y )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#else\\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn shadow;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\",\n        shadowmap_pars_vertex: \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tstruct DirectionalLightShadow {\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t\tstruct SpotLightShadow {\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tstruct PointLightShadow {\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t\tfloat shadowCameraNear;\\n\t\t\tfloat shadowCameraFar;\\n\t\t};\\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\t#endif\\n#endif\",\n        shadowmap_vertex: \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\tvec4 shadowWorldPosition;\\n\t#endif\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n#endif\",\n        shadowmask_pars_fragment: \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\tDirectionalLightShadow directionalLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\t\tdirectionalLight = directionalLightShadows[ i ];\\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\tSpotLightShadow spotLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\t\tspotLight = spotLightShadows[ i ];\\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\tPointLightShadow pointLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\t\tpointLight = pointLightShadows[ i ];\\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\",\n        skinbase_vertex: \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\",\n        skinning_pars_vertex: \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform highp sampler2D boneTexture;\\n\t\tuniform int boneTextureSize;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\",\n        skinning_vertex: \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\",\n        skinnormal_vertex: \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\t#ifdef USE_TANGENT\\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\t#endif\\n#endif\",\n        specularmap_fragment: \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\",\n        specularmap_pars_fragment: \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\",\n        tonemapping_fragment: \"#if defined( TONE_MAPPING )\\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\",\n        tonemapping_pars_fragment: \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\tcolor *= toneMappingExposure;\\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\tcolor *= toneMappingExposure;\\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\tconst mat3 ACESInputMat = mat3(\\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\\n\t);\\n\tconst mat3 ACESOutputMat = mat3(\\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\t);\\n\tcolor *= toneMappingExposure / 0.6;\\n\tcolor = ACESInputMat * color;\\n\tcolor = RRTAndODTFit( color );\\n\tcolor = ACESOutputMat * color;\\n\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\",\n        transmission_fragment: \"#ifdef USE_TRANSMISSION\\n\tfloat transmissionAlpha = 1.0;\\n\tfloat transmissionFactor = transmission;\\n\tfloat thicknessFactor = thickness;\\n\t#ifdef USE_TRANSMISSIONMAP\\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\t#endif\\n\t#ifdef USE_THICKNESSMAP\\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\t#endif\\n\tvec3 pos = vWorldPosition;\\n\tvec3 v = normalize( cameraPosition - pos );\\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\tvec4 transmission = getIBLVolumeRefraction(\\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\t\tattenuationColor, attenuationDistance );\\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\",\n        transmission_pars_fragment: \"#ifdef USE_TRANSMISSION\\n\tuniform float transmission;\\n\tuniform float thickness;\\n\tuniform float attenuationDistance;\\n\tuniform vec3 attenuationColor;\\n\t#ifdef USE_TRANSMISSIONMAP\\n\t\tuniform sampler2D transmissionMap;\\n\t#endif\\n\t#ifdef USE_THICKNESSMAP\\n\t\tuniform sampler2D thicknessMap;\\n\t#endif\\n\tuniform vec2 transmissionSamplerSize;\\n\tuniform sampler2D transmissionSamplerMap;\\n\tuniform mat4 modelMatrix;\\n\tuniform mat4 projectionMatrix;\\n\tvarying vec3 vWorldPosition;\\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\t\tvec3 modelScale;\\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\\n\t}\\n\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\t}\\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\t\t#else\\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\t\t#endif\\n\t}\\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\t\tif ( attenuationDistance == 0.0 ) {\\n\t\t\treturn radiance;\\n\t\t} else {\\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\\n\t\t}\\n\t}\\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\t\tvec3 attenuationColor, float attenuationDistance ) {\\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\t\tvec3 refractedRayExit = position + transmissionRay;\\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\t\trefractionCoords += 1.0;\\n\t\trefractionCoords /= 2.0;\\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\t}\\n#endif\",\n        uv_pars_fragment: \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\tvarying vec2 vUv;\\n#endif\",\n        uv_pars_vertex: \"#ifdef USE_UV\\n\t#ifdef UVS_VERTEX_ONLY\\n\t\tvec2 vUv;\\n\t#else\\n\t\tvarying vec2 vUv;\\n\t#endif\\n\tuniform mat3 uvTransform;\\n#endif\",\n        uv_vertex: \"#ifdef USE_UV\\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\",\n        uv2_pars_fragment: \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\",\n        uv2_pars_vertex: \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\tuniform mat3 uv2Transform;\\n#endif\",\n        uv2_vertex: \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\",\n        worldpos_vertex: \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\t#ifdef USE_INSTANCING\\n\t\tworldPosition = instanceMatrix * worldPosition;\\n\t#endif\\n\tworldPosition = modelMatrix * worldPosition;\\n#endif\",\n        background_vert: \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\",\n        background_frag: \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\tvec4 texColor = texture2D( t2D, vUv );\\n\tgl_FragColor = mapTexelToLinear( texColor );\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n}\",\n        cube_vert: \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\tvWorldDirection = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\tgl_Position.z = gl_Position.w;\\n}\",\n        cube_frag: \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\tvec3 vReflect = vWorldDirection;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = envColor;\\n\tgl_FragColor.a *= opacity;\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n}\",\n        depth_vert: \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_DISPLACEMENTMAP\\n\t\t#include <beginnormal_vertex>\\n\t\t#include <morphnormal_vertex>\\n\t\t#include <skinnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvHighPrecisionZW = gl_Position.zw;\\n}\",\n        depth_frag: \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\t#endif\\n}\",\n        distanceRGBA_vert: \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_DISPLACEMENTMAP\\n\t\t#include <beginnormal_vertex>\\n\t\t#include <morphnormal_vertex>\\n\t\t#include <skinnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition.xyz;\\n}\",\n        distanceRGBA_frag: \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\tfloat dist = length( vWorldPosition - referencePosition );\\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\tdist = saturate( dist );\\n\tgl_FragColor = packDepthToRGBA( dist );\\n}\",\n        equirect_vert: \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\tvWorldDirection = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\",\n        equirect_frag: \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\tvec3 direction = normalize( vWorldDirection );\\n\tvec2 sampleUV = equirectUv( direction );\\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\tgl_FragColor = mapTexelToLinear( texColor );\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n}\",\n        linedashed_vert: \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvLineDistance = scale * lineDistance;\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <fog_vertex>\\n}\",\n        linedashed_frag: \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n}\",\n        meshbasic_vert: \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\t\t#include <beginnormal_vertex>\\n\t\t#include <morphnormal_vertex>\\n\t\t#include <skinbase_vertex>\\n\t\t#include <skinnormal_vertex>\\n\t\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <fog_vertex>\\n}\",\n        meshbasic_frag: \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\t#else\\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\t#endif\\n\t#include <aomap_fragment>\\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\",\n        meshlambert_vert: \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\",\n        meshlambert_frag: \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\t#else\\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\\n\t#endif\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\",\n        meshmatcap_vert: \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <fog_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n}\",\n        meshmatcap_frag: \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\tvec3 viewDir = normalize( vViewPosition );\\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\tvec3 y = cross( viewDir, x );\\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\t#ifdef USE_MATCAP\\n\t\tvec4 matcapColor = texture2D( matcap, uv );\\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\t#else\\n\t\tvec4 matcapColor = vec4( 1.0 );\\n\t#endif\\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\",\n        meshnormal_vert: \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\",\n        meshnormal_frag: \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\",\n        meshphong_vert: \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\",\n        meshphong_frag: \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_fragment_begin>\\n\t#include <lights_fragment_maps>\\n\t#include <lights_fragment_end>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\",\n        meshphysical_vert: \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\",\n        meshphysical_frag: \"#define STANDARD\\n#ifdef PHYSICAL\\n\t#define IOR\\n\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\tuniform float specularIntensity;\\n\tuniform vec3 specularColor;\\n\t#ifdef USE_SPECULARINTENSITYMAP\\n\t\tuniform sampler2D specularIntensityMap;\\n\t#endif\\n\t#ifdef USE_SPECULARCOLORMAP\\n\t\tuniform sampler2D specularColorMap;\\n\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\tuniform float clearcoat;\\n\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\tuniform vec3 sheenColor;\\n\tuniform float sheenRoughness;\\n\t#ifdef USE_SHEENCOLORMAP\\n\t\tuniform sampler2D sheenColorMap;\\n\t#endif\\n\t#ifdef USE_SHEENROUGHNESSMAP\\n\t\tuniform sampler2D sheenRoughnessMap;\\n\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\t#include <clearcoat_normal_fragment_begin>\\n\t#include <clearcoat_normal_fragment_maps>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_fragment_begin>\\n\t#include <lights_fragment_maps>\\n\t#include <lights_fragment_end>\\n\t#include <aomap_fragment>\\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\t#include <transmission_fragment>\\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\t#ifdef USE_CLEARCOAT\\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\t\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\t#endif\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\",\n        meshtoon_vert: \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\",\n        meshtoon_frag: \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_toon_fragment>\\n\t#include <lights_fragment_begin>\\n\t#include <lights_fragment_maps>\\n\t#include <lights_fragment_end>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\",\n        points_vert: \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\tgl_PointSize = size;\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <fog_vertex>\\n}\",\n        points_frag: \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n}\",\n        shadow_vert: \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\",\n        shadow_frag: \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\",\n        sprite_vert: \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\tvec2 scale;\\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\t#ifndef USE_SIZEATTENUATION\\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\\n\t#endif\\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\tvec2 rotatedPosition;\\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\tmvPosition.xy += rotatedPosition;\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <fog_vertex>\\n}\",\n        sprite_frag: \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\t#include <output_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\"\n    }, mi = {\n        common: {\n            diffuse: {\n                value: new rn(16777215)\n            },\n            opacity: {\n                value: 1\n            },\n            map: {\n                value: null\n            },\n            uvTransform: {\n                value: new xt\n            },\n            uv2Transform: {\n                value: new xt\n            },\n            alphaMap: {\n                value: null\n            },\n            alphaTest: {\n                value: 0\n            }\n        },\n        specularmap: {\n            specularMap: {\n                value: null\n            }\n        },\n        envmap: {\n            envMap: {\n                value: null\n            },\n            flipEnvMap: {\n                value: -1\n            },\n            reflectivity: {\n                value: 1\n            },\n            ior: {\n                value: 1.5\n            },\n            refractionRatio: {\n                value: .98\n            },\n            maxMipLevel: {\n                value: 0\n            }\n        },\n        aomap: {\n            aoMap: {\n                value: null\n            },\n            aoMapIntensity: {\n                value: 1\n            }\n        },\n        lightmap: {\n            lightMap: {\n                value: null\n            },\n            lightMapIntensity: {\n                value: 1\n            }\n        },\n        emissivemap: {\n            emissiveMap: {\n                value: null\n            }\n        },\n        bumpmap: {\n            bumpMap: {\n                value: null\n            },\n            bumpScale: {\n                value: 1\n            }\n        },\n        normalmap: {\n            normalMap: {\n                value: null\n            },\n            normalScale: {\n                value: new yt(1, 1)\n            }\n        },\n        displacementmap: {\n            displacementMap: {\n                value: null\n            },\n            displacementScale: {\n                value: 1\n            },\n            displacementBias: {\n                value: 0\n            }\n        },\n        roughnessmap: {\n            roughnessMap: {\n                value: null\n            }\n        },\n        metalnessmap: {\n            metalnessMap: {\n                value: null\n            }\n        },\n        gradientmap: {\n            gradientMap: {\n                value: null\n            }\n        },\n        fog: {\n            fogDensity: {\n                value: 25e-5\n            },\n            fogNear: {\n                value: 1\n            },\n            fogFar: {\n                value: 2e3\n            },\n            fogColor: {\n                value: new rn(16777215)\n            }\n        },\n        lights: {\n            ambientLightColor: {\n                value: []\n            },\n            lightProbe: {\n                value: []\n            },\n            directionalLights: {\n                value: [],\n                properties: {\n                    direction: {},\n                    color: {}\n                }\n            },\n            directionalLightShadows: {\n                value: [],\n                properties: {\n                    shadowBias: {},\n                    shadowNormalBias: {},\n                    shadowRadius: {},\n                    shadowMapSize: {}\n                }\n            },\n            directionalShadowMap: {\n                value: []\n            },\n            directionalShadowMatrix: {\n                value: []\n            },\n            spotLights: {\n                value: [],\n                properties: {\n                    color: {},\n                    position: {},\n                    direction: {},\n                    distance: {},\n                    coneCos: {},\n                    penumbraCos: {},\n                    decay: {}\n                }\n            },\n            spotLightShadows: {\n                value: [],\n                properties: {\n                    shadowBias: {},\n                    shadowNormalBias: {},\n                    shadowRadius: {},\n                    shadowMapSize: {}\n                }\n            },\n            spotShadowMap: {\n                value: []\n            },\n            spotShadowMatrix: {\n                value: []\n            },\n            pointLights: {\n                value: [],\n                properties: {\n                    color: {},\n                    position: {},\n                    decay: {},\n                    distance: {}\n                }\n            },\n            pointLightShadows: {\n                value: [],\n                properties: {\n                    shadowBias: {},\n                    shadowNormalBias: {},\n                    shadowRadius: {},\n                    shadowMapSize: {},\n                    shadowCameraNear: {},\n                    shadowCameraFar: {}\n                }\n            },\n            pointShadowMap: {\n                value: []\n            },\n            pointShadowMatrix: {\n                value: []\n            },\n            hemisphereLights: {\n                value: [],\n                properties: {\n                    direction: {},\n                    skyColor: {},\n                    groundColor: {}\n                }\n            },\n            rectAreaLights: {\n                value: [],\n                properties: {\n                    color: {},\n                    position: {},\n                    width: {},\n                    height: {}\n                }\n            },\n            ltc_1: {\n                value: null\n            },\n            ltc_2: {\n                value: null\n            }\n        },\n        points: {\n            diffuse: {\n                value: new rn(16777215)\n            },\n            opacity: {\n                value: 1\n            },\n            size: {\n                value: 1\n            },\n            scale: {\n                value: 1\n            },\n            map: {\n                value: null\n            },\n            alphaMap: {\n                value: null\n            },\n            alphaTest: {\n                value: 0\n            },\n            uvTransform: {\n                value: new xt\n            }\n        },\n        sprite: {\n            diffuse: {\n                value: new rn(16777215)\n            },\n            opacity: {\n                value: 1\n            },\n            center: {\n                value: new yt(.5, .5)\n            },\n            rotation: {\n                value: 0\n            },\n            map: {\n                value: null\n            },\n            alphaMap: {\n                value: null\n            },\n            alphaTest: {\n                value: 0\n            },\n            uvTransform: {\n                value: new xt\n            }\n        }\n    }, fi = {\n        basic: {\n            uniforms: Yn([\n                mi.common,\n                mi.specularmap,\n                mi.envmap,\n                mi.aomap,\n                mi.lightmap,\n                mi.fog\n            ]),\n            vertexShader: pi.meshbasic_vert,\n            fragmentShader: pi.meshbasic_frag\n        },\n        lambert: {\n            uniforms: Yn([\n                mi.common,\n                mi.specularmap,\n                mi.envmap,\n                mi.aomap,\n                mi.lightmap,\n                mi.emissivemap,\n                mi.fog,\n                mi.lights,\n                {\n                    emissive: {\n                        value: new rn(0)\n                    }\n                }\n            ]),\n            vertexShader: pi.meshlambert_vert,\n            fragmentShader: pi.meshlambert_frag\n        },\n        phong: {\n            uniforms: Yn([\n                mi.common,\n                mi.specularmap,\n                mi.envmap,\n                mi.aomap,\n                mi.lightmap,\n                mi.emissivemap,\n                mi.bumpmap,\n                mi.normalmap,\n                mi.displacementmap,\n                mi.fog,\n                mi.lights,\n                {\n                    emissive: {\n                        value: new rn(0)\n                    },\n                    specular: {\n                        value: new rn(1118481)\n                    },\n                    shininess: {\n                        value: 30\n                    }\n                }\n            ]),\n            vertexShader: pi.meshphong_vert,\n            fragmentShader: pi.meshphong_frag\n        },\n        standard: {\n            uniforms: Yn([\n                mi.common,\n                mi.envmap,\n                mi.aomap,\n                mi.lightmap,\n                mi.emissivemap,\n                mi.bumpmap,\n                mi.normalmap,\n                mi.displacementmap,\n                mi.roughnessmap,\n                mi.metalnessmap,\n                mi.fog,\n                mi.lights,\n                {\n                    emissive: {\n                        value: new rn(0)\n                    },\n                    roughness: {\n                        value: 1\n                    },\n                    metalness: {\n                        value: 0\n                    },\n                    envMapIntensity: {\n                        value: 1\n                    }\n                }\n            ]),\n            vertexShader: pi.meshphysical_vert,\n            fragmentShader: pi.meshphysical_frag\n        },\n        toon: {\n            uniforms: Yn([\n                mi.common,\n                mi.aomap,\n                mi.lightmap,\n                mi.emissivemap,\n                mi.bumpmap,\n                mi.normalmap,\n                mi.displacementmap,\n                mi.gradientmap,\n                mi.fog,\n                mi.lights,\n                {\n                    emissive: {\n                        value: new rn(0)\n                    }\n                }\n            ]),\n            vertexShader: pi.meshtoon_vert,\n            fragmentShader: pi.meshtoon_frag\n        },\n        matcap: {\n            uniforms: Yn([\n                mi.common,\n                mi.bumpmap,\n                mi.normalmap,\n                mi.displacementmap,\n                mi.fog,\n                {\n                    matcap: {\n                        value: null\n                    }\n                }\n            ]),\n            vertexShader: pi.meshmatcap_vert,\n            fragmentShader: pi.meshmatcap_frag\n        },\n        points: {\n            uniforms: Yn([\n                mi.points,\n                mi.fog\n            ]),\n            vertexShader: pi.points_vert,\n            fragmentShader: pi.points_frag\n        },\n        dashed: {\n            uniforms: Yn([\n                mi.common,\n                mi.fog,\n                {\n                    scale: {\n                        value: 1\n                    },\n                    dashSize: {\n                        value: 1\n                    },\n                    totalSize: {\n                        value: 2\n                    }\n                }\n            ]),\n            vertexShader: pi.linedashed_vert,\n            fragmentShader: pi.linedashed_frag\n        },\n        depth: {\n            uniforms: Yn([\n                mi.common,\n                mi.displacementmap\n            ]),\n            vertexShader: pi.depth_vert,\n            fragmentShader: pi.depth_frag\n        },\n        normal: {\n            uniforms: Yn([\n                mi.common,\n                mi.bumpmap,\n                mi.normalmap,\n                mi.displacementmap,\n                {\n                    opacity: {\n                        value: 1\n                    }\n                }\n            ]),\n            vertexShader: pi.meshnormal_vert,\n            fragmentShader: pi.meshnormal_frag\n        },\n        sprite: {\n            uniforms: Yn([\n                mi.sprite,\n                mi.fog\n            ]),\n            vertexShader: pi.sprite_vert,\n            fragmentShader: pi.sprite_frag\n        },\n        background: {\n            uniforms: {\n                uvTransform: {\n                    value: new xt\n                },\n                t2D: {\n                    value: null\n                }\n            },\n            vertexShader: pi.background_vert,\n            fragmentShader: pi.background_frag\n        },\n        cube: {\n            uniforms: Yn([\n                mi.envmap,\n                {\n                    opacity: {\n                        value: 1\n                    }\n                }\n            ]),\n            vertexShader: pi.cube_vert,\n            fragmentShader: pi.cube_frag\n        },\n        equirect: {\n            uniforms: {\n                tEquirect: {\n                    value: null\n                }\n            },\n            vertexShader: pi.equirect_vert,\n            fragmentShader: pi.equirect_frag\n        },\n        distanceRGBA: {\n            uniforms: Yn([\n                mi.common,\n                mi.displacementmap,\n                {\n                    referencePosition: {\n                        value: new zt\n                    },\n                    nearDistance: {\n                        value: 1\n                    },\n                    farDistance: {\n                        value: 1e3\n                    }\n                }\n            ]),\n            vertexShader: pi.distanceRGBA_vert,\n            fragmentShader: pi.distanceRGBA_frag\n        },\n        shadow: {\n            uniforms: Yn([\n                mi.lights,\n                mi.fog,\n                {\n                    color: {\n                        value: new rn(0)\n                    },\n                    opacity: {\n                        value: 1\n                    }\n                }\n            ]),\n            vertexShader: pi.shadow_vert,\n            fragmentShader: pi.shadow_frag\n        }\n    };\n    function gi(t, e, n, i, r) {\n        const s = new rn(0);\n        let a, o, c = 0, h = null, u = 0, d = null;\n        function p(t, e) {\n            n.buffers.color.setClear(t.r, t.g, t.b, e, r);\n        }\n        return {\n            getClearColor: function() {\n                return s;\n            },\n            setClearColor: function(t, e = 1) {\n                s.set(t), c = e, p(s, c);\n            },\n            getClearAlpha: function() {\n                return c;\n            },\n            setClearAlpha: function(t) {\n                c = t, p(s, c);\n            },\n            render: function(n, r) {\n                let m = !1, f = !0 === r.isScene ? r.background : null;\n                f && f.isTexture && (f = e.get(f));\n                const g = t.xr, v = g.getSession && g.getSession();\n                v && \"additive\" === v.environmentBlendMode && (f = null), null === f ? p(s, c) : f && f.isColor && (p(f, 1), m = !0), (t.autoClear || m) && t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil), f && (f.isCubeTexture || f.mapping === l) ? (void 0 === o && (o = new Wn(new qn(1, 1, 1), new Zn({\n                    name: \"BackgroundCubeMaterial\",\n                    uniforms: Xn(fi.cube.uniforms),\n                    vertexShader: fi.cube.vertexShader,\n                    fragmentShader: fi.cube.fragmentShader,\n                    side: 1,\n                    depthTest: !1,\n                    depthWrite: !1,\n                    fog: !1\n                })), o.geometry.deleteAttribute(\"normal\"), o.geometry.deleteAttribute(\"uv\"), o.onBeforeRender = function(t, e, n) {\n                    this.matrixWorld.copyPosition(n.matrixWorld);\n                }, Object.defineProperty(o.material, \"envMap\", {\n                    get: function() {\n                        return this.uniforms.envMap.value;\n                    }\n                }), i.update(o)), o.material.uniforms.envMap.value = f, o.material.uniforms.flipEnvMap.value = f.isCubeTexture && !1 === f.isRenderTargetTexture ? -1 : 1, h === f && u === f.version && d === t.toneMapping || (o.material.needsUpdate = !0, h = f, u = f.version, d = t.toneMapping), n.unshift(o, o.geometry, o.material, 0, 0, null)) : f && f.isTexture && (void 0 === a && (a = new Wn(new di(2, 2), new Zn({\n                    name: \"BackgroundMaterial\",\n                    uniforms: Xn(fi.background.uniforms),\n                    vertexShader: fi.background.vertexShader,\n                    fragmentShader: fi.background.fragmentShader,\n                    side: 0,\n                    depthTest: !1,\n                    depthWrite: !1,\n                    fog: !1\n                })), a.geometry.deleteAttribute(\"normal\"), Object.defineProperty(a.material, \"map\", {\n                    get: function() {\n                        return this.uniforms.t2D.value;\n                    }\n                }), i.update(a)), a.material.uniforms.t2D.value = f, !0 === f.matrixAutoUpdate && f.updateMatrix(), a.material.uniforms.uvTransform.value.copy(f.matrix), h === f && u === f.version && d === t.toneMapping || (a.material.needsUpdate = !0, h = f, u = f.version, d = t.toneMapping), n.unshift(a, a.geometry, a.material, 0, 0, null));\n            }\n        };\n    }\n    function vi(t, e, n, i) {\n        const r = t.getParameter(34921), s = i.isWebGL2 ? null : e.get(\"OES_vertex_array_object\"), a = i.isWebGL2 || null !== s, o = {}, l = d(null);\n        let c = l;\n        function h(e) {\n            return i.isWebGL2 ? t.bindVertexArray(e) : s.bindVertexArrayOES(e);\n        }\n        function u(e) {\n            return i.isWebGL2 ? t.deleteVertexArray(e) : s.deleteVertexArrayOES(e);\n        }\n        function d(t) {\n            const e = [], n = [], i = [];\n            for(let t = 0; t < r; t++)e[t] = 0, n[t] = 0, i[t] = 0;\n            return {\n                geometry: null,\n                program: null,\n                wireframe: !1,\n                newAttributes: e,\n                enabledAttributes: n,\n                attributeDivisors: i,\n                object: t,\n                attributes: {},\n                index: null\n            };\n        }\n        function p() {\n            const t = c.newAttributes;\n            for(let e = 0, n = t.length; e < n; e++)t[e] = 0;\n        }\n        function m(t) {\n            f(t, 0);\n        }\n        function f(n, r) {\n            const s = c.newAttributes, a = c.enabledAttributes, o = c.attributeDivisors;\n            if (s[n] = 1, 0 === a[n] && (t.enableVertexAttribArray(n), a[n] = 1), o[n] !== r) (i.isWebGL2 ? t : e.get(\"ANGLE_instanced_arrays\"))[i.isWebGL2 ? \"vertexAttribDivisor\" : \"vertexAttribDivisorANGLE\"](n, r), o[n] = r;\n        }\n        function g() {\n            const e = c.newAttributes, n = c.enabledAttributes;\n            for(let i = 0, r = n.length; i < r; i++)n[i] !== e[i] && (t.disableVertexAttribArray(i), n[i] = 0);\n        }\n        function v(e, n, r, s, a, o) {\n            !0 !== i.isWebGL2 || 5124 !== r && 5125 !== r ? t.vertexAttribPointer(e, n, r, s, a, o) : t.vertexAttribIPointer(e, n, r, a, o);\n        }\n        function y() {\n            x(), c !== l && (c = l, h(c.object));\n        }\n        function x() {\n            l.geometry = null, l.program = null, l.wireframe = !1;\n        }\n        return {\n            setup: function(r, l, u, y, x) {\n                let _ = !1;\n                if (a) {\n                    const e = function(e, n, r) {\n                        const a = !0 === r.wireframe;\n                        let l = o[e.id];\n                        void 0 === l && (l = {}, o[e.id] = l);\n                        let c = l[n.id];\n                        void 0 === c && (c = {}, l[n.id] = c);\n                        let h = c[a];\n                        void 0 === h && (h = d(i.isWebGL2 ? t.createVertexArray() : s.createVertexArrayOES()), c[a] = h);\n                        return h;\n                    }(y, u, l);\n                    c !== e && (c = e, h(c.object)), _ = function(t, e) {\n                        const n = c.attributes, i = t.attributes;\n                        let r = 0;\n                        for(const t in i){\n                            const e = n[t], s = i[t];\n                            if (void 0 === e) return !0;\n                            if (e.attribute !== s) return !0;\n                            if (e.data !== s.data) return !0;\n                            r++;\n                        }\n                        return c.attributesNum !== r || c.index !== e;\n                    }(y, x), _ && function(t, e) {\n                        const n = {}, i = t.attributes;\n                        let r = 0;\n                        for(const t in i){\n                            const e = i[t], s = {};\n                            s.attribute = e, e.data && (s.data = e.data), n[t] = s, r++;\n                        }\n                        c.attributes = n, c.attributesNum = r, c.index = e;\n                    }(y, x);\n                } else {\n                    const t = !0 === l.wireframe;\n                    c.geometry === y.id && c.program === u.id && c.wireframe === t || (c.geometry = y.id, c.program = u.id, c.wireframe = t, _ = !0);\n                }\n                !0 === r.isInstancedMesh && (_ = !0), null !== x && n.update(x, 34963), _ && (!function(r, s, a, o) {\n                    if (!1 === i.isWebGL2 && (r.isInstancedMesh || o.isInstancedBufferGeometry) && null === e.get(\"ANGLE_instanced_arrays\")) return;\n                    p();\n                    const l = o.attributes, c = a.getAttributes(), h = s.defaultAttributeValues;\n                    for(const e in c){\n                        const i = c[e];\n                        if (i.location >= 0) {\n                            let s = l[e];\n                            if (void 0 === s && (\"instanceMatrix\" === e && r.instanceMatrix && (s = r.instanceMatrix), \"instanceColor\" === e && r.instanceColor && (s = r.instanceColor)), void 0 !== s) {\n                                const e = s.normalized, a = s.itemSize, l = n.get(s);\n                                if (void 0 === l) continue;\n                                const c = l.buffer, h = l.type, u = l.bytesPerElement;\n                                if (s.isInterleavedBufferAttribute) {\n                                    const n = s.data, l = n.stride, d = s.offset;\n                                    if (n && n.isInstancedInterleavedBuffer) {\n                                        for(let t = 0; t < i.locationSize; t++)f(i.location + t, n.meshPerAttribute);\n                                        !0 !== r.isInstancedMesh && void 0 === o._maxInstanceCount && (o._maxInstanceCount = n.meshPerAttribute * n.count);\n                                    } else for(let t = 0; t < i.locationSize; t++)m(i.location + t);\n                                    t.bindBuffer(34962, c);\n                                    for(let t = 0; t < i.locationSize; t++)v(i.location + t, a / i.locationSize, h, e, l * u, (d + a / i.locationSize * t) * u);\n                                } else {\n                                    if (s.isInstancedBufferAttribute) {\n                                        for(let t = 0; t < i.locationSize; t++)f(i.location + t, s.meshPerAttribute);\n                                        !0 !== r.isInstancedMesh && void 0 === o._maxInstanceCount && (o._maxInstanceCount = s.meshPerAttribute * s.count);\n                                    } else for(let t = 0; t < i.locationSize; t++)m(i.location + t);\n                                    t.bindBuffer(34962, c);\n                                    for(let t = 0; t < i.locationSize; t++)v(i.location + t, a / i.locationSize, h, e, a * u, a / i.locationSize * t * u);\n                                }\n                            } else if (void 0 !== h) {\n                                const n = h[e];\n                                if (void 0 !== n) switch(n.length){\n                                    case 2:\n                                        t.vertexAttrib2fv(i.location, n);\n                                        break;\n                                    case 3:\n                                        t.vertexAttrib3fv(i.location, n);\n                                        break;\n                                    case 4:\n                                        t.vertexAttrib4fv(i.location, n);\n                                        break;\n                                    default:\n                                        t.vertexAttrib1fv(i.location, n);\n                                }\n                            }\n                        }\n                    }\n                    g();\n                }(r, l, u, y), null !== x && t.bindBuffer(34963, n.get(x).buffer));\n            },\n            reset: y,\n            resetDefaultState: x,\n            dispose: function() {\n                y();\n                for(const t in o){\n                    const e = o[t];\n                    for(const t in e){\n                        const n = e[t];\n                        for(const t in n)u(n[t].object), delete n[t];\n                        delete e[t];\n                    }\n                    delete o[t];\n                }\n            },\n            releaseStatesOfGeometry: function(t) {\n                if (void 0 === o[t.id]) return;\n                const e = o[t.id];\n                for(const t in e){\n                    const n = e[t];\n                    for(const t in n)u(n[t].object), delete n[t];\n                    delete e[t];\n                }\n                delete o[t.id];\n            },\n            releaseStatesOfProgram: function(t) {\n                for(const e in o){\n                    const n = o[e];\n                    if (void 0 === n[t.id]) continue;\n                    const i = n[t.id];\n                    for(const t in i)u(i[t].object), delete i[t];\n                    delete n[t.id];\n                }\n            },\n            initAttributes: p,\n            enableAttribute: m,\n            disableUnusedAttributes: g\n        };\n    }\n    function yi(t, e, n, i) {\n        const r = i.isWebGL2;\n        let s;\n        this.setMode = function(t) {\n            s = t;\n        }, this.render = function(e, i) {\n            t.drawArrays(s, e, i), n.update(i, s, 1);\n        }, this.renderInstances = function(i, a, o) {\n            if (0 === o) return;\n            let l, c;\n            if (r) l = t, c = \"drawArraysInstanced\";\n            else if (l = e.get(\"ANGLE_instanced_arrays\"), c = \"drawArraysInstancedANGLE\", null === l) return void console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n            l[c](s, i, a, o), n.update(a, s, o);\n        };\n    }\n    function xi(t, e, n) {\n        let i;\n        function r(e) {\n            if (\"highp\" === e) {\n                if (t.getShaderPrecisionFormat(35633, 36338).precision > 0 && t.getShaderPrecisionFormat(35632, 36338).precision > 0) return \"highp\";\n                e = \"mediump\";\n            }\n            return \"mediump\" === e && t.getShaderPrecisionFormat(35633, 36337).precision > 0 && t.getShaderPrecisionFormat(35632, 36337).precision > 0 ? \"mediump\" : \"lowp\";\n        }\n        const s = \"undefined\" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext || \"undefined\" != typeof WebGL2ComputeRenderingContext && t instanceof WebGL2ComputeRenderingContext;\n        let a = void 0 !== n.precision ? n.precision : \"highp\";\n        const o = r(a);\n        o !== a && (console.warn(\"THREE.WebGLRenderer:\", a, \"not supported, using\", o, \"instead.\"), a = o);\n        const l = s || e.has(\"WEBGL_draw_buffers\"), c = !0 === n.logarithmicDepthBuffer, h = t.getParameter(34930), u = t.getParameter(35660), d = t.getParameter(3379), p = t.getParameter(34076), m = t.getParameter(34921), f = t.getParameter(36347), g = t.getParameter(36348), v = t.getParameter(36349), y = u > 0, x = s || e.has(\"OES_texture_float\");\n        return {\n            isWebGL2: s,\n            drawBuffers: l,\n            getMaxAnisotropy: function() {\n                if (void 0 !== i) return i;\n                if (!0 === e.has(\"EXT_texture_filter_anisotropic\")) {\n                    const n = e.get(\"EXT_texture_filter_anisotropic\");\n                    i = t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n                } else i = 0;\n                return i;\n            },\n            getMaxPrecision: r,\n            precision: a,\n            logarithmicDepthBuffer: c,\n            maxTextures: h,\n            maxVertexTextures: u,\n            maxTextureSize: d,\n            maxCubemapSize: p,\n            maxAttributes: m,\n            maxVertexUniforms: f,\n            maxVaryings: g,\n            maxFragmentUniforms: v,\n            vertexTextures: y,\n            floatFragmentTextures: x,\n            floatVertexTextures: y && x,\n            maxSamples: s ? t.getParameter(36183) : 0\n        };\n    }\n    function _i(t) {\n        const e = this;\n        let n = null, i = 0, r = !1, s = !1;\n        const a = new ai, o = new xt, l = {\n            value: null,\n            needsUpdate: !1\n        };\n        function c() {\n            l.value !== n && (l.value = n, l.needsUpdate = i > 0), e.numPlanes = i, e.numIntersection = 0;\n        }\n        function h(t, n, i, r) {\n            const s = null !== t ? t.length : 0;\n            let c = null;\n            if (0 !== s) {\n                if (c = l.value, !0 !== r || null === c) {\n                    const e = i + 4 * s, r = n.matrixWorldInverse;\n                    o.getNormalMatrix(r), (null === c || c.length < e) && (c = new Float32Array(e));\n                    for(let e = 0, n = i; e !== s; ++e, n += 4)a.copy(t[e]).applyMatrix4(r, o), a.normal.toArray(c, n), c[n + 3] = a.constant;\n                }\n                l.value = c, l.needsUpdate = !0;\n            }\n            return e.numPlanes = s, e.numIntersection = 0, c;\n        }\n        this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(t, e, s) {\n            const a = 0 !== t.length || e || 0 !== i || r;\n            return r = e, n = h(t, s, 0), i = t.length, a;\n        }, this.beginShadows = function() {\n            s = !0, h(null);\n        }, this.endShadows = function() {\n            s = !1, c();\n        }, this.setState = function(e, a, o) {\n            const u = e.clippingPlanes, d = e.clipIntersection, p = e.clipShadows, m = t.get(e);\n            if (!r || null === u || 0 === u.length || s && !p) s ? h(null) : c();\n            else {\n                const t = s ? 0 : i, e = 4 * t;\n                let r = m.clippingState || null;\n                l.value = r, r = h(u, a, e, o);\n                for(let t = 0; t !== e; ++t)r[t] = n[t];\n                m.clippingState = r, this.numIntersection = d ? this.numPlanes : 0, this.numPlanes += t;\n            }\n        };\n    }\n    function Mi(t) {\n        let e = new WeakMap;\n        function n(t, e) {\n            return e === a ? t.mapping = r : e === o && (t.mapping = s), t;\n        }\n        function i(t) {\n            const n = t.target;\n            n.removeEventListener(\"dispose\", i);\n            const r = e.get(n);\n            void 0 !== r && (e.delete(n), r.dispose());\n        }\n        return {\n            get: function(r) {\n                if (r && r.isTexture && !1 === r.isRenderTargetTexture) {\n                    const s = r.mapping;\n                    if (s === a || s === o) {\n                        if (e.has(r)) return n(e.get(r).texture, r.mapping);\n                        {\n                            const s = r.image;\n                            if (s && s.height > 0) {\n                                const a = t.getRenderTarget(), o = new ni(s.height / 2);\n                                return o.fromEquirectangularTexture(t, r), e.set(r, o), t.setRenderTarget(a), r.addEventListener(\"dispose\", i), n(o.texture, r.mapping);\n                            }\n                            return null;\n                        }\n                    }\n                }\n                return r;\n            },\n            dispose: function() {\n                e = new WeakMap;\n            }\n        };\n    }\n    fi.physical = {\n        uniforms: Yn([\n            fi.standard.uniforms,\n            {\n                clearcoat: {\n                    value: 0\n                },\n                clearcoatMap: {\n                    value: null\n                },\n                clearcoatRoughness: {\n                    value: 0\n                },\n                clearcoatRoughnessMap: {\n                    value: null\n                },\n                clearcoatNormalScale: {\n                    value: new yt(1, 1)\n                },\n                clearcoatNormalMap: {\n                    value: null\n                },\n                sheen: {\n                    value: 0\n                },\n                sheenColor: {\n                    value: new rn(0)\n                },\n                sheenColorMap: {\n                    value: null\n                },\n                sheenRoughness: {\n                    value: 0\n                },\n                sheenRoughnessMap: {\n                    value: null\n                },\n                transmission: {\n                    value: 0\n                },\n                transmissionMap: {\n                    value: null\n                },\n                transmissionSamplerSize: {\n                    value: new yt\n                },\n                transmissionSamplerMap: {\n                    value: null\n                },\n                thickness: {\n                    value: 0\n                },\n                thicknessMap: {\n                    value: null\n                },\n                attenuationDistance: {\n                    value: 0\n                },\n                attenuationColor: {\n                    value: new rn(0)\n                },\n                specularIntensity: {\n                    value: 0\n                },\n                specularIntensityMap: {\n                    value: null\n                },\n                specularColor: {\n                    value: new rn(1, 1, 1)\n                },\n                specularColorMap: {\n                    value: null\n                }\n            }\n        ]),\n        vertexShader: pi.meshphysical_vert,\n        fragmentShader: pi.meshphysical_frag\n    };\n    class bi extends Qn {\n        constructor(t = -1, e = 1, n = 1, i = -1, r = .1, s = 2e3){\n            super(), this.type = \"OrthographicCamera\", this.zoom = 1, this.view = null, this.left = t, this.right = e, this.top = n, this.bottom = i, this.near = r, this.far = s, this.updateProjectionMatrix();\n        }\n        copy(t, e) {\n            return super.copy(t, e), this.left = t.left, this.right = t.right, this.top = t.top, this.bottom = t.bottom, this.near = t.near, this.far = t.far, this.zoom = t.zoom, this.view = null === t.view ? null : Object.assign({}, t.view), this;\n        }\n        setViewOffset(t, e, n, i, r, s) {\n            null === this.view && (this.view = {\n                enabled: !0,\n                fullWidth: 1,\n                fullHeight: 1,\n                offsetX: 0,\n                offsetY: 0,\n                width: 1,\n                height: 1\n            }), this.view.enabled = !0, this.view.fullWidth = t, this.view.fullHeight = e, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = s, this.updateProjectionMatrix();\n        }\n        clearViewOffset() {\n            null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix();\n        }\n        updateProjectionMatrix() {\n            const t = (this.right - this.left) / (2 * this.zoom), e = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2;\n            let r = n - t, s = n + t, a = i + e, o = i - e;\n            if (null !== this.view && this.view.enabled) {\n                const t = (this.right - this.left) / this.view.fullWidth / this.zoom, e = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n                r += t * this.view.offsetX, s = r + t * this.view.width, a -= e * this.view.offsetY, o = a - e * this.view.height;\n            }\n            this.projectionMatrix.makeOrthographic(r, s, a, o, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            return e.object.zoom = this.zoom, e.object.left = this.left, e.object.right = this.right, e.object.top = this.top, e.object.bottom = this.bottom, e.object.near = this.near, e.object.far = this.far, null !== this.view && (e.object.view = Object.assign({}, this.view)), e;\n        }\n    }\n    bi.prototype.isOrthographicCamera = !0;\n    class wi extends Zn {\n        constructor(t){\n            super(t), this.type = \"RawShaderMaterial\";\n        }\n    }\n    wi.prototype.isRawShaderMaterial = !0;\n    const Si = Math.pow(2, 8), Ti = [\n        .125,\n        .215,\n        .35,\n        .446,\n        .526,\n        .582\n    ], Ei = 5 + Ti.length, Ai = 20, Li = {\n        [X]: 0,\n        [Y]: 1,\n        [Z]: 2,\n        [Q]: 3,\n        [K]: 4,\n        [$]: 5,\n        [J]: 6\n    }, Ri = new bi, { _lodPlanes: Ci, _sizeLods: Pi, _sigmas: Ii } = Hi(), Di = new rn;\n    let Ni = null;\n    const zi = (1 + Math.sqrt(5)) / 2, Bi = 1 / zi, Fi = [\n        new zt(1, 1, 1),\n        new zt(-1, 1, 1),\n        new zt(1, 1, -1),\n        new zt(-1, 1, -1),\n        new zt(0, zi, Bi),\n        new zt(0, zi, -Bi),\n        new zt(Bi, 0, zi),\n        new zt(-Bi, 0, zi),\n        new zt(zi, Bi, 0),\n        new zt(-zi, Bi, 0)\n    ];\n    class Oi {\n        constructor(t){\n            this._renderer = t, this._pingPongRenderTarget = null, this._blurMaterial = function(t) {\n                const e = new Float32Array(t), n = new zt(0, 1, 0);\n                return new wi({\n                    name: \"SphericalGaussianBlur\",\n                    defines: {\n                        n: t\n                    },\n                    uniforms: {\n                        envMap: {\n                            value: null\n                        },\n                        samples: {\n                            value: 1\n                        },\n                        weights: {\n                            value: e\n                        },\n                        latitudinal: {\n                            value: !1\n                        },\n                        dTheta: {\n                            value: 0\n                        },\n                        mipInt: {\n                            value: 0\n                        },\n                        poleAxis: {\n                            value: n\n                        },\n                        inputEncoding: {\n                            value: Li[3e3]\n                        },\n                        outputEncoding: {\n                            value: Li[3e3]\n                        }\n                    },\n                    vertexShader: ji(),\n                    fragmentShader: `\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t${qi()}\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,\n                    blending: 0,\n                    depthTest: !1,\n                    depthWrite: !1\n                });\n            }(Ai), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial);\n        }\n        fromScene(t, e = 0, n = .1, i = 100) {\n            Ni = this._renderer.getRenderTarget();\n            const r = this._allocateTargets();\n            return this._sceneToCubeUV(t, n, i, r), e > 0 && this._blur(r, 0, 0, e), this._applyPMREM(r), this._cleanup(r), r;\n        }\n        fromEquirectangular(t) {\n            return this._fromTexture(t);\n        }\n        fromCubemap(t) {\n            return this._fromTexture(t);\n        }\n        compileCubemapShader() {\n            null === this._cubemapShader && (this._cubemapShader = Wi(), this._compileMaterial(this._cubemapShader));\n        }\n        compileEquirectangularShader() {\n            null === this._equirectShader && (this._equirectShader = Vi(), this._compileMaterial(this._equirectShader));\n        }\n        dispose() {\n            this._blurMaterial.dispose(), null !== this._cubemapShader && this._cubemapShader.dispose(), null !== this._equirectShader && this._equirectShader.dispose();\n            for(let t = 0; t < Ci.length; t++)Ci[t].dispose();\n        }\n        _cleanup(t) {\n            this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Ni), t.scissorTest = !1, ki(t, 0, 0, t.width, t.height);\n        }\n        _fromTexture(t) {\n            Ni = this._renderer.getRenderTarget();\n            const e = this._allocateTargets(t);\n            return this._textureToCubeUV(t, e), this._applyPMREM(e), this._cleanup(e), e;\n        }\n        _allocateTargets(t) {\n            const e = {\n                magFilter: p,\n                minFilter: p,\n                generateMipmaps: !1,\n                type: x,\n                format: 1023,\n                encoding: Ui(t) ? t.encoding : Z,\n                depthBuffer: !1\n            }, n = Gi(e);\n            return n.depthBuffer = !t, this._pingPongRenderTarget = Gi(e), n;\n        }\n        _compileMaterial(t) {\n            const e = new Wn(Ci[0], t);\n            this._renderer.compile(e, Ri);\n        }\n        _sceneToCubeUV(t, e, n, i) {\n            const r = new Kn(90, 1, e, n), s = [\n                1,\n                -1,\n                1,\n                1,\n                1,\n                1\n            ], a = [\n                1,\n                1,\n                1,\n                -1,\n                -1,\n                -1\n            ], o = this._renderer, l = o.autoClear, c = o.outputEncoding, h = o.toneMapping;\n            o.getClearColor(Di), o.toneMapping = 0, o.outputEncoding = X, o.autoClear = !1;\n            const u = new sn({\n                name: \"PMREM.Background\",\n                side: 1,\n                depthWrite: !1,\n                depthTest: !1\n            }), d = new Wn(new qn, u);\n            let p = !1;\n            const m = t.background;\n            m ? m.isColor && (u.color.copy(m), t.background = null, p = !0) : (u.color.copy(Di), p = !0);\n            for(let e = 0; e < 6; e++){\n                const n = e % 3;\n                0 == n ? (r.up.set(0, s[e], 0), r.lookAt(a[e], 0, 0)) : 1 == n ? (r.up.set(0, 0, s[e]), r.lookAt(0, a[e], 0)) : (r.up.set(0, s[e], 0), r.lookAt(0, 0, a[e])), ki(i, n * Si, e > 2 ? Si : 0, Si, Si), o.setRenderTarget(i), p && o.render(d, r), o.render(t, r);\n            }\n            d.geometry.dispose(), d.material.dispose(), o.toneMapping = h, o.outputEncoding = c, o.autoClear = l, t.background = m;\n        }\n        _setEncoding(t, e) {\n            !0 === this._renderer.capabilities.isWebGL2 && e.format === E && e.type === x && e.encoding === Y ? t.value = Li[3e3] : t.value = Li[e.encoding];\n        }\n        _textureToCubeUV(t, e) {\n            const n = this._renderer, i = t.mapping === r || t.mapping === s;\n            i ? null == this._cubemapShader && (this._cubemapShader = Wi()) : null == this._equirectShader && (this._equirectShader = Vi());\n            const a = i ? this._cubemapShader : this._equirectShader, o = new Wn(Ci[0], a), l = a.uniforms;\n            l.envMap.value = t, i || l.texelSize.value.set(1 / t.image.width, 1 / t.image.height), this._setEncoding(l.inputEncoding, t), this._setEncoding(l.outputEncoding, e.texture), ki(e, 0, 0, 3 * Si, 2 * Si), n.setRenderTarget(e), n.render(o, Ri);\n        }\n        _applyPMREM(t) {\n            const e = this._renderer, n = e.autoClear;\n            e.autoClear = !1;\n            for(let e = 1; e < Ei; e++){\n                const n = Math.sqrt(Ii[e] * Ii[e] - Ii[e - 1] * Ii[e - 1]), i = Fi[(e - 1) % Fi.length];\n                this._blur(t, e - 1, e, n, i);\n            }\n            e.autoClear = n;\n        }\n        _blur(t, e, n, i, r) {\n            const s = this._pingPongRenderTarget;\n            this._halfBlur(t, s, e, n, i, \"latitudinal\", r), this._halfBlur(s, t, n, n, i, \"longitudinal\", r);\n        }\n        _halfBlur(t, e, n, i, r, s, a) {\n            const o = this._renderer, l = this._blurMaterial;\n            \"latitudinal\" !== s && \"longitudinal\" !== s && console.error(\"blur direction must be either latitudinal or longitudinal!\");\n            const c = new Wn(Ci[i], l), h = l.uniforms, u = Pi[n] - 1, d = isFinite(r) ? Math.PI / (2 * u) : 2 * Math.PI / 39, p = r / d, m = isFinite(r) ? 1 + Math.floor(3 * p) : Ai;\n            m > Ai && console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);\n            const f = [];\n            let g = 0;\n            for(let t = 0; t < Ai; ++t){\n                const e = t / p, n = Math.exp(-e * e / 2);\n                f.push(n), 0 == t ? g += n : t < m && (g += 2 * n);\n            }\n            for(let t = 0; t < f.length; t++)f[t] = f[t] / g;\n            h.envMap.value = t.texture, h.samples.value = m, h.weights.value = f, h.latitudinal.value = \"latitudinal\" === s, a && (h.poleAxis.value = a), h.dTheta.value = d, h.mipInt.value = 8 - n, this._setEncoding(h.inputEncoding, t.texture), this._setEncoding(h.outputEncoding, t.texture);\n            const v = Pi[i];\n            ki(e, 3 * Math.max(0, Si - 2 * v), (0 === i ? 0 : 2 * Si) + 2 * v * (i > 4 ? i - 8 + 4 : 0), 3 * v, 2 * v), o.setRenderTarget(e), o.render(c, Ri);\n        }\n    }\n    function Ui(t) {\n        return void 0 !== t && t.type === x && (t.encoding === X || t.encoding === Y || t.encoding === J);\n    }\n    function Hi() {\n        const t = [], e = [], n = [];\n        let i = 8;\n        for(let r = 0; r < Ei; r++){\n            const s = Math.pow(2, i);\n            e.push(s);\n            let a = 1 / s;\n            r > 4 ? a = Ti[r - 8 + 4 - 1] : 0 == r && (a = 0), n.push(a);\n            const o = 1 / (s - 1), l = -o / 2, c = 1 + o / 2, h = [\n                l,\n                l,\n                c,\n                l,\n                c,\n                c,\n                l,\n                l,\n                c,\n                c,\n                l,\n                c\n            ], u = 6, d = 6, p = 3, m = 2, f = 1, g = new Float32Array(p * d * u), v = new Float32Array(m * d * u), y = new Float32Array(f * d * u);\n            for(let t = 0; t < u; t++){\n                const e = t % 3 * 2 / 3 - 1, n = t > 2 ? 0 : -1, i = [\n                    e,\n                    n,\n                    0,\n                    e + 2 / 3,\n                    n,\n                    0,\n                    e + 2 / 3,\n                    n + 1,\n                    0,\n                    e,\n                    n,\n                    0,\n                    e + 2 / 3,\n                    n + 1,\n                    0,\n                    e,\n                    n + 1,\n                    0\n                ];\n                g.set(i, p * d * t), v.set(h, m * d * t);\n                const r = [\n                    t,\n                    t,\n                    t,\n                    t,\n                    t,\n                    t\n                ];\n                y.set(r, f * d * t);\n            }\n            const x = new En;\n            x.setAttribute(\"position\", new ln(g, p)), x.setAttribute(\"uv\", new ln(v, m)), x.setAttribute(\"faceIndex\", new ln(y, f)), t.push(x), i > 4 && i--;\n        }\n        return {\n            _lodPlanes: t,\n            _sizeLods: e,\n            _sigmas: n\n        };\n    }\n    function Gi(t) {\n        const e = new Pt(3 * Si, 3 * Si, t);\n        return e.texture.mapping = l, e.texture.name = \"PMREM.cubeUv\", e.scissorTest = !0, e;\n    }\n    function ki(t, e, n, i, r) {\n        t.viewport.set(e, n, i, r), t.scissor.set(e, n, i, r);\n    }\n    function Vi() {\n        const t = new yt(1, 1);\n        return new wi({\n            name: \"EquirectangularToCubeUV\",\n            uniforms: {\n                envMap: {\n                    value: null\n                },\n                texelSize: {\n                    value: t\n                },\n                inputEncoding: {\n                    value: Li[3e3]\n                },\n                outputEncoding: {\n                    value: Li[3e3]\n                }\n            },\n            vertexShader: ji(),\n            fragmentShader: `\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform vec2 texelSize;\\n\\n\\t\\t\\t${qi()}\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tvec2 f = fract( uv / texelSize - 0.5 );\\n\\t\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\t\\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x += texelSize.x;\\n\\t\\t\\t\\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.y += texelSize.y;\\n\\t\\t\\t\\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x -= texelSize.x;\\n\\t\\t\\t\\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\n\\t\\t\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\t\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\t\\t\\tgl_FragColor.rgb = mix( tm, bm, f.y );\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,\n            blending: 0,\n            depthTest: !1,\n            depthWrite: !1\n        });\n    }\n    function Wi() {\n        return new wi({\n            name: \"CubemapToCubeUV\",\n            uniforms: {\n                envMap: {\n                    value: null\n                },\n                inputEncoding: {\n                    value: Li[3e3]\n                },\n                outputEncoding: {\n                    value: Li[3e3]\n                }\n            },\n            vertexShader: ji(),\n            fragmentShader: `\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\t${qi()}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,\n            blending: 0,\n            depthTest: !1,\n            depthWrite: !1\n        });\n    }\n    function ji() {\n        return \"\\n\\n\t\tprecision mediump float;\\n\t\tprecision mediump int;\\n\\n\t\tattribute vec3 position;\\n\t\tattribute vec2 uv;\\n\t\tattribute float faceIndex;\\n\\n\t\tvarying vec3 vOutputDirection;\\n\\n\t\t// RH coordinate system; PMREM face-indexing convention\\n\t\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\t\t\tuv = 2.0 * uv - 1.0;\\n\\n\t\t\tvec3 direction = vec3( uv, 1.0 );\\n\\n\t\t\tif ( face == 0.0 ) {\\n\\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\t\t\t} else if ( face == 1.0 ) {\\n\\n\t\t\t\tdirection = direction.xzy;\\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\t\t\t} else if ( face == 2.0 ) {\\n\\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\t\t\t} else if ( face == 3.0 ) {\\n\\n\t\t\t\tdirection = direction.zyx;\\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\t\t\t} else if ( face == 4.0 ) {\\n\\n\t\t\t\tdirection = direction.xzy;\\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\t\t\t} else if ( face == 5.0 ) {\\n\\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\t\t\t}\\n\\n\t\t\treturn direction;\\n\\n\t\t}\\n\\n\t\tvoid main() {\\n\\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\\n\t\t\tgl_Position = vec4( position, 1.0 );\\n\\n\t\t}\\n\t\";\n    }\n    function qi() {\n        return \"\\n\\n\t\tuniform int inputEncoding;\\n\t\tuniform int outputEncoding;\\n\\n\t\t#include <encodings_pars_fragment>\\n\\n\t\tvec4 inputTexelToLinear( vec4 value ) {\\n\\n\t\t\tif ( inputEncoding == 0 ) {\\n\\n\t\t\t\treturn value;\\n\\n\t\t\t} else if ( inputEncoding == 1 ) {\\n\\n\t\t\t\treturn sRGBToLinear( value );\\n\\n\t\t\t} else if ( inputEncoding == 2 ) {\\n\\n\t\t\t\treturn RGBEToLinear( value );\\n\\n\t\t\t} else if ( inputEncoding == 3 ) {\\n\\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\\n\\n\t\t\t} else if ( inputEncoding == 4 ) {\\n\\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\\n\\n\t\t\t} else if ( inputEncoding == 5 ) {\\n\\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\\n\\n\t\t\t} else {\\n\\n\t\t\t\treturn GammaToLinear( value, 2.2 );\\n\\n\t\t\t}\\n\\n\t\t}\\n\\n\t\tvec4 linearToOutputTexel( vec4 value ) {\\n\\n\t\t\tif ( outputEncoding == 0 ) {\\n\\n\t\t\t\treturn value;\\n\\n\t\t\t} else if ( outputEncoding == 1 ) {\\n\\n\t\t\t\treturn LinearTosRGB( value );\\n\\n\t\t\t} else if ( outputEncoding == 2 ) {\\n\\n\t\t\t\treturn LinearToRGBE( value );\\n\\n\t\t\t} else if ( outputEncoding == 3 ) {\\n\\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\\n\\n\t\t\t} else if ( outputEncoding == 4 ) {\\n\\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\\n\\n\t\t\t} else if ( outputEncoding == 5 ) {\\n\\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\\n\\n\t\t\t} else {\\n\\n\t\t\t\treturn LinearToGamma( value, 2.2 );\\n\\n\t\t\t}\\n\\n\t\t}\\n\\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\\n\\n\t\t\treturn inputTexelToLinear( color );\\n\\n\t\t}\\n\t\";\n    }\n    function Xi(t) {\n        let e = new WeakMap, n = null;\n        function i(t) {\n            const n = t.target;\n            n.removeEventListener(\"dispose\", i);\n            const r = e.get(n);\n            void 0 !== r && (e.delete(n), r.dispose());\n        }\n        return {\n            get: function(l) {\n                if (l && l.isTexture && !1 === l.isRenderTargetTexture) {\n                    const c = l.mapping, h = c === a || c === o, u = c === r || c === s;\n                    if (h || u) {\n                        if (e.has(l)) return e.get(l).texture;\n                        {\n                            const r = l.image;\n                            if (h && r && r.height > 0 || u && r && function(t) {\n                                let e = 0;\n                                const n = 6;\n                                for(let i = 0; i < n; i++)void 0 !== t[i] && e++;\n                                return e === n;\n                            }(r)) {\n                                const r = t.getRenderTarget();\n                                null === n && (n = new Oi(t));\n                                const s = h ? n.fromEquirectangular(l) : n.fromCubemap(l);\n                                return e.set(l, s), t.setRenderTarget(r), l.addEventListener(\"dispose\", i), s.texture;\n                            }\n                            return null;\n                        }\n                    }\n                }\n                return l;\n            },\n            dispose: function() {\n                e = new WeakMap, null !== n && (n.dispose(), n = null);\n            }\n        };\n    }\n    function Yi(t) {\n        const e = {};\n        function n(n) {\n            if (void 0 !== e[n]) return e[n];\n            let i;\n            switch(n){\n                case \"WEBGL_depth_texture\":\n                    i = t.getExtension(\"WEBGL_depth_texture\") || t.getExtension(\"MOZ_WEBGL_depth_texture\") || t.getExtension(\"WEBKIT_WEBGL_depth_texture\");\n                    break;\n                case \"EXT_texture_filter_anisotropic\":\n                    i = t.getExtension(\"EXT_texture_filter_anisotropic\") || t.getExtension(\"MOZ_EXT_texture_filter_anisotropic\") || t.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");\n                    break;\n                case \"WEBGL_compressed_texture_s3tc\":\n                    i = t.getExtension(\"WEBGL_compressed_texture_s3tc\") || t.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\") || t.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\n                    break;\n                case \"WEBGL_compressed_texture_pvrtc\":\n                    i = t.getExtension(\"WEBGL_compressed_texture_pvrtc\") || t.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");\n                    break;\n                default:\n                    i = t.getExtension(n);\n            }\n            return e[n] = i, i;\n        }\n        return {\n            has: function(t) {\n                return null !== n(t);\n            },\n            init: function(t) {\n                t.isWebGL2 ? n(\"EXT_color_buffer_float\") : (n(\"WEBGL_depth_texture\"), n(\"OES_texture_float\"), n(\"OES_texture_half_float\"), n(\"OES_texture_half_float_linear\"), n(\"OES_standard_derivatives\"), n(\"OES_element_index_uint\"), n(\"OES_vertex_array_object\"), n(\"ANGLE_instanced_arrays\")), n(\"OES_texture_float_linear\"), n(\"EXT_color_buffer_half_float\");\n            },\n            get: function(t) {\n                const e = n(t);\n                return null === e && console.warn(\"THREE.WebGLRenderer: \" + t + \" extension not supported.\"), e;\n            }\n        };\n    }\n    function Ji(t, e, n, i) {\n        const r = {}, s = new WeakMap;\n        function a(t) {\n            const o = t.target;\n            null !== o.index && e.remove(o.index);\n            for(const t in o.attributes)e.remove(o.attributes[t]);\n            o.removeEventListener(\"dispose\", a), delete r[o.id];\n            const l = s.get(o);\n            l && (e.remove(l), s.delete(o)), i.releaseStatesOfGeometry(o), !0 === o.isInstancedBufferGeometry && delete o._maxInstanceCount, n.memory.geometries--;\n        }\n        function o(t) {\n            const n = [], i = t.index, r = t.attributes.position;\n            let a = 0;\n            if (null !== i) {\n                const t = i.array;\n                a = i.version;\n                for(let e = 0, i = t.length; e < i; e += 3){\n                    const i = t[e + 0], r = t[e + 1], s = t[e + 2];\n                    n.push(i, r, r, s, s, i);\n                }\n            } else {\n                const t = r.array;\n                a = r.version;\n                for(let e = 0, i = t.length / 3 - 1; e < i; e += 3){\n                    const t = e + 0, i = e + 1, r = e + 2;\n                    n.push(t, i, i, r, r, t);\n                }\n            }\n            const o = new (_t(n) > 65535 ? fn : pn)(n, 1);\n            o.version = a;\n            const l = s.get(t);\n            l && e.remove(l), s.set(t, o);\n        }\n        return {\n            get: function(t, e) {\n                return !0 === r[e.id] || (e.addEventListener(\"dispose\", a), r[e.id] = !0, n.memory.geometries++), e;\n            },\n            update: function(t) {\n                const n = t.attributes;\n                for(const t in n)e.update(n[t], 34962);\n                const i = t.morphAttributes;\n                for(const t in i){\n                    const n = i[t];\n                    for(let t = 0, i = n.length; t < i; t++)e.update(n[t], 34962);\n                }\n            },\n            getWireframeAttribute: function(t) {\n                const e = s.get(t);\n                if (e) {\n                    const n = t.index;\n                    null !== n && e.version < n.version && o(t);\n                } else o(t);\n                return s.get(t);\n            }\n        };\n    }\n    function Zi(t, e, n, i) {\n        const r = i.isWebGL2;\n        let s, a, o;\n        this.setMode = function(t) {\n            s = t;\n        }, this.setIndex = function(t) {\n            a = t.type, o = t.bytesPerElement;\n        }, this.render = function(e, i) {\n            t.drawElements(s, i, a, e * o), n.update(i, s, 1);\n        }, this.renderInstances = function(i, l, c) {\n            if (0 === c) return;\n            let h, u;\n            if (r) h = t, u = \"drawElementsInstanced\";\n            else if (h = e.get(\"ANGLE_instanced_arrays\"), u = \"drawElementsInstancedANGLE\", null === h) return void console.error(\"THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n            h[u](s, l, a, i * o, c), n.update(l, s, c);\n        };\n    }\n    function Qi(t) {\n        const e = {\n            frame: 0,\n            calls: 0,\n            triangles: 0,\n            points: 0,\n            lines: 0\n        };\n        return {\n            memory: {\n                geometries: 0,\n                textures: 0\n            },\n            render: e,\n            programs: null,\n            autoReset: !0,\n            reset: function() {\n                e.frame++, e.calls = 0, e.triangles = 0, e.points = 0, e.lines = 0;\n            },\n            update: function(t, n, i) {\n                switch(e.calls++, n){\n                    case 4:\n                        e.triangles += i * (t / 3);\n                        break;\n                    case 1:\n                        e.lines += i * (t / 2);\n                        break;\n                    case 3:\n                        e.lines += i * (t - 1);\n                        break;\n                    case 2:\n                        e.lines += i * t;\n                        break;\n                    case 0:\n                        e.points += i * t;\n                        break;\n                    default:\n                        console.error(\"THREE.WebGLInfo: Unknown draw mode:\", n);\n                }\n            }\n        };\n    }\n    class Ki extends Lt {\n        constructor(t = null, e = 1, n = 1, i = 1){\n            super(null), this.image = {\n                data: t,\n                width: e,\n                height: n,\n                depth: i\n            }, this.magFilter = p, this.minFilter = p, this.wrapR = u, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1, this.needsUpdate = !0;\n        }\n    }\n    function $i(t, e) {\n        return t[0] - e[0];\n    }\n    function tr(t, e) {\n        return Math.abs(e[1]) - Math.abs(t[1]);\n    }\n    function er(t, e) {\n        let n = 1;\n        const i = e.isInterleavedBufferAttribute ? e.data.array : e.array;\n        i instanceof Int8Array ? n = 127 : i instanceof Int16Array ? n = 32767 : i instanceof Int32Array ? n = 2147483647 : console.error(\"THREE.WebGLMorphtargets: Unsupported morph attribute data type: \", i), t.divideScalar(n);\n    }\n    function nr(t, e, n) {\n        const i = {}, r = new Float32Array(8), s = new WeakMap, a = new zt, o = [];\n        for(let t = 0; t < 8; t++)o[t] = [\n            t,\n            0\n        ];\n        return {\n            update: function(l, c, h, u) {\n                const d = l.morphTargetInfluences;\n                if (!0 === e.isWebGL2) {\n                    const i = c.morphAttributes.position.length;\n                    let r = s.get(c);\n                    if (void 0 === r || r.count !== i) {\n                        void 0 !== r && r.texture.dispose();\n                        const t = void 0 !== c.morphAttributes.normal, n = c.morphAttributes.position, o = c.morphAttributes.normal || [], l = !0 === t ? 2 : 1;\n                        let h = c.attributes.position.count * l, u = 1;\n                        h > e.maxTextureSize && (u = Math.ceil(h / e.maxTextureSize), h = e.maxTextureSize);\n                        const d = new Float32Array(h * u * 4 * i), p = new Ki(d, h, u, i);\n                        p.format = E, p.type = b;\n                        const m = 4 * l;\n                        for(let e = 0; e < i; e++){\n                            const i = n[e], r = o[e], s = h * u * 4 * e;\n                            for(let e = 0; e < i.count; e++){\n                                a.fromBufferAttribute(i, e), !0 === i.normalized && er(a, i);\n                                const n = e * m;\n                                d[s + n + 0] = a.x, d[s + n + 1] = a.y, d[s + n + 2] = a.z, d[s + n + 3] = 0, !0 === t && (a.fromBufferAttribute(r, e), !0 === r.normalized && er(a, r), d[s + n + 4] = a.x, d[s + n + 5] = a.y, d[s + n + 6] = a.z, d[s + n + 7] = 0);\n                            }\n                        }\n                        r = {\n                            count: i,\n                            texture: p,\n                            size: new yt(h, u)\n                        }, s.set(c, r);\n                    }\n                    let o = 0;\n                    for(let t = 0; t < d.length; t++)o += d[t];\n                    const l = c.morphTargetsRelative ? 1 : 1 - o;\n                    u.getUniforms().setValue(t, \"morphTargetBaseInfluence\", l), u.getUniforms().setValue(t, \"morphTargetInfluences\", d), u.getUniforms().setValue(t, \"morphTargetsTexture\", r.texture, n), u.getUniforms().setValue(t, \"morphTargetsTextureSize\", r.size);\n                } else {\n                    const e = void 0 === d ? 0 : d.length;\n                    let n = i[c.id];\n                    if (void 0 === n || n.length !== e) {\n                        n = [];\n                        for(let t = 0; t < e; t++)n[t] = [\n                            t,\n                            0\n                        ];\n                        i[c.id] = n;\n                    }\n                    for(let t = 0; t < e; t++){\n                        const e = n[t];\n                        e[0] = t, e[1] = d[t];\n                    }\n                    n.sort(tr);\n                    for(let t = 0; t < 8; t++)t < e && n[t][1] ? (o[t][0] = n[t][0], o[t][1] = n[t][1]) : (o[t][0] = Number.MAX_SAFE_INTEGER, o[t][1] = 0);\n                    o.sort($i);\n                    const s = c.morphAttributes.position, a = c.morphAttributes.normal;\n                    let l = 0;\n                    for(let t = 0; t < 8; t++){\n                        const e = o[t], n = e[0], i = e[1];\n                        n !== Number.MAX_SAFE_INTEGER && i ? (s && c.getAttribute(\"morphTarget\" + t) !== s[n] && c.setAttribute(\"morphTarget\" + t, s[n]), a && c.getAttribute(\"morphNormal\" + t) !== a[n] && c.setAttribute(\"morphNormal\" + t, a[n]), r[t] = i, l += i) : (s && !0 === c.hasAttribute(\"morphTarget\" + t) && c.deleteAttribute(\"morphTarget\" + t), a && !0 === c.hasAttribute(\"morphNormal\" + t) && c.deleteAttribute(\"morphNormal\" + t), r[t] = 0);\n                    }\n                    const h = c.morphTargetsRelative ? 1 : 1 - l;\n                    u.getUniforms().setValue(t, \"morphTargetBaseInfluence\", h), u.getUniforms().setValue(t, \"morphTargetInfluences\", r);\n                }\n            }\n        };\n    }\n    function ir(t, e, n, i) {\n        let r = new WeakMap;\n        function s(t) {\n            const e = t.target;\n            e.removeEventListener(\"dispose\", s), n.remove(e.instanceMatrix), null !== e.instanceColor && n.remove(e.instanceColor);\n        }\n        return {\n            update: function(t) {\n                const a = i.render.frame, o = t.geometry, l = e.get(t, o);\n                return r.get(l) !== a && (e.update(l), r.set(l, a)), t.isInstancedMesh && (!1 === t.hasEventListener(\"dispose\", s) && t.addEventListener(\"dispose\", s), n.update(t.instanceMatrix, 34962), null !== t.instanceColor && n.update(t.instanceColor, 34962)), l;\n            },\n            dispose: function() {\n                r = new WeakMap;\n            }\n        };\n    }\n    Ki.prototype.isDataTexture2DArray = !0;\n    class rr extends Lt {\n        constructor(t = null, e = 1, n = 1, i = 1){\n            super(null), this.image = {\n                data: t,\n                width: e,\n                height: n,\n                depth: i\n            }, this.magFilter = p, this.minFilter = p, this.wrapR = u, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1, this.needsUpdate = !0;\n        }\n    }\n    rr.prototype.isDataTexture3D = !0;\n    const sr = new Lt, ar = new Ki, or = new rr, lr = new ei, cr = [], hr = [], ur = new Float32Array(16), dr = new Float32Array(9), pr = new Float32Array(4);\n    function mr(t, e, n) {\n        const i = t[0];\n        if (i <= 0 || i > 0) return t;\n        const r = e * n;\n        let s = cr[r];\n        if (void 0 === s && (s = new Float32Array(r), cr[r] = s), 0 !== e) {\n            i.toArray(s, 0);\n            for(let i = 1, r = 0; i !== e; ++i)r += n, t[i].toArray(s, r);\n        }\n        return s;\n    }\n    function fr(t, e) {\n        if (t.length !== e.length) return !1;\n        for(let n = 0, i = t.length; n < i; n++)if (t[n] !== e[n]) return !1;\n        return !0;\n    }\n    function gr(t, e) {\n        for(let n = 0, i = e.length; n < i; n++)t[n] = e[n];\n    }\n    function vr(t, e) {\n        let n = hr[e];\n        void 0 === n && (n = new Int32Array(e), hr[e] = n);\n        for(let i = 0; i !== e; ++i)n[i] = t.allocateTextureUnit();\n        return n;\n    }\n    function yr(t, e) {\n        const n = this.cache;\n        n[0] !== e && (t.uniform1f(this.addr, e), n[0] = e);\n    }\n    function xr(t, e) {\n        const n = this.cache;\n        if (void 0 !== e.x) n[0] === e.x && n[1] === e.y || (t.uniform2f(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);\n        else {\n            if (fr(n, e)) return;\n            t.uniform2fv(this.addr, e), gr(n, e);\n        }\n    }\n    function _r(t, e) {\n        const n = this.cache;\n        if (void 0 !== e.x) n[0] === e.x && n[1] === e.y && n[2] === e.z || (t.uniform3f(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);\n        else if (void 0 !== e.r) n[0] === e.r && n[1] === e.g && n[2] === e.b || (t.uniform3f(this.addr, e.r, e.g, e.b), n[0] = e.r, n[1] = e.g, n[2] = e.b);\n        else {\n            if (fr(n, e)) return;\n            t.uniform3fv(this.addr, e), gr(n, e);\n        }\n    }\n    function Mr(t, e) {\n        const n = this.cache;\n        if (void 0 !== e.x) n[0] === e.x && n[1] === e.y && n[2] === e.z && n[3] === e.w || (t.uniform4f(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);\n        else {\n            if (fr(n, e)) return;\n            t.uniform4fv(this.addr, e), gr(n, e);\n        }\n    }\n    function br(t, e) {\n        const n = this.cache, i = e.elements;\n        if (void 0 === i) {\n            if (fr(n, e)) return;\n            t.uniformMatrix2fv(this.addr, !1, e), gr(n, e);\n        } else {\n            if (fr(n, i)) return;\n            pr.set(i), t.uniformMatrix2fv(this.addr, !1, pr), gr(n, i);\n        }\n    }\n    function wr(t, e) {\n        const n = this.cache, i = e.elements;\n        if (void 0 === i) {\n            if (fr(n, e)) return;\n            t.uniformMatrix3fv(this.addr, !1, e), gr(n, e);\n        } else {\n            if (fr(n, i)) return;\n            dr.set(i), t.uniformMatrix3fv(this.addr, !1, dr), gr(n, i);\n        }\n    }\n    function Sr(t, e) {\n        const n = this.cache, i = e.elements;\n        if (void 0 === i) {\n            if (fr(n, e)) return;\n            t.uniformMatrix4fv(this.addr, !1, e), gr(n, e);\n        } else {\n            if (fr(n, i)) return;\n            ur.set(i), t.uniformMatrix4fv(this.addr, !1, ur), gr(n, i);\n        }\n    }\n    function Tr(t, e) {\n        const n = this.cache;\n        n[0] !== e && (t.uniform1i(this.addr, e), n[0] = e);\n    }\n    function Er(t, e) {\n        const n = this.cache;\n        fr(n, e) || (t.uniform2iv(this.addr, e), gr(n, e));\n    }\n    function Ar(t, e) {\n        const n = this.cache;\n        fr(n, e) || (t.uniform3iv(this.addr, e), gr(n, e));\n    }\n    function Lr(t, e) {\n        const n = this.cache;\n        fr(n, e) || (t.uniform4iv(this.addr, e), gr(n, e));\n    }\n    function Rr(t, e) {\n        const n = this.cache;\n        n[0] !== e && (t.uniform1ui(this.addr, e), n[0] = e);\n    }\n    function Cr(t, e) {\n        const n = this.cache;\n        fr(n, e) || (t.uniform2uiv(this.addr, e), gr(n, e));\n    }\n    function Pr(t, e) {\n        const n = this.cache;\n        fr(n, e) || (t.uniform3uiv(this.addr, e), gr(n, e));\n    }\n    function Ir(t, e) {\n        const n = this.cache;\n        fr(n, e) || (t.uniform4uiv(this.addr, e), gr(n, e));\n    }\n    function Dr(t, e, n) {\n        const i = this.cache, r = n.allocateTextureUnit();\n        i[0] !== r && (t.uniform1i(this.addr, r), i[0] = r), n.safeSetTexture2D(e || sr, r);\n    }\n    function Nr(t, e, n) {\n        const i = this.cache, r = n.allocateTextureUnit();\n        i[0] !== r && (t.uniform1i(this.addr, r), i[0] = r), n.setTexture3D(e || or, r);\n    }\n    function zr(t, e, n) {\n        const i = this.cache, r = n.allocateTextureUnit();\n        i[0] !== r && (t.uniform1i(this.addr, r), i[0] = r), n.safeSetTextureCube(e || lr, r);\n    }\n    function Br(t, e, n) {\n        const i = this.cache, r = n.allocateTextureUnit();\n        i[0] !== r && (t.uniform1i(this.addr, r), i[0] = r), n.setTexture2DArray(e || ar, r);\n    }\n    function Fr(t, e) {\n        t.uniform1fv(this.addr, e);\n    }\n    function Or(t, e) {\n        const n = mr(e, this.size, 2);\n        t.uniform2fv(this.addr, n);\n    }\n    function Ur(t, e) {\n        const n = mr(e, this.size, 3);\n        t.uniform3fv(this.addr, n);\n    }\n    function Hr(t, e) {\n        const n = mr(e, this.size, 4);\n        t.uniform4fv(this.addr, n);\n    }\n    function Gr(t, e) {\n        const n = mr(e, this.size, 4);\n        t.uniformMatrix2fv(this.addr, !1, n);\n    }\n    function kr(t, e) {\n        const n = mr(e, this.size, 9);\n        t.uniformMatrix3fv(this.addr, !1, n);\n    }\n    function Vr(t, e) {\n        const n = mr(e, this.size, 16);\n        t.uniformMatrix4fv(this.addr, !1, n);\n    }\n    function Wr(t, e) {\n        t.uniform1iv(this.addr, e);\n    }\n    function jr(t, e) {\n        t.uniform2iv(this.addr, e);\n    }\n    function qr(t, e) {\n        t.uniform3iv(this.addr, e);\n    }\n    function Xr(t, e) {\n        t.uniform4iv(this.addr, e);\n    }\n    function Yr(t, e) {\n        t.uniform1uiv(this.addr, e);\n    }\n    function Jr(t, e) {\n        t.uniform2uiv(this.addr, e);\n    }\n    function Zr(t, e) {\n        t.uniform3uiv(this.addr, e);\n    }\n    function Qr(t, e) {\n        t.uniform4uiv(this.addr, e);\n    }\n    function Kr(t, e, n) {\n        const i = e.length, r = vr(n, i);\n        t.uniform1iv(this.addr, r);\n        for(let t = 0; t !== i; ++t)n.safeSetTexture2D(e[t] || sr, r[t]);\n    }\n    function $r(t, e, n) {\n        const i = e.length, r = vr(n, i);\n        t.uniform1iv(this.addr, r);\n        for(let t = 0; t !== i; ++t)n.safeSetTextureCube(e[t] || lr, r[t]);\n    }\n    function ts(t, e, n) {\n        this.id = t, this.addr = n, this.cache = [], this.setValue = function(t) {\n            switch(t){\n                case 5126:\n                    return yr;\n                case 35664:\n                    return xr;\n                case 35665:\n                    return _r;\n                case 35666:\n                    return Mr;\n                case 35674:\n                    return br;\n                case 35675:\n                    return wr;\n                case 35676:\n                    return Sr;\n                case 5124:\n                case 35670:\n                    return Tr;\n                case 35667:\n                case 35671:\n                    return Er;\n                case 35668:\n                case 35672:\n                    return Ar;\n                case 35669:\n                case 35673:\n                    return Lr;\n                case 5125:\n                    return Rr;\n                case 36294:\n                    return Cr;\n                case 36295:\n                    return Pr;\n                case 36296:\n                    return Ir;\n                case 35678:\n                case 36198:\n                case 36298:\n                case 36306:\n                case 35682:\n                    return Dr;\n                case 35679:\n                case 36299:\n                case 36307:\n                    return Nr;\n                case 35680:\n                case 36300:\n                case 36308:\n                case 36293:\n                    return zr;\n                case 36289:\n                case 36303:\n                case 36311:\n                case 36292:\n                    return Br;\n            }\n        }(e.type);\n    }\n    function es(t, e, n) {\n        this.id = t, this.addr = n, this.cache = [], this.size = e.size, this.setValue = function(t) {\n            switch(t){\n                case 5126:\n                    return Fr;\n                case 35664:\n                    return Or;\n                case 35665:\n                    return Ur;\n                case 35666:\n                    return Hr;\n                case 35674:\n                    return Gr;\n                case 35675:\n                    return kr;\n                case 35676:\n                    return Vr;\n                case 5124:\n                case 35670:\n                    return Wr;\n                case 35667:\n                case 35671:\n                    return jr;\n                case 35668:\n                case 35672:\n                    return qr;\n                case 35669:\n                case 35673:\n                    return Xr;\n                case 5125:\n                    return Yr;\n                case 36294:\n                    return Jr;\n                case 36295:\n                    return Zr;\n                case 36296:\n                    return Qr;\n                case 35678:\n                case 36198:\n                case 36298:\n                case 36306:\n                case 35682:\n                    return Kr;\n                case 35680:\n                case 36300:\n                case 36308:\n                case 36293:\n                    return $r;\n            }\n        }(e.type);\n    }\n    function ns(t) {\n        this.id = t, this.seq = [], this.map = {};\n    }\n    es.prototype.updateCache = function(t) {\n        const e = this.cache;\n        t instanceof Float32Array && e.length !== t.length && (this.cache = new Float32Array(t.length)), gr(e, t);\n    }, ns.prototype.setValue = function(t, e, n) {\n        const i = this.seq;\n        for(let r = 0, s = i.length; r !== s; ++r){\n            const s = i[r];\n            s.setValue(t, e[s.id], n);\n        }\n    };\n    const is = /(\\w+)(\\])?(\\[|\\.)?/g;\n    function rs(t, e) {\n        t.seq.push(e), t.map[e.id] = e;\n    }\n    function ss(t, e, n) {\n        const i = t.name, r = i.length;\n        for(is.lastIndex = 0;;){\n            const s = is.exec(i), a = is.lastIndex;\n            let o = s[1];\n            const l = \"]\" === s[2], c = s[3];\n            if (l && (o |= 0), void 0 === c || \"[\" === c && a + 2 === r) {\n                rs(n, void 0 === c ? new ts(o, t, e) : new es(o, t, e));\n                break;\n            }\n            {\n                let t = n.map[o];\n                void 0 === t && (t = new ns(o), rs(n, t)), n = t;\n            }\n        }\n    }\n    function as(t, e) {\n        this.seq = [], this.map = {};\n        const n = t.getProgramParameter(e, 35718);\n        for(let i = 0; i < n; ++i){\n            const n = t.getActiveUniform(e, i);\n            ss(n, t.getUniformLocation(e, n.name), this);\n        }\n    }\n    function os(t, e, n) {\n        const i = t.createShader(e);\n        return t.shaderSource(i, n), t.compileShader(i), i;\n    }\n    as.prototype.setValue = function(t, e, n, i) {\n        const r = this.map[e];\n        void 0 !== r && r.setValue(t, n, i);\n    }, as.prototype.setOptional = function(t, e, n) {\n        const i = e[n];\n        void 0 !== i && this.setValue(t, n, i);\n    }, as.upload = function(t, e, n, i) {\n        for(let r = 0, s = e.length; r !== s; ++r){\n            const s = e[r], a = n[s.id];\n            !1 !== a.needsUpdate && s.setValue(t, a.value, i);\n        }\n    }, as.seqWithValue = function(t, e) {\n        const n = [];\n        for(let i = 0, r = t.length; i !== r; ++i){\n            const r = t[i];\n            r.id in e && n.push(r);\n        }\n        return n;\n    };\n    let ls = 0;\n    function cs(t) {\n        switch(t){\n            case X:\n                return [\n                    \"Linear\",\n                    \"( value )\"\n                ];\n            case Y:\n                return [\n                    \"sRGB\",\n                    \"( value )\"\n                ];\n            case Z:\n                return [\n                    \"RGBE\",\n                    \"( value )\"\n                ];\n            case Q:\n                return [\n                    \"RGBM\",\n                    \"( value, 7.0 )\"\n                ];\n            case K:\n                return [\n                    \"RGBM\",\n                    \"( value, 16.0 )\"\n                ];\n            case $:\n                return [\n                    \"RGBD\",\n                    \"( value, 256.0 )\"\n                ];\n            case J:\n                return [\n                    \"Gamma\",\n                    \"( value, float( GAMMA_FACTOR ) )\"\n                ];\n            case 3003:\n                return [\n                    \"LogLuv\",\n                    \"( value )\"\n                ];\n            default:\n                return console.warn(\"THREE.WebGLProgram: Unsupported encoding:\", t), [\n                    \"Linear\",\n                    \"( value )\"\n                ];\n        }\n    }\n    function hs(t, e, n) {\n        const i = t.getShaderParameter(e, 35713), r = t.getShaderInfoLog(e).trim();\n        return i && \"\" === r ? \"\" : n.toUpperCase() + \"\\n\\n\" + r + \"\\n\\n\" + function(t) {\n            const e = t.split(\"\\n\");\n            for(let t = 0; t < e.length; t++)e[t] = t + 1 + \": \" + e[t];\n            return e.join(\"\\n\");\n        }(t.getShaderSource(e));\n    }\n    function us(t, e) {\n        const n = cs(e);\n        return \"vec4 \" + t + \"( vec4 value ) { return \" + n[0] + \"ToLinear\" + n[1] + \"; }\";\n    }\n    function ds(t, e) {\n        const n = cs(e);\n        return \"vec4 \" + t + \"( vec4 value ) { return LinearTo\" + n[0] + n[1] + \"; }\";\n    }\n    function ps(t, e) {\n        let n;\n        switch(e){\n            case 1:\n                n = \"Linear\";\n                break;\n            case 2:\n                n = \"Reinhard\";\n                break;\n            case 3:\n                n = \"OptimizedCineon\";\n                break;\n            case 4:\n                n = \"ACESFilmic\";\n                break;\n            case 5:\n                n = \"Custom\";\n                break;\n            default:\n                console.warn(\"THREE.WebGLProgram: Unsupported toneMapping:\", e), n = \"Linear\";\n        }\n        return \"vec3 \" + t + \"( vec3 color ) { return \" + n + \"ToneMapping( color ); }\";\n    }\n    function ms(t) {\n        return \"\" !== t;\n    }\n    function fs(t, e) {\n        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);\n    }\n    function gs(t, e) {\n        return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);\n    }\n    const vs = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n    function ys(t) {\n        return t.replace(vs, xs);\n    }\n    function xs(t, e) {\n        const n = pi[e];\n        if (void 0 === n) throw new Error(\"Can not resolve #include <\" + e + \">\");\n        return ys(n);\n    }\n    const _s = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g, Ms = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n    function bs(t) {\n        return t.replace(Ms, Ss).replace(_s, ws);\n    }\n    function ws(t, e, n, i) {\n        return console.warn(\"WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.\"), Ss(t, e, n, i);\n    }\n    function Ss(t, e, n, i) {\n        let r = \"\";\n        for(let t = parseInt(e); t < parseInt(n); t++)r += i.replace(/\\[\\s*i\\s*\\]/g, \"[ \" + t + \" ]\").replace(/UNROLLED_LOOP_INDEX/g, t);\n        return r;\n    }\n    function Ts(t) {\n        let e = \"precision \" + t.precision + \" float;\\nprecision \" + t.precision + \" int;\";\n        return \"highp\" === t.precision ? e += \"\\n#define HIGH_PRECISION\" : \"mediump\" === t.precision ? e += \"\\n#define MEDIUM_PRECISION\" : \"lowp\" === t.precision && (e += \"\\n#define LOW_PRECISION\"), e;\n    }\n    function Es(t, e, n, i) {\n        const a = t.getContext(), o = n.defines;\n        let h = n.vertexShader, u = n.fragmentShader;\n        const d = function(t) {\n            let e = \"SHADOWMAP_TYPE_BASIC\";\n            return 1 === t.shadowMapType ? e = \"SHADOWMAP_TYPE_PCF\" : 2 === t.shadowMapType ? e = \"SHADOWMAP_TYPE_PCF_SOFT\" : 3 === t.shadowMapType && (e = \"SHADOWMAP_TYPE_VSM\"), e;\n        }(n), p = function(t) {\n            let e = \"ENVMAP_TYPE_CUBE\";\n            if (t.envMap) switch(t.envMapMode){\n                case r:\n                case s:\n                    e = \"ENVMAP_TYPE_CUBE\";\n                    break;\n                case l:\n                case c:\n                    e = \"ENVMAP_TYPE_CUBE_UV\";\n            }\n            return e;\n        }(n), m = function(t) {\n            let e = \"ENVMAP_MODE_REFLECTION\";\n            if (t.envMap) switch(t.envMapMode){\n                case s:\n                case c:\n                    e = \"ENVMAP_MODE_REFRACTION\";\n            }\n            return e;\n        }(n), f = function(t) {\n            let e = \"ENVMAP_BLENDING_NONE\";\n            if (t.envMap) switch(t.combine){\n                case 0:\n                    e = \"ENVMAP_BLENDING_MULTIPLY\";\n                    break;\n                case 1:\n                    e = \"ENVMAP_BLENDING_MIX\";\n                    break;\n                case 2:\n                    e = \"ENVMAP_BLENDING_ADD\";\n            }\n            return e;\n        }(n), g = t.gammaFactor > 0 ? t.gammaFactor : 1, v = n.isWebGL2 ? \"\" : function(t) {\n            return [\n                t.extensionDerivatives || t.envMapCubeUV || t.bumpMap || t.tangentSpaceNormalMap || t.clearcoatNormalMap || t.flatShading || \"physical\" === t.shaderID ? \"#extension GL_OES_standard_derivatives : enable\" : \"\",\n                (t.extensionFragDepth || t.logarithmicDepthBuffer) && t.rendererExtensionFragDepth ? \"#extension GL_EXT_frag_depth : enable\" : \"\",\n                t.extensionDrawBuffers && t.rendererExtensionDrawBuffers ? \"#extension GL_EXT_draw_buffers : require\" : \"\",\n                (t.extensionShaderTextureLOD || t.envMap || t.transmission) && t.rendererExtensionShaderTextureLod ? \"#extension GL_EXT_shader_texture_lod : enable\" : \"\"\n            ].filter(ms).join(\"\\n\");\n        }(n), y = function(t) {\n            const e = [];\n            for(const n in t){\n                const i = t[n];\n                !1 !== i && e.push(\"#define \" + n + \" \" + i);\n            }\n            return e.join(\"\\n\");\n        }(o), x = a.createProgram();\n        let _, M, b = n.glslVersion ? \"#version \" + n.glslVersion + \"\\n\" : \"\";\n        n.isRawShaderMaterial ? (_ = [\n            y\n        ].filter(ms).join(\"\\n\"), _.length > 0 && (_ += \"\\n\"), M = [\n            v,\n            y\n        ].filter(ms).join(\"\\n\"), M.length > 0 && (M += \"\\n\")) : (_ = [\n            Ts(n),\n            \"#define SHADER_NAME \" + n.shaderName,\n            y,\n            n.instancing ? \"#define USE_INSTANCING\" : \"\",\n            n.instancingColor ? \"#define USE_INSTANCING_COLOR\" : \"\",\n            n.supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\",\n            \"#define GAMMA_FACTOR \" + g,\n            \"#define MAX_BONES \" + n.maxBones,\n            n.useFog && n.fog ? \"#define USE_FOG\" : \"\",\n            n.useFog && n.fogExp2 ? \"#define FOG_EXP2\" : \"\",\n            n.map ? \"#define USE_MAP\" : \"\",\n            n.envMap ? \"#define USE_ENVMAP\" : \"\",\n            n.envMap ? \"#define \" + m : \"\",\n            n.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n            n.aoMap ? \"#define USE_AOMAP\" : \"\",\n            n.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\n            n.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n            n.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n            n.normalMap && n.objectSpaceNormalMap ? \"#define OBJECTSPACE_NORMALMAP\" : \"\",\n            n.normalMap && n.tangentSpaceNormalMap ? \"#define TANGENTSPACE_NORMALMAP\" : \"\",\n            n.clearcoatMap ? \"#define USE_CLEARCOATMAP\" : \"\",\n            n.clearcoatRoughnessMap ? \"#define USE_CLEARCOAT_ROUGHNESSMAP\" : \"\",\n            n.clearcoatNormalMap ? \"#define USE_CLEARCOAT_NORMALMAP\" : \"\",\n            n.displacementMap && n.supportsVertexTextures ? \"#define USE_DISPLACEMENTMAP\" : \"\",\n            n.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n            n.specularIntensityMap ? \"#define USE_SPECULARINTENSITYMAP\" : \"\",\n            n.specularColorMap ? \"#define USE_SPECULARCOLORMAP\" : \"\",\n            n.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\",\n            n.metalnessMap ? \"#define USE_METALNESSMAP\" : \"\",\n            n.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n            n.transmission ? \"#define USE_TRANSMISSION\" : \"\",\n            n.transmissionMap ? \"#define USE_TRANSMISSIONMAP\" : \"\",\n            n.thicknessMap ? \"#define USE_THICKNESSMAP\" : \"\",\n            n.sheenColorMap ? \"#define USE_SHEENCOLORMAP\" : \"\",\n            n.sheenRoughnessMap ? \"#define USE_SHEENROUGHNESSMAP\" : \"\",\n            n.vertexTangents ? \"#define USE_TANGENT\" : \"\",\n            n.vertexColors ? \"#define USE_COLOR\" : \"\",\n            n.vertexAlphas ? \"#define USE_COLOR_ALPHA\" : \"\",\n            n.vertexUvs ? \"#define USE_UV\" : \"\",\n            n.uvsVertexOnly ? \"#define UVS_VERTEX_ONLY\" : \"\",\n            n.flatShading ? \"#define FLAT_SHADED\" : \"\",\n            n.skinning ? \"#define USE_SKINNING\" : \"\",\n            n.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\",\n            n.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\",\n            n.morphNormals && !1 === n.flatShading ? \"#define USE_MORPHNORMALS\" : \"\",\n            n.morphTargets && n.isWebGL2 ? \"#define MORPHTARGETS_TEXTURE\" : \"\",\n            n.morphTargets && n.isWebGL2 ? \"#define MORPHTARGETS_COUNT \" + n.morphTargetsCount : \"\",\n            n.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n            n.flipSided ? \"#define FLIP_SIDED\" : \"\",\n            n.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n            n.shadowMapEnabled ? \"#define \" + d : \"\",\n            n.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\",\n            n.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n            n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n            \"uniform mat4 modelMatrix;\",\n            \"uniform mat4 modelViewMatrix;\",\n            \"uniform mat4 projectionMatrix;\",\n            \"uniform mat4 viewMatrix;\",\n            \"uniform mat3 normalMatrix;\",\n            \"uniform vec3 cameraPosition;\",\n            \"uniform bool isOrthographic;\",\n            \"#ifdef USE_INSTANCING\",\n            \"\tattribute mat4 instanceMatrix;\",\n            \"#endif\",\n            \"#ifdef USE_INSTANCING_COLOR\",\n            \"\tattribute vec3 instanceColor;\",\n            \"#endif\",\n            \"attribute vec3 position;\",\n            \"attribute vec3 normal;\",\n            \"attribute vec2 uv;\",\n            \"#ifdef USE_TANGENT\",\n            \"\tattribute vec4 tangent;\",\n            \"#endif\",\n            \"#if defined( USE_COLOR_ALPHA )\",\n            \"\tattribute vec4 color;\",\n            \"#elif defined( USE_COLOR )\",\n            \"\tattribute vec3 color;\",\n            \"#endif\",\n            \"#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )\",\n            \"\tattribute vec3 morphTarget0;\",\n            \"\tattribute vec3 morphTarget1;\",\n            \"\tattribute vec3 morphTarget2;\",\n            \"\tattribute vec3 morphTarget3;\",\n            \"\t#ifdef USE_MORPHNORMALS\",\n            \"\t\tattribute vec3 morphNormal0;\",\n            \"\t\tattribute vec3 morphNormal1;\",\n            \"\t\tattribute vec3 morphNormal2;\",\n            \"\t\tattribute vec3 morphNormal3;\",\n            \"\t#else\",\n            \"\t\tattribute vec3 morphTarget4;\",\n            \"\t\tattribute vec3 morphTarget5;\",\n            \"\t\tattribute vec3 morphTarget6;\",\n            \"\t\tattribute vec3 morphTarget7;\",\n            \"\t#endif\",\n            \"#endif\",\n            \"#ifdef USE_SKINNING\",\n            \"\tattribute vec4 skinIndex;\",\n            \"\tattribute vec4 skinWeight;\",\n            \"#endif\",\n            \"\\n\"\n        ].filter(ms).join(\"\\n\"), M = [\n            v,\n            Ts(n),\n            \"#define SHADER_NAME \" + n.shaderName,\n            y,\n            \"#define GAMMA_FACTOR \" + g,\n            n.useFog && n.fog ? \"#define USE_FOG\" : \"\",\n            n.useFog && n.fogExp2 ? \"#define FOG_EXP2\" : \"\",\n            n.map ? \"#define USE_MAP\" : \"\",\n            n.matcap ? \"#define USE_MATCAP\" : \"\",\n            n.envMap ? \"#define USE_ENVMAP\" : \"\",\n            n.envMap ? \"#define \" + p : \"\",\n            n.envMap ? \"#define \" + m : \"\",\n            n.envMap ? \"#define \" + f : \"\",\n            n.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n            n.aoMap ? \"#define USE_AOMAP\" : \"\",\n            n.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\n            n.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n            n.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n            n.normalMap && n.objectSpaceNormalMap ? \"#define OBJECTSPACE_NORMALMAP\" : \"\",\n            n.normalMap && n.tangentSpaceNormalMap ? \"#define TANGENTSPACE_NORMALMAP\" : \"\",\n            n.clearcoat ? \"#define USE_CLEARCOAT\" : \"\",\n            n.clearcoatMap ? \"#define USE_CLEARCOATMAP\" : \"\",\n            n.clearcoatRoughnessMap ? \"#define USE_CLEARCOAT_ROUGHNESSMAP\" : \"\",\n            n.clearcoatNormalMap ? \"#define USE_CLEARCOAT_NORMALMAP\" : \"\",\n            n.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n            n.specularIntensityMap ? \"#define USE_SPECULARINTENSITYMAP\" : \"\",\n            n.specularColorMap ? \"#define USE_SPECULARCOLORMAP\" : \"\",\n            n.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\",\n            n.metalnessMap ? \"#define USE_METALNESSMAP\" : \"\",\n            n.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n            n.alphaTest ? \"#define USE_ALPHATEST\" : \"\",\n            n.sheen ? \"#define USE_SHEEN\" : \"\",\n            n.sheenColorMap ? \"#define USE_SHEENCOLORMAP\" : \"\",\n            n.sheenRoughnessMap ? \"#define USE_SHEENROUGHNESSMAP\" : \"\",\n            n.transmission ? \"#define USE_TRANSMISSION\" : \"\",\n            n.transmissionMap ? \"#define USE_TRANSMISSIONMAP\" : \"\",\n            n.thicknessMap ? \"#define USE_THICKNESSMAP\" : \"\",\n            n.vertexTangents ? \"#define USE_TANGENT\" : \"\",\n            n.vertexColors || n.instancingColor ? \"#define USE_COLOR\" : \"\",\n            n.vertexAlphas ? \"#define USE_COLOR_ALPHA\" : \"\",\n            n.vertexUvs ? \"#define USE_UV\" : \"\",\n            n.uvsVertexOnly ? \"#define UVS_VERTEX_ONLY\" : \"\",\n            n.gradientMap ? \"#define USE_GRADIENTMAP\" : \"\",\n            n.flatShading ? \"#define FLAT_SHADED\" : \"\",\n            n.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n            n.flipSided ? \"#define FLIP_SIDED\" : \"\",\n            n.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n            n.shadowMapEnabled ? \"#define \" + d : \"\",\n            n.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : \"\",\n            n.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : \"\",\n            n.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n            n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n            (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? \"#define TEXTURE_LOD_EXT\" : \"\",\n            \"uniform mat4 viewMatrix;\",\n            \"uniform vec3 cameraPosition;\",\n            \"uniform bool isOrthographic;\",\n            0 !== n.toneMapping ? \"#define TONE_MAPPING\" : \"\",\n            0 !== n.toneMapping ? pi.tonemapping_pars_fragment : \"\",\n            0 !== n.toneMapping ? ps(\"toneMapping\", n.toneMapping) : \"\",\n            n.dithering ? \"#define DITHERING\" : \"\",\n            n.format === T ? \"#define OPAQUE\" : \"\",\n            pi.encodings_pars_fragment,\n            n.map ? us(\"mapTexelToLinear\", n.mapEncoding) : \"\",\n            n.matcap ? us(\"matcapTexelToLinear\", n.matcapEncoding) : \"\",\n            n.envMap ? us(\"envMapTexelToLinear\", n.envMapEncoding) : \"\",\n            n.emissiveMap ? us(\"emissiveMapTexelToLinear\", n.emissiveMapEncoding) : \"\",\n            n.specularColorMap ? us(\"specularColorMapTexelToLinear\", n.specularColorMapEncoding) : \"\",\n            n.sheenColorMap ? us(\"sheenColorMapTexelToLinear\", n.sheenColorMapEncoding) : \"\",\n            n.lightMap ? us(\"lightMapTexelToLinear\", n.lightMapEncoding) : \"\",\n            ds(\"linearToOutputTexel\", n.outputEncoding),\n            n.depthPacking ? \"#define DEPTH_PACKING \" + n.depthPacking : \"\",\n            \"\\n\"\n        ].filter(ms).join(\"\\n\")), h = ys(h), h = fs(h, n), h = gs(h, n), u = ys(u), u = fs(u, n), u = gs(u, n), h = bs(h), u = bs(u), n.isWebGL2 && !0 !== n.isRawShaderMaterial && (b = \"#version 300 es\\n\", _ = [\n            \"precision mediump sampler2DArray;\",\n            \"#define attribute in\",\n            \"#define varying out\",\n            \"#define texture2D texture\"\n        ].join(\"\\n\") + \"\\n\" + _, M = [\n            \"#define varying in\",\n            n.glslVersion === it ? \"\" : \"out highp vec4 pc_fragColor;\",\n            n.glslVersion === it ? \"\" : \"#define gl_FragColor pc_fragColor\",\n            \"#define gl_FragDepthEXT gl_FragDepth\",\n            \"#define texture2D texture\",\n            \"#define textureCube texture\",\n            \"#define texture2DProj textureProj\",\n            \"#define texture2DLodEXT textureLod\",\n            \"#define texture2DProjLodEXT textureProjLod\",\n            \"#define textureCubeLodEXT textureLod\",\n            \"#define texture2DGradEXT textureGrad\",\n            \"#define texture2DProjGradEXT textureProjGrad\",\n            \"#define textureCubeGradEXT textureGrad\"\n        ].join(\"\\n\") + \"\\n\" + M);\n        const w = b + M + u, S = os(a, 35633, b + _ + h), E = os(a, 35632, w);\n        if (a.attachShader(x, S), a.attachShader(x, E), void 0 !== n.index0AttributeName ? a.bindAttribLocation(x, 0, n.index0AttributeName) : !0 === n.morphTargets && a.bindAttribLocation(x, 0, \"position\"), a.linkProgram(x), t.debug.checkShaderErrors) {\n            const t = a.getProgramInfoLog(x).trim(), e = a.getShaderInfoLog(S).trim(), n = a.getShaderInfoLog(E).trim();\n            let i = !0, r = !0;\n            if (!1 === a.getProgramParameter(x, 35714)) {\n                i = !1;\n                const e = hs(a, S, \"vertex\"), n = hs(a, E, \"fragment\");\n                console.error(\"THREE.WebGLProgram: Shader Error \" + a.getError() + \" - VALIDATE_STATUS \" + a.getProgramParameter(x, 35715) + \"\\n\\nProgram Info Log: \" + t + \"\\n\" + e + \"\\n\" + n);\n            } else \"\" !== t ? console.warn(\"THREE.WebGLProgram: Program Info Log:\", t) : \"\" !== e && \"\" !== n || (r = !1);\n            r && (this.diagnostics = {\n                runnable: i,\n                programLog: t,\n                vertexShader: {\n                    log: e,\n                    prefix: _\n                },\n                fragmentShader: {\n                    log: n,\n                    prefix: M\n                }\n            });\n        }\n        let A, L;\n        return a.deleteShader(S), a.deleteShader(E), this.getUniforms = function() {\n            return void 0 === A && (A = new as(a, x)), A;\n        }, this.getAttributes = function() {\n            return void 0 === L && (L = function(t, e) {\n                const n = {}, i = t.getProgramParameter(e, 35721);\n                for(let r = 0; r < i; r++){\n                    const i = t.getActiveAttrib(e, r), s = i.name;\n                    let a = 1;\n                    35674 === i.type && (a = 2), 35675 === i.type && (a = 3), 35676 === i.type && (a = 4), n[s] = {\n                        type: i.type,\n                        location: t.getAttribLocation(e, s),\n                        locationSize: a\n                    };\n                }\n                return n;\n            }(a, x)), L;\n        }, this.destroy = function() {\n            i.releaseStatesOfProgram(this), a.deleteProgram(x), this.program = void 0;\n        }, this.name = n.shaderName, this.id = ls++, this.cacheKey = e, this.usedTimes = 1, this.program = x, this.vertexShader = S, this.fragmentShader = E, this;\n    }\n    function As(t, e, n, i, r, s, a) {\n        const o = [], h = r.isWebGL2, u = r.logarithmicDepthBuffer, d = r.floatVertexTextures, p = r.maxVertexUniforms, m = r.vertexTextures;\n        let f = r.precision;\n        const g = {\n            MeshDepthMaterial: \"depth\",\n            MeshDistanceMaterial: \"distanceRGBA\",\n            MeshNormalMaterial: \"normal\",\n            MeshBasicMaterial: \"basic\",\n            MeshLambertMaterial: \"lambert\",\n            MeshPhongMaterial: \"phong\",\n            MeshToonMaterial: \"toon\",\n            MeshStandardMaterial: \"physical\",\n            MeshPhysicalMaterial: \"physical\",\n            MeshMatcapMaterial: \"matcap\",\n            LineBasicMaterial: \"basic\",\n            LineDashedMaterial: \"dashed\",\n            PointsMaterial: \"points\",\n            ShadowMaterial: \"shadow\",\n            SpriteMaterial: \"sprite\"\n        }, v = [\n            \"precision\",\n            \"isWebGL2\",\n            \"supportsVertexTextures\",\n            \"outputEncoding\",\n            \"instancing\",\n            \"instancingColor\",\n            \"map\",\n            \"mapEncoding\",\n            \"matcap\",\n            \"matcapEncoding\",\n            \"envMap\",\n            \"envMapMode\",\n            \"envMapEncoding\",\n            \"envMapCubeUV\",\n            \"lightMap\",\n            \"lightMapEncoding\",\n            \"aoMap\",\n            \"emissiveMap\",\n            \"emissiveMapEncoding\",\n            \"bumpMap\",\n            \"normalMap\",\n            \"objectSpaceNormalMap\",\n            \"tangentSpaceNormalMap\",\n            \"clearcoat\",\n            \"clearcoatMap\",\n            \"clearcoatRoughnessMap\",\n            \"clearcoatNormalMap\",\n            \"displacementMap\",\n            \"specularMap\",\n            ,\n            \"roughnessMap\",\n            \"metalnessMap\",\n            \"gradientMap\",\n            \"alphaMap\",\n            \"alphaTest\",\n            \"combine\",\n            \"vertexColors\",\n            \"vertexAlphas\",\n            \"vertexTangents\",\n            \"vertexUvs\",\n            \"uvsVertexOnly\",\n            \"fog\",\n            \"useFog\",\n            \"fogExp2\",\n            \"flatShading\",\n            \"sizeAttenuation\",\n            \"logarithmicDepthBuffer\",\n            \"skinning\",\n            \"maxBones\",\n            \"useVertexTexture\",\n            \"morphTargets\",\n            \"morphNormals\",\n            \"morphTargetsCount\",\n            \"premultipliedAlpha\",\n            \"numDirLights\",\n            \"numPointLights\",\n            \"numSpotLights\",\n            \"numHemiLights\",\n            \"numRectAreaLights\",\n            \"numDirLightShadows\",\n            \"numPointLightShadows\",\n            \"numSpotLightShadows\",\n            \"shadowMapEnabled\",\n            \"shadowMapType\",\n            \"toneMapping\",\n            \"physicallyCorrectLights\",\n            \"doubleSided\",\n            \"flipSided\",\n            \"numClippingPlanes\",\n            \"numClipIntersection\",\n            \"depthPacking\",\n            \"dithering\",\n            \"format\",\n            \"specularIntensityMap\",\n            \"specularColorMap\",\n            \"specularColorMapEncoding\",\n            \"transmission\",\n            \"transmissionMap\",\n            \"thicknessMap\",\n            \"sheen\",\n            \"sheenColorMap\",\n            \"sheenColorMapEncoding\",\n            \"sheenRoughnessMap\"\n        ];\n        function y(t) {\n            let e;\n            return t && t.isTexture ? e = t.encoding : t && t.isWebGLRenderTarget ? (console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"), e = t.texture.encoding) : e = X, h && t && t.isTexture && t.format === E && t.type === x && t.encoding === Y && (e = X), e;\n        }\n        return {\n            getParameters: function(s, o, v, x, _) {\n                const M = x.fog, b = s.isMeshStandardMaterial ? x.environment : null, w = (s.isMeshStandardMaterial ? n : e).get(s.envMap || b), S = g[s.type], T = _.isSkinnedMesh ? function(t) {\n                    const e = t.skeleton.bones;\n                    if (d) return 1024;\n                    {\n                        const t = p, n = Math.floor((t - 20) / 4), i = Math.min(n, e.length);\n                        return i < e.length ? (console.warn(\"THREE.WebGLRenderer: Skeleton has \" + e.length + \" bones. This GPU supports \" + i + \".\"), 0) : i;\n                    }\n                }(_) : 0;\n                let E, A;\n                if (null !== s.precision && (f = r.getMaxPrecision(s.precision), f !== s.precision && console.warn(\"THREE.WebGLProgram.getParameters:\", s.precision, \"not supported, using\", f, \"instead.\")), S) {\n                    const t = fi[S];\n                    E = t.vertexShader, A = t.fragmentShader;\n                } else E = s.vertexShader, A = s.fragmentShader;\n                const L = t.getRenderTarget(), R = s.alphaTest > 0, C = s.clearcoat > 0;\n                return {\n                    isWebGL2: h,\n                    shaderID: S,\n                    shaderName: s.type,\n                    vertexShader: E,\n                    fragmentShader: A,\n                    defines: s.defines,\n                    isRawShaderMaterial: !0 === s.isRawShaderMaterial,\n                    glslVersion: s.glslVersion,\n                    precision: f,\n                    instancing: !0 === _.isInstancedMesh,\n                    instancingColor: !0 === _.isInstancedMesh && null !== _.instanceColor,\n                    supportsVertexTextures: m,\n                    outputEncoding: null !== L ? y(L.texture) : t.outputEncoding,\n                    map: !!s.map,\n                    mapEncoding: y(s.map),\n                    matcap: !!s.matcap,\n                    matcapEncoding: y(s.matcap),\n                    envMap: !!w,\n                    envMapMode: w && w.mapping,\n                    envMapEncoding: y(w),\n                    envMapCubeUV: !!w && (w.mapping === l || w.mapping === c),\n                    lightMap: !!s.lightMap,\n                    lightMapEncoding: y(s.lightMap),\n                    aoMap: !!s.aoMap,\n                    emissiveMap: !!s.emissiveMap,\n                    emissiveMapEncoding: y(s.emissiveMap),\n                    bumpMap: !!s.bumpMap,\n                    normalMap: !!s.normalMap,\n                    objectSpaceNormalMap: 1 === s.normalMapType,\n                    tangentSpaceNormalMap: 0 === s.normalMapType,\n                    clearcoat: C,\n                    clearcoatMap: C && !!s.clearcoatMap,\n                    clearcoatRoughnessMap: C && !!s.clearcoatRoughnessMap,\n                    clearcoatNormalMap: C && !!s.clearcoatNormalMap,\n                    displacementMap: !!s.displacementMap,\n                    roughnessMap: !!s.roughnessMap,\n                    metalnessMap: !!s.metalnessMap,\n                    specularMap: !!s.specularMap,\n                    specularIntensityMap: !!s.specularIntensityMap,\n                    specularColorMap: !!s.specularColorMap,\n                    specularColorMapEncoding: y(s.specularColorMap),\n                    alphaMap: !!s.alphaMap,\n                    alphaTest: R,\n                    gradientMap: !!s.gradientMap,\n                    sheen: s.sheen > 0,\n                    sheenColorMap: !!s.sheenColorMap,\n                    sheenColorMapEncoding: y(s.sheenColorMap),\n                    sheenRoughnessMap: !!s.sheenRoughnessMap,\n                    transmission: s.transmission > 0,\n                    transmissionMap: !!s.transmissionMap,\n                    thicknessMap: !!s.thicknessMap,\n                    combine: s.combine,\n                    vertexTangents: !!s.normalMap && !!_.geometry && !!_.geometry.attributes.tangent,\n                    vertexColors: s.vertexColors,\n                    vertexAlphas: !0 === s.vertexColors && !!_.geometry && !!_.geometry.attributes.color && 4 === _.geometry.attributes.color.itemSize,\n                    vertexUvs: !!s.map || !!s.bumpMap || !!s.normalMap || !!s.specularMap || !!s.alphaMap || !!s.emissiveMap || !!s.roughnessMap || !!s.metalnessMap || !!s.clearcoatMap || !!s.clearcoatRoughnessMap || !!s.clearcoatNormalMap || !!s.displacementMap || !!s.transmissionMap || !!s.thicknessMap || !!s.specularIntensityMap || !!s.specularColorMap || !!s.sheenColorMap || s.sheenRoughnessMap,\n                    uvsVertexOnly: !(s.map || s.bumpMap || s.normalMap || s.specularMap || s.alphaMap || s.emissiveMap || s.roughnessMap || s.metalnessMap || s.clearcoatNormalMap || s.transmission > 0 || s.transmissionMap || s.thicknessMap || s.specularIntensityMap || s.specularColorMap || !!s.sheen > 0 || s.sheenColorMap || s.sheenRoughnessMap || !s.displacementMap),\n                    fog: !!M,\n                    useFog: s.fog,\n                    fogExp2: M && M.isFogExp2,\n                    flatShading: !!s.flatShading,\n                    sizeAttenuation: s.sizeAttenuation,\n                    logarithmicDepthBuffer: u,\n                    skinning: !0 === _.isSkinnedMesh && T > 0,\n                    maxBones: T,\n                    useVertexTexture: d,\n                    morphTargets: !!_.geometry && !!_.geometry.morphAttributes.position,\n                    morphNormals: !!_.geometry && !!_.geometry.morphAttributes.normal,\n                    morphTargetsCount: _.geometry && _.geometry.morphAttributes.position ? _.geometry.morphAttributes.position.length : 0,\n                    numDirLights: o.directional.length,\n                    numPointLights: o.point.length,\n                    numSpotLights: o.spot.length,\n                    numRectAreaLights: o.rectArea.length,\n                    numHemiLights: o.hemi.length,\n                    numDirLightShadows: o.directionalShadowMap.length,\n                    numPointLightShadows: o.pointShadowMap.length,\n                    numSpotLightShadows: o.spotShadowMap.length,\n                    numClippingPlanes: a.numPlanes,\n                    numClipIntersection: a.numIntersection,\n                    format: s.format,\n                    dithering: s.dithering,\n                    shadowMapEnabled: t.shadowMap.enabled && v.length > 0,\n                    shadowMapType: t.shadowMap.type,\n                    toneMapping: s.toneMapped ? t.toneMapping : 0,\n                    physicallyCorrectLights: t.physicallyCorrectLights,\n                    premultipliedAlpha: s.premultipliedAlpha,\n                    doubleSided: 2 === s.side,\n                    flipSided: 1 === s.side,\n                    depthPacking: void 0 !== s.depthPacking && s.depthPacking,\n                    index0AttributeName: s.index0AttributeName,\n                    extensionDerivatives: s.extensions && s.extensions.derivatives,\n                    extensionFragDepth: s.extensions && s.extensions.fragDepth,\n                    extensionDrawBuffers: s.extensions && s.extensions.drawBuffers,\n                    extensionShaderTextureLOD: s.extensions && s.extensions.shaderTextureLOD,\n                    rendererExtensionFragDepth: h || i.has(\"EXT_frag_depth\"),\n                    rendererExtensionDrawBuffers: h || i.has(\"WEBGL_draw_buffers\"),\n                    rendererExtensionShaderTextureLod: h || i.has(\"EXT_shader_texture_lod\"),\n                    customProgramCacheKey: s.customProgramCacheKey()\n                };\n            },\n            getProgramCacheKey: function(e) {\n                const n = [];\n                if (e.shaderID ? n.push(e.shaderID) : (n.push(St(e.fragmentShader)), n.push(St(e.vertexShader))), void 0 !== e.defines) for(const t in e.defines)n.push(t), n.push(e.defines[t]);\n                if (!1 === e.isRawShaderMaterial) {\n                    for(let t = 0; t < v.length; t++)n.push(e[v[t]]);\n                    n.push(t.outputEncoding), n.push(t.gammaFactor);\n                }\n                return n.push(e.customProgramCacheKey), n.join();\n            },\n            getUniforms: function(t) {\n                const e = g[t.type];\n                let n;\n                if (e) {\n                    const t = fi[e];\n                    n = Jn.clone(t.uniforms);\n                } else n = t.uniforms;\n                return n;\n            },\n            acquireProgram: function(e, n) {\n                let i;\n                for(let t = 0, e = o.length; t < e; t++){\n                    const e = o[t];\n                    if (e.cacheKey === n) {\n                        i = e, ++i.usedTimes;\n                        break;\n                    }\n                }\n                return void 0 === i && (i = new Es(t, n, e, s), o.push(i)), i;\n            },\n            releaseProgram: function(t) {\n                if (0 == --t.usedTimes) {\n                    const e = o.indexOf(t);\n                    o[e] = o[o.length - 1], o.pop(), t.destroy();\n                }\n            },\n            programs: o\n        };\n    }\n    function Ls() {\n        let t = new WeakMap;\n        return {\n            get: function(e) {\n                let n = t.get(e);\n                return void 0 === n && (n = {}, t.set(e, n)), n;\n            },\n            remove: function(e) {\n                t.delete(e);\n            },\n            update: function(e, n, i) {\n                t.get(e)[n] = i;\n            },\n            dispose: function() {\n                t = new WeakMap;\n            }\n        };\n    }\n    function Rs(t, e) {\n        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id;\n    }\n    function Cs(t, e) {\n        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id;\n    }\n    function Ps(t) {\n        const e = [];\n        let n = 0;\n        const i = [], r = [], s = [], a = {\n            id: -1\n        };\n        function o(i, r, s, o, l, c) {\n            let h = e[n];\n            const u = t.get(s);\n            return void 0 === h ? (h = {\n                id: i.id,\n                object: i,\n                geometry: r,\n                material: s,\n                program: u.program || a,\n                groupOrder: o,\n                renderOrder: i.renderOrder,\n                z: l,\n                group: c\n            }, e[n] = h) : (h.id = i.id, h.object = i, h.geometry = r, h.material = s, h.program = u.program || a, h.groupOrder = o, h.renderOrder = i.renderOrder, h.z = l, h.group = c), n++, h;\n        }\n        return {\n            opaque: i,\n            transmissive: r,\n            transparent: s,\n            init: function() {\n                n = 0, i.length = 0, r.length = 0, s.length = 0;\n            },\n            push: function(t, e, n, a, l, c) {\n                const h = o(t, e, n, a, l, c);\n                n.transmission > 0 ? r.push(h) : !0 === n.transparent ? s.push(h) : i.push(h);\n            },\n            unshift: function(t, e, n, a, l, c) {\n                const h = o(t, e, n, a, l, c);\n                n.transmission > 0 ? r.unshift(h) : !0 === n.transparent ? s.unshift(h) : i.unshift(h);\n            },\n            finish: function() {\n                for(let t = n, i = e.length; t < i; t++){\n                    const n = e[t];\n                    if (null === n.id) break;\n                    n.id = null, n.object = null, n.geometry = null, n.material = null, n.program = null, n.group = null;\n                }\n            },\n            sort: function(t, e) {\n                i.length > 1 && i.sort(t || Rs), r.length > 1 && r.sort(e || Cs), s.length > 1 && s.sort(e || Cs);\n            }\n        };\n    }\n    function Is(t) {\n        let e = new WeakMap;\n        return {\n            get: function(n, i) {\n                let r;\n                return !1 === e.has(n) ? (r = new Ps(t), e.set(n, [\n                    r\n                ])) : i >= e.get(n).length ? (r = new Ps(t), e.get(n).push(r)) : r = e.get(n)[i], r;\n            },\n            dispose: function() {\n                e = new WeakMap;\n            }\n        };\n    }\n    function Ds() {\n        const t = {};\n        return {\n            get: function(e) {\n                if (void 0 !== t[e.id]) return t[e.id];\n                let n;\n                switch(e.type){\n                    case \"DirectionalLight\":\n                        n = {\n                            direction: new zt,\n                            color: new rn\n                        };\n                        break;\n                    case \"SpotLight\":\n                        n = {\n                            position: new zt,\n                            direction: new zt,\n                            color: new rn,\n                            distance: 0,\n                            coneCos: 0,\n                            penumbraCos: 0,\n                            decay: 0\n                        };\n                        break;\n                    case \"PointLight\":\n                        n = {\n                            position: new zt,\n                            color: new rn,\n                            distance: 0,\n                            decay: 0\n                        };\n                        break;\n                    case \"HemisphereLight\":\n                        n = {\n                            direction: new zt,\n                            skyColor: new rn,\n                            groundColor: new rn\n                        };\n                        break;\n                    case \"RectAreaLight\":\n                        n = {\n                            color: new rn,\n                            position: new zt,\n                            halfWidth: new zt,\n                            halfHeight: new zt\n                        };\n                }\n                return t[e.id] = n, n;\n            }\n        };\n    }\n    let Ns = 0;\n    function zs(t, e) {\n        return (e.castShadow ? 1 : 0) - (t.castShadow ? 1 : 0);\n    }\n    function Bs(t, e) {\n        const n = new Ds, i = function() {\n            const t = {};\n            return {\n                get: function(e) {\n                    if (void 0 !== t[e.id]) return t[e.id];\n                    let n;\n                    switch(e.type){\n                        case \"DirectionalLight\":\n                        case \"SpotLight\":\n                            n = {\n                                shadowBias: 0,\n                                shadowNormalBias: 0,\n                                shadowRadius: 1,\n                                shadowMapSize: new yt\n                            };\n                            break;\n                        case \"PointLight\":\n                            n = {\n                                shadowBias: 0,\n                                shadowNormalBias: 0,\n                                shadowRadius: 1,\n                                shadowMapSize: new yt,\n                                shadowCameraNear: 1,\n                                shadowCameraFar: 1e3\n                            };\n                    }\n                    return t[e.id] = n, n;\n                }\n            };\n        }(), r = {\n            version: 0,\n            hash: {\n                directionalLength: -1,\n                pointLength: -1,\n                spotLength: -1,\n                rectAreaLength: -1,\n                hemiLength: -1,\n                numDirectionalShadows: -1,\n                numPointShadows: -1,\n                numSpotShadows: -1\n            },\n            ambient: [\n                0,\n                0,\n                0\n            ],\n            probe: [],\n            directional: [],\n            directionalShadow: [],\n            directionalShadowMap: [],\n            directionalShadowMatrix: [],\n            spot: [],\n            spotShadow: [],\n            spotShadowMap: [],\n            spotShadowMatrix: [],\n            rectArea: [],\n            rectAreaLTC1: null,\n            rectAreaLTC2: null,\n            point: [],\n            pointShadow: [],\n            pointShadowMap: [],\n            pointShadowMatrix: [],\n            hemi: []\n        };\n        for(let t = 0; t < 9; t++)r.probe.push(new zt);\n        const s = new zt, a = new de, o = new de;\n        return {\n            setup: function(s, a) {\n                let o = 0, l = 0, c = 0;\n                for(let t = 0; t < 9; t++)r.probe[t].set(0, 0, 0);\n                let h = 0, u = 0, d = 0, p = 0, m = 0, f = 0, g = 0, v = 0;\n                s.sort(zs);\n                const y = !0 !== a ? Math.PI : 1;\n                for(let t = 0, e = s.length; t < e; t++){\n                    const e = s[t], a = e.color, x = e.intensity, _ = e.distance, M = e.shadow && e.shadow.map ? e.shadow.map.texture : null;\n                    if (e.isAmbientLight) o += a.r * x * y, l += a.g * x * y, c += a.b * x * y;\n                    else if (e.isLightProbe) for(let t = 0; t < 9; t++)r.probe[t].addScaledVector(e.sh.coefficients[t], x);\n                    else if (e.isDirectionalLight) {\n                        const t = n.get(e);\n                        if (t.color.copy(e.color).multiplyScalar(e.intensity * y), e.castShadow) {\n                            const t = e.shadow, n = i.get(e);\n                            n.shadowBias = t.bias, n.shadowNormalBias = t.normalBias, n.shadowRadius = t.radius, n.shadowMapSize = t.mapSize, r.directionalShadow[h] = n, r.directionalShadowMap[h] = M, r.directionalShadowMatrix[h] = e.shadow.matrix, f++;\n                        }\n                        r.directional[h] = t, h++;\n                    } else if (e.isSpotLight) {\n                        const t = n.get(e);\n                        if (t.position.setFromMatrixPosition(e.matrixWorld), t.color.copy(a).multiplyScalar(x * y), t.distance = _, t.coneCos = Math.cos(e.angle), t.penumbraCos = Math.cos(e.angle * (1 - e.penumbra)), t.decay = e.decay, e.castShadow) {\n                            const t = e.shadow, n = i.get(e);\n                            n.shadowBias = t.bias, n.shadowNormalBias = t.normalBias, n.shadowRadius = t.radius, n.shadowMapSize = t.mapSize, r.spotShadow[d] = n, r.spotShadowMap[d] = M, r.spotShadowMatrix[d] = e.shadow.matrix, v++;\n                        }\n                        r.spot[d] = t, d++;\n                    } else if (e.isRectAreaLight) {\n                        const t = n.get(e);\n                        t.color.copy(a).multiplyScalar(x), t.halfWidth.set(.5 * e.width, 0, 0), t.halfHeight.set(0, .5 * e.height, 0), r.rectArea[p] = t, p++;\n                    } else if (e.isPointLight) {\n                        const t = n.get(e);\n                        if (t.color.copy(e.color).multiplyScalar(e.intensity * y), t.distance = e.distance, t.decay = e.decay, e.castShadow) {\n                            const t = e.shadow, n = i.get(e);\n                            n.shadowBias = t.bias, n.shadowNormalBias = t.normalBias, n.shadowRadius = t.radius, n.shadowMapSize = t.mapSize, n.shadowCameraNear = t.camera.near, n.shadowCameraFar = t.camera.far, r.pointShadow[u] = n, r.pointShadowMap[u] = M, r.pointShadowMatrix[u] = e.shadow.matrix, g++;\n                        }\n                        r.point[u] = t, u++;\n                    } else if (e.isHemisphereLight) {\n                        const t = n.get(e);\n                        t.skyColor.copy(e.color).multiplyScalar(x * y), t.groundColor.copy(e.groundColor).multiplyScalar(x * y), r.hemi[m] = t, m++;\n                    }\n                }\n                p > 0 && (e.isWebGL2 || !0 === t.has(\"OES_texture_float_linear\") ? (r.rectAreaLTC1 = mi.LTC_FLOAT_1, r.rectAreaLTC2 = mi.LTC_FLOAT_2) : !0 === t.has(\"OES_texture_half_float_linear\") ? (r.rectAreaLTC1 = mi.LTC_HALF_1, r.rectAreaLTC2 = mi.LTC_HALF_2) : console.error(\"THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.\")), r.ambient[0] = o, r.ambient[1] = l, r.ambient[2] = c;\n                const x = r.hash;\n                x.directionalLength === h && x.pointLength === u && x.spotLength === d && x.rectAreaLength === p && x.hemiLength === m && x.numDirectionalShadows === f && x.numPointShadows === g && x.numSpotShadows === v || (r.directional.length = h, r.spot.length = d, r.rectArea.length = p, r.point.length = u, r.hemi.length = m, r.directionalShadow.length = f, r.directionalShadowMap.length = f, r.pointShadow.length = g, r.pointShadowMap.length = g, r.spotShadow.length = v, r.spotShadowMap.length = v, r.directionalShadowMatrix.length = f, r.pointShadowMatrix.length = g, r.spotShadowMatrix.length = v, x.directionalLength = h, x.pointLength = u, x.spotLength = d, x.rectAreaLength = p, x.hemiLength = m, x.numDirectionalShadows = f, x.numPointShadows = g, x.numSpotShadows = v, r.version = Ns++);\n            },\n            setupView: function(t, e) {\n                let n = 0, i = 0, l = 0, c = 0, h = 0;\n                const u = e.matrixWorldInverse;\n                for(let e = 0, d = t.length; e < d; e++){\n                    const d = t[e];\n                    if (d.isDirectionalLight) {\n                        const t = r.directional[n];\n                        t.direction.setFromMatrixPosition(d.matrixWorld), s.setFromMatrixPosition(d.target.matrixWorld), t.direction.sub(s), t.direction.transformDirection(u), n++;\n                    } else if (d.isSpotLight) {\n                        const t = r.spot[l];\n                        t.position.setFromMatrixPosition(d.matrixWorld), t.position.applyMatrix4(u), t.direction.setFromMatrixPosition(d.matrixWorld), s.setFromMatrixPosition(d.target.matrixWorld), t.direction.sub(s), t.direction.transformDirection(u), l++;\n                    } else if (d.isRectAreaLight) {\n                        const t = r.rectArea[c];\n                        t.position.setFromMatrixPosition(d.matrixWorld), t.position.applyMatrix4(u), o.identity(), a.copy(d.matrixWorld), a.premultiply(u), o.extractRotation(a), t.halfWidth.set(.5 * d.width, 0, 0), t.halfHeight.set(0, .5 * d.height, 0), t.halfWidth.applyMatrix4(o), t.halfHeight.applyMatrix4(o), c++;\n                    } else if (d.isPointLight) {\n                        const t = r.point[i];\n                        t.position.setFromMatrixPosition(d.matrixWorld), t.position.applyMatrix4(u), i++;\n                    } else if (d.isHemisphereLight) {\n                        const t = r.hemi[h];\n                        t.direction.setFromMatrixPosition(d.matrixWorld), t.direction.transformDirection(u), t.direction.normalize(), h++;\n                    }\n                }\n            },\n            state: r\n        };\n    }\n    function Fs(t, e) {\n        const n = new Bs(t, e), i = [], r = [];\n        return {\n            init: function() {\n                i.length = 0, r.length = 0;\n            },\n            state: {\n                lightsArray: i,\n                shadowsArray: r,\n                lights: n\n            },\n            setupLights: function(t) {\n                n.setup(i, t);\n            },\n            setupLightsView: function(t) {\n                n.setupView(i, t);\n            },\n            pushLight: function(t) {\n                i.push(t);\n            },\n            pushShadow: function(t) {\n                r.push(t);\n            }\n        };\n    }\n    function Os(t, e) {\n        let n = new WeakMap;\n        return {\n            get: function(i, r = 0) {\n                let s;\n                return !1 === n.has(i) ? (s = new Fs(t, e), n.set(i, [\n                    s\n                ])) : r >= n.get(i).length ? (s = new Fs(t, e), n.get(i).push(s)) : s = n.get(i)[r], s;\n            },\n            dispose: function() {\n                n = new WeakMap;\n            }\n        };\n    }\n    class Us extends Ze {\n        constructor(t){\n            super(), this.type = \"MeshDepthMaterial\", this.depthPacking = 3200, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.depthPacking = t.depthPacking, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this;\n        }\n    }\n    Us.prototype.isMeshDepthMaterial = !0;\n    class Hs extends Ze {\n        constructor(t){\n            super(), this.type = \"MeshDistanceMaterial\", this.referencePosition = new zt, this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.referencePosition.copy(t.referencePosition), this.nearDistance = t.nearDistance, this.farDistance = t.farDistance, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this;\n        }\n    }\n    Hs.prototype.isMeshDistanceMaterial = !0;\n    function Gs(t, e, n) {\n        let i = new ci;\n        const r = new yt, s = new yt, a = new Ct, o = new Us({\n            depthPacking: 3201\n        }), l = new Hs, c = {}, h = n.maxTextureSize, u = {\n            0: 1,\n            1: 0,\n            2: 2\n        }, d = new Zn({\n            defines: {\n                VSM_SAMPLES: 8\n            },\n            uniforms: {\n                shadow_pass: {\n                    value: null\n                },\n                resolution: {\n                    value: new yt\n                },\n                radius: {\n                    value: 4\n                }\n            },\n            vertexShader: \"void main() {\\n\tgl_Position = vec4( position, 1.0 );\\n}\",\n            fragmentShader: \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\tconst float samples = float( VSM_SAMPLES );\\n\tfloat mean = 0.0;\\n\tfloat squared_mean = 0.0;\\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\t\tfloat uvOffset = uvStart + i * uvStride;\\n\t\t#ifdef HORIZONTAL_PASS\\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\t\t\tmean += distribution.x;\\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\t\t#else\\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\t\t\tmean += depth;\\n\t\t\tsquared_mean += depth * depth;\\n\t\t#endif\\n\t}\\n\tmean = mean / samples;\\n\tsquared_mean = squared_mean / samples;\\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\"\n        }), m = d.clone();\n        m.defines.HORIZONTAL_PASS = 1;\n        const f = new En;\n        f.setAttribute(\"position\", new ln(new Float32Array([\n            -1,\n            -1,\n            .5,\n            3,\n            -1,\n            .5,\n            -1,\n            3,\n            .5\n        ]), 3));\n        const v = new Wn(f, d), y = this;\n        function x(n, i) {\n            const r = e.update(v);\n            d.defines.VSM_SAMPLES !== n.blurSamples && (d.defines.VSM_SAMPLES = n.blurSamples, m.defines.VSM_SAMPLES = n.blurSamples, d.needsUpdate = !0, m.needsUpdate = !0), d.uniforms.shadow_pass.value = n.map.texture, d.uniforms.resolution.value = n.mapSize, d.uniforms.radius.value = n.radius, t.setRenderTarget(n.mapPass), t.clear(), t.renderBufferDirect(i, null, r, d, v, null), m.uniforms.shadow_pass.value = n.mapPass.texture, m.uniforms.resolution.value = n.mapSize, m.uniforms.radius.value = n.radius, t.setRenderTarget(n.map), t.clear(), t.renderBufferDirect(i, null, r, m, v, null);\n        }\n        function _(e, n, i, r, s, a, h) {\n            let d = null;\n            const p = !0 === r.isPointLight ? e.customDistanceMaterial : e.customDepthMaterial;\n            if (d = void 0 !== p ? p : !0 === r.isPointLight ? l : o, t.localClippingEnabled && !0 === i.clipShadows && 0 !== i.clippingPlanes.length || i.displacementMap && 0 !== i.displacementScale || i.alphaMap && i.alphaTest > 0) {\n                const t = d.uuid, e = i.uuid;\n                let n = c[t];\n                void 0 === n && (n = {}, c[t] = n);\n                let r = n[e];\n                void 0 === r && (r = d.clone(), n[e] = r), d = r;\n            }\n            return d.visible = i.visible, d.wireframe = i.wireframe, d.side = 3 === h ? null !== i.shadowSide ? i.shadowSide : i.side : null !== i.shadowSide ? i.shadowSide : u[i.side], d.alphaMap = i.alphaMap, d.alphaTest = i.alphaTest, d.clipShadows = i.clipShadows, d.clippingPlanes = i.clippingPlanes, d.clipIntersection = i.clipIntersection, d.displacementMap = i.displacementMap, d.displacementScale = i.displacementScale, d.displacementBias = i.displacementBias, d.wireframeLinewidth = i.wireframeLinewidth, d.linewidth = i.linewidth, !0 === r.isPointLight && !0 === d.isMeshDistanceMaterial && (d.referencePosition.setFromMatrixPosition(r.matrixWorld), d.nearDistance = s, d.farDistance = a), d;\n        }\n        function M(n, r, s, a, o) {\n            if (!1 === n.visible) return;\n            if (n.layers.test(r.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && 3 === o) && (!n.frustumCulled || i.intersectsObject(n))) {\n                n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse, n.matrixWorld);\n                const i = e.update(n), r = n.material;\n                if (Array.isArray(r)) {\n                    const e = i.groups;\n                    for(let l = 0, c = e.length; l < c; l++){\n                        const c = e[l], h = r[c.materialIndex];\n                        if (h && h.visible) {\n                            const e = _(n, 0, h, a, s.near, s.far, o);\n                            t.renderBufferDirect(s, null, i, e, n, c);\n                        }\n                    }\n                } else if (r.visible) {\n                    const e = _(n, 0, r, a, s.near, s.far, o);\n                    t.renderBufferDirect(s, null, i, e, n, null);\n                }\n            }\n            const l = n.children;\n            for(let t = 0, e = l.length; t < e; t++)M(l[t], r, s, a, o);\n        }\n        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = 1, this.render = function(e, n, o) {\n            if (!1 === y.enabled) return;\n            if (!1 === y.autoUpdate && !1 === y.needsUpdate) return;\n            if (0 === e.length) return;\n            const l = t.getRenderTarget(), c = t.getActiveCubeFace(), u = t.getActiveMipmapLevel(), d = t.state;\n            d.setBlending(0), d.buffers.color.setClear(1, 1, 1, 1), d.buffers.depth.setTest(!0), d.setScissorTest(!1);\n            for(let l = 0, c = e.length; l < c; l++){\n                const c = e[l], u = c.shadow;\n                if (void 0 === u) {\n                    console.warn(\"THREE.WebGLShadowMap:\", c, \"has no shadow.\");\n                    continue;\n                }\n                if (!1 === u.autoUpdate && !1 === u.needsUpdate) continue;\n                r.copy(u.mapSize);\n                const m = u.getFrameExtents();\n                if (r.multiply(m), s.copy(u.mapSize), (r.x > h || r.y > h) && (r.x > h && (s.x = Math.floor(h / m.x), r.x = s.x * m.x, u.mapSize.x = s.x), r.y > h && (s.y = Math.floor(h / m.y), r.y = s.y * m.y, u.mapSize.y = s.y)), null === u.map && !u.isPointLightShadow && 3 === this.type) {\n                    const t = {\n                        minFilter: g,\n                        magFilter: g,\n                        format: E\n                    };\n                    u.map = new Pt(r.x, r.y, t), u.map.texture.name = c.name + \".shadowMap\", u.mapPass = new Pt(r.x, r.y, t), u.camera.updateProjectionMatrix();\n                }\n                if (null === u.map) {\n                    const t = {\n                        minFilter: p,\n                        magFilter: p,\n                        format: E\n                    };\n                    u.map = new Pt(r.x, r.y, t), u.map.texture.name = c.name + \".shadowMap\", u.camera.updateProjectionMatrix();\n                }\n                t.setRenderTarget(u.map), t.clear();\n                const f = u.getViewportCount();\n                for(let t = 0; t < f; t++){\n                    const e = u.getViewport(t);\n                    a.set(s.x * e.x, s.y * e.y, s.x * e.z, s.y * e.w), d.viewport(a), u.updateMatrices(c, t), i = u.getFrustum(), M(n, o, u.camera, c, this.type);\n                }\n                u.isPointLightShadow || 3 !== this.type || x(u, o), u.needsUpdate = !1;\n            }\n            y.needsUpdate = !1, t.setRenderTarget(l, c, u);\n        };\n    }\n    function ks(t, e, i) {\n        const r = i.isWebGL2;\n        const s = new function() {\n            let e = !1;\n            const n = new Ct;\n            let i = null;\n            const r = new Ct(0, 0, 0, 0);\n            return {\n                setMask: function(n) {\n                    i === n || e || (t.colorMask(n, n, n, n), i = n);\n                },\n                setLocked: function(t) {\n                    e = t;\n                },\n                setClear: function(e, i, s, a, o) {\n                    !0 === o && (e *= a, i *= a, s *= a), n.set(e, i, s, a), !1 === r.equals(n) && (t.clearColor(e, i, s, a), r.copy(n));\n                },\n                reset: function() {\n                    e = !1, i = null, r.set(-1, 0, 0, 0);\n                }\n            };\n        }, a = new function() {\n            let e = !1, n = null, i = null, r = null;\n            return {\n                setTest: function(t) {\n                    t ? O(2929) : U(2929);\n                },\n                setMask: function(i) {\n                    n === i || e || (t.depthMask(i), n = i);\n                },\n                setFunc: function(e) {\n                    if (i !== e) {\n                        if (e) switch(e){\n                            case 0:\n                                t.depthFunc(512);\n                                break;\n                            case 1:\n                                t.depthFunc(519);\n                                break;\n                            case 2:\n                                t.depthFunc(513);\n                                break;\n                            default:\n                                t.depthFunc(515);\n                                break;\n                            case 4:\n                                t.depthFunc(514);\n                                break;\n                            case 5:\n                                t.depthFunc(518);\n                                break;\n                            case 6:\n                                t.depthFunc(516);\n                                break;\n                            case 7:\n                                t.depthFunc(517);\n                        }\n                        else t.depthFunc(515);\n                        i = e;\n                    }\n                },\n                setLocked: function(t) {\n                    e = t;\n                },\n                setClear: function(e) {\n                    r !== e && (t.clearDepth(e), r = e);\n                },\n                reset: function() {\n                    e = !1, n = null, i = null, r = null;\n                }\n            };\n        }, o = new function() {\n            let e = !1, n = null, i = null, r = null, s = null, a = null, o = null, l = null, c = null;\n            return {\n                setTest: function(t) {\n                    e || (t ? O(2960) : U(2960));\n                },\n                setMask: function(i) {\n                    n === i || e || (t.stencilMask(i), n = i);\n                },\n                setFunc: function(e, n, a) {\n                    i === e && r === n && s === a || (t.stencilFunc(e, n, a), i = e, r = n, s = a);\n                },\n                setOp: function(e, n, i) {\n                    a === e && o === n && l === i || (t.stencilOp(e, n, i), a = e, o = n, l = i);\n                },\n                setLocked: function(t) {\n                    e = t;\n                },\n                setClear: function(e) {\n                    c !== e && (t.clearStencil(e), c = e);\n                },\n                reset: function() {\n                    e = !1, n = null, i = null, r = null, s = null, a = null, o = null, l = null, c = null;\n                }\n            };\n        };\n        let l = {}, c = null, h = {}, u = null, d = !1, p = null, m = null, f = null, g = null, v = null, y = null, x = null, _ = !1, M = null, b = null, w = null, S = null, T = null;\n        const E = t.getParameter(35661);\n        let A = !1, L = 0;\n        const R = t.getParameter(7938);\n        -1 !== R.indexOf(\"WebGL\") ? (L = parseFloat(/^WebGL (\\d)/.exec(R)[1]), A = L >= 1) : -1 !== R.indexOf(\"OpenGL ES\") && (L = parseFloat(/^OpenGL ES (\\d)/.exec(R)[1]), A = L >= 2);\n        let C = null, P = {};\n        const I = t.getParameter(3088), D = t.getParameter(2978), N = (new Ct).fromArray(I), z = (new Ct).fromArray(D);\n        function B(e, n, i) {\n            const r = new Uint8Array(4), s = t.createTexture();\n            t.bindTexture(e, s), t.texParameteri(e, 10241, 9728), t.texParameteri(e, 10240, 9728);\n            for(let e = 0; e < i; e++)t.texImage2D(n + e, 0, 6408, 1, 1, 0, 6408, 5121, r);\n            return s;\n        }\n        const F = {};\n        function O(e) {\n            !0 !== l[e] && (t.enable(e), l[e] = !0);\n        }\n        function U(e) {\n            !1 !== l[e] && (t.disable(e), l[e] = !1);\n        }\n        F[3553] = B(3553, 3553, 1), F[34067] = B(34067, 34069, 6), s.setClear(0, 0, 0, 1), a.setClear(1), o.setClear(0), O(2929), a.setFunc(3), V(!1), W(1), O(2884), k(0);\n        const H = {\n            [n]: 32774,\n            101: 32778,\n            102: 32779\n        };\n        if (r) H[103] = 32775, H[104] = 32776;\n        else {\n            const t = e.get(\"EXT_blend_minmax\");\n            null !== t && (H[103] = t.MIN_EXT, H[104] = t.MAX_EXT);\n        }\n        const G = {\n            200: 0,\n            201: 1,\n            202: 768,\n            204: 770,\n            210: 776,\n            208: 774,\n            206: 772,\n            203: 769,\n            205: 771,\n            209: 775,\n            207: 773\n        };\n        function k(e, i, r, s, a, o, l, c) {\n            if (0 !== e) {\n                if (!1 === d && (O(3042), d = !0), 5 === e) a = a || i, o = o || r, l = l || s, i === m && a === v || (t.blendEquationSeparate(H[i], H[a]), m = i, v = a), r === f && s === g && o === y && l === x || (t.blendFuncSeparate(G[r], G[s], G[o], G[l]), f = r, g = s, y = o, x = l), p = e, _ = null;\n                else if (e !== p || c !== _) {\n                    if (m === n && v === n || (t.blendEquation(32774), m = n, v = n), c) switch(e){\n                        case 1:\n                            t.blendFuncSeparate(1, 771, 1, 771);\n                            break;\n                        case 2:\n                            t.blendFunc(1, 1);\n                            break;\n                        case 3:\n                            t.blendFuncSeparate(0, 0, 769, 771);\n                            break;\n                        case 4:\n                            t.blendFuncSeparate(0, 768, 0, 770);\n                            break;\n                        default:\n                            console.error(\"THREE.WebGLState: Invalid blending: \", e);\n                    }\n                    else switch(e){\n                        case 1:\n                            t.blendFuncSeparate(770, 771, 1, 771);\n                            break;\n                        case 2:\n                            t.blendFunc(770, 1);\n                            break;\n                        case 3:\n                            t.blendFunc(0, 769);\n                            break;\n                        case 4:\n                            t.blendFunc(0, 768);\n                            break;\n                        default:\n                            console.error(\"THREE.WebGLState: Invalid blending: \", e);\n                    }\n                    f = null, g = null, y = null, x = null, p = e, _ = c;\n                }\n            } else !0 === d && (U(3042), d = !1);\n        }\n        function V(e) {\n            M !== e && (e ? t.frontFace(2304) : t.frontFace(2305), M = e);\n        }\n        function W(e) {\n            0 !== e ? (O(2884), e !== b && (1 === e ? t.cullFace(1029) : 2 === e ? t.cullFace(1028) : t.cullFace(1032))) : U(2884), b = e;\n        }\n        function j(e, n, i) {\n            e ? (O(32823), S === n && T === i || (t.polygonOffset(n, i), S = n, T = i)) : U(32823);\n        }\n        function q(e) {\n            void 0 === e && (e = 33984 + E - 1), C !== e && (t.activeTexture(e), C = e);\n        }\n        return {\n            buffers: {\n                color: s,\n                depth: a,\n                stencil: o\n            },\n            enable: O,\n            disable: U,\n            bindFramebuffer: function(e, n) {\n                return null === n && null !== c && (n = c), h[e] !== n && (t.bindFramebuffer(e, n), h[e] = n, r && (36009 === e && (h[36160] = n), 36160 === e && (h[36009] = n)), !0);\n            },\n            bindXRFramebuffer: function(e) {\n                e !== c && (t.bindFramebuffer(36160, e), c = e);\n            },\n            useProgram: function(e) {\n                return u !== e && (t.useProgram(e), u = e, !0);\n            },\n            setBlending: k,\n            setMaterial: function(t, e) {\n                2 === t.side ? U(2884) : O(2884);\n                let n = 1 === t.side;\n                e && (n = !n), V(n), 1 === t.blending && !1 === t.transparent ? k(0) : k(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha), a.setFunc(t.depthFunc), a.setTest(t.depthTest), a.setMask(t.depthWrite), s.setMask(t.colorWrite);\n                const i = t.stencilWrite;\n                o.setTest(i), i && (o.setMask(t.stencilWriteMask), o.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask), o.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)), j(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits), !0 === t.alphaToCoverage ? O(32926) : U(32926);\n            },\n            setFlipSided: V,\n            setCullFace: W,\n            setLineWidth: function(e) {\n                e !== w && (A && t.lineWidth(e), w = e);\n            },\n            setPolygonOffset: j,\n            setScissorTest: function(t) {\n                t ? O(3089) : U(3089);\n            },\n            activeTexture: q,\n            bindTexture: function(e, n) {\n                null === C && q();\n                let i = P[C];\n                void 0 === i && (i = {\n                    type: void 0,\n                    texture: void 0\n                }, P[C] = i), i.type === e && i.texture === n || (t.bindTexture(e, n || F[e]), i.type = e, i.texture = n);\n            },\n            unbindTexture: function() {\n                const e = P[C];\n                void 0 !== e && void 0 !== e.type && (t.bindTexture(e.type, null), e.type = void 0, e.texture = void 0);\n            },\n            compressedTexImage2D: function() {\n                try {\n                    t.compressedTexImage2D.apply(t, arguments);\n                } catch (t) {\n                    console.error(\"THREE.WebGLState:\", t);\n                }\n            },\n            texImage2D: function() {\n                try {\n                    t.texImage2D.apply(t, arguments);\n                } catch (t) {\n                    console.error(\"THREE.WebGLState:\", t);\n                }\n            },\n            texImage3D: function() {\n                try {\n                    t.texImage3D.apply(t, arguments);\n                } catch (t) {\n                    console.error(\"THREE.WebGLState:\", t);\n                }\n            },\n            scissor: function(e) {\n                !1 === N.equals(e) && (t.scissor(e.x, e.y, e.z, e.w), N.copy(e));\n            },\n            viewport: function(e) {\n                !1 === z.equals(e) && (t.viewport(e.x, e.y, e.z, e.w), z.copy(e));\n            },\n            reset: function() {\n                t.disable(3042), t.disable(2884), t.disable(2929), t.disable(32823), t.disable(3089), t.disable(2960), t.disable(32926), t.blendEquation(32774), t.blendFunc(1, 0), t.blendFuncSeparate(1, 0, 1, 0), t.colorMask(!0, !0, !0, !0), t.clearColor(0, 0, 0, 0), t.depthMask(!0), t.depthFunc(513), t.clearDepth(1), t.stencilMask(4294967295), t.stencilFunc(519, 0, 4294967295), t.stencilOp(7680, 7680, 7680), t.clearStencil(0), t.cullFace(1029), t.frontFace(2305), t.polygonOffset(0, 0), t.activeTexture(33984), t.bindFramebuffer(36160, null), !0 === r && (t.bindFramebuffer(36009, null), t.bindFramebuffer(36008, null)), t.useProgram(null), t.lineWidth(1), t.scissor(0, 0, t.canvas.width, t.canvas.height), t.viewport(0, 0, t.canvas.width, t.canvas.height), l = {}, C = null, P = {}, c = null, h = {}, u = null, d = !1, p = null, m = null, f = null, g = null, v = null, y = null, x = null, _ = !1, M = null, b = null, w = null, S = null, T = null, N.set(0, 0, t.canvas.width, t.canvas.height), z.set(0, 0, t.canvas.width, t.canvas.height), s.reset(), a.reset(), o.reset();\n            }\n        };\n    }\n    function Vs(t, e, n, i, r, s, a) {\n        const o = r.isWebGL2, l = r.maxTextures, c = r.maxCubemapSize, x = r.maxTextureSize, R = r.maxSamples, C = new WeakMap;\n        let P, I = !1;\n        try {\n            I = \"undefined\" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1, 1).getContext(\"2d\");\n        } catch (t) {}\n        function D(t, e) {\n            return I ? new OffscreenCanvas(t, e) : wt(\"canvas\");\n        }\n        function N(t, e, n, i) {\n            let r = 1;\n            if ((t.width > i || t.height > i) && (r = i / Math.max(t.width, t.height)), r < 1 || !0 === e) {\n                if (\"undefined\" != typeof HTMLImageElement && t instanceof HTMLImageElement || \"undefined\" != typeof HTMLCanvasElement && t instanceof HTMLCanvasElement || \"undefined\" != typeof ImageBitmap && t instanceof ImageBitmap) {\n                    const i = e ? gt : Math.floor, s = i(r * t.width), a = i(r * t.height);\n                    void 0 === P && (P = D(s, a));\n                    const o = n ? D(s, a) : P;\n                    o.width = s, o.height = a;\n                    return o.getContext(\"2d\").drawImage(t, 0, 0, s, a), console.warn(\"THREE.WebGLRenderer: Texture has been resized from (\" + t.width + \"x\" + t.height + \") to (\" + s + \"x\" + a + \").\"), o;\n                }\n                return \"data\" in t && console.warn(\"THREE.WebGLRenderer: Image in DataTexture is too big (\" + t.width + \"x\" + t.height + \").\"), t;\n            }\n            return t;\n        }\n        function z(t) {\n            return mt(t.width) && mt(t.height);\n        }\n        function B(t, e) {\n            return t.generateMipmaps && e && t.minFilter !== p && t.minFilter !== g;\n        }\n        function F(e, n, r, s, a = 1) {\n            t.generateMipmap(e);\n            i.get(n).__maxMipLevel = Math.log2(Math.max(r, s, a));\n        }\n        function O(n, i, r, s) {\n            if (!1 === o) return i;\n            if (null !== n) {\n                if (void 0 !== t[n]) return t[n];\n                console.warn(\"THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '\" + n + \"'\");\n            }\n            let a = i;\n            return 6403 === i && (5126 === r && (a = 33326), 5131 === r && (a = 33325), 5121 === r && (a = 33321)), 6407 === i && (5126 === r && (a = 34837), 5131 === r && (a = 34843), 5121 === r && (a = 32849)), 6408 === i && (5126 === r && (a = 34836), 5131 === r && (a = 34842), 5121 === r && (a = s === Y ? 35907 : 32856)), 33325 !== a && 33326 !== a && 34842 !== a && 34836 !== a || e.get(\"EXT_color_buffer_float\"), a;\n        }\n        function U(t) {\n            return t === p || t === m || t === f ? 9728 : 9729;\n        }\n        function H(e) {\n            const n = e.target;\n            n.removeEventListener(\"dispose\", H), function(e) {\n                const n = i.get(e);\n                if (void 0 === n.__webglInit) return;\n                t.deleteTexture(n.__webglTexture), i.remove(e);\n            }(n), n.isVideoTexture && C.delete(n), a.memory.textures--;\n        }\n        function G(e) {\n            const n = e.target;\n            n.removeEventListener(\"dispose\", G), function(e) {\n                const n = e.texture, r = i.get(e), s = i.get(n);\n                if (!e) return;\n                void 0 !== s.__webglTexture && (t.deleteTexture(s.__webglTexture), a.memory.textures--);\n                e.depthTexture && e.depthTexture.dispose();\n                if (e.isWebGLCubeRenderTarget) for(let e = 0; e < 6; e++)t.deleteFramebuffer(r.__webglFramebuffer[e]), r.__webglDepthbuffer && t.deleteRenderbuffer(r.__webglDepthbuffer[e]);\n                else t.deleteFramebuffer(r.__webglFramebuffer), r.__webglDepthbuffer && t.deleteRenderbuffer(r.__webglDepthbuffer), r.__webglMultisampledFramebuffer && t.deleteFramebuffer(r.__webglMultisampledFramebuffer), r.__webglColorRenderbuffer && t.deleteRenderbuffer(r.__webglColorRenderbuffer), r.__webglDepthRenderbuffer && t.deleteRenderbuffer(r.__webglDepthRenderbuffer);\n                if (e.isWebGLMultipleRenderTargets) for(let e = 0, r = n.length; e < r; e++){\n                    const r = i.get(n[e]);\n                    r.__webglTexture && (t.deleteTexture(r.__webglTexture), a.memory.textures--), i.remove(n[e]);\n                }\n                i.remove(n), i.remove(e);\n            }(n);\n        }\n        let k = 0;\n        function V(t, e) {\n            const r = i.get(t);\n            if (t.isVideoTexture && function(t) {\n                const e = a.render.frame;\n                C.get(t) !== e && (C.set(t, e), t.update());\n            }(t), t.version > 0 && r.__version !== t.version) {\n                const n = t.image;\n                if (void 0 === n) console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\");\n                else {\n                    if (!1 !== n.complete) return void Z(r, t, e);\n                    console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\");\n                }\n            }\n            n.activeTexture(33984 + e), n.bindTexture(3553, r.__webglTexture);\n        }\n        function W(e, r) {\n            const a = i.get(e);\n            e.version > 0 && a.__version !== e.version ? function(e, i, r) {\n                if (6 !== i.image.length) return;\n                J(e, i), n.activeTexture(33984 + r), n.bindTexture(34067, e.__webglTexture), t.pixelStorei(37440, i.flipY), t.pixelStorei(37441, i.premultiplyAlpha), t.pixelStorei(3317, i.unpackAlignment), t.pixelStorei(37443, 0);\n                const a = i && (i.isCompressedTexture || i.image[0].isCompressedTexture), l = i.image[0] && i.image[0].isDataTexture, h = [];\n                for(let t = 0; t < 6; t++)h[t] = a || l ? l ? i.image[t].image : i.image[t] : N(i.image[t], !1, !0, c);\n                const u = h[0], d = z(u) || o, p = s.convert(i.format), m = s.convert(i.type), f = O(i.internalFormat, p, m, i.encoding);\n                let g;\n                if (X(34067, i, d), a) {\n                    for(let t = 0; t < 6; t++){\n                        g = h[t].mipmaps;\n                        for(let e = 0; e < g.length; e++){\n                            const r = g[e];\n                            i.format !== E && i.format !== T ? null !== p ? n.compressedTexImage2D(34069 + t, e, f, r.width, r.height, 0, r.data) : console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\") : n.texImage2D(34069 + t, e, f, r.width, r.height, 0, p, m, r.data);\n                        }\n                    }\n                    e.__maxMipLevel = g.length - 1;\n                } else {\n                    g = i.mipmaps;\n                    for(let t = 0; t < 6; t++)if (l) {\n                        n.texImage2D(34069 + t, 0, f, h[t].width, h[t].height, 0, p, m, h[t].data);\n                        for(let e = 0; e < g.length; e++){\n                            const i = g[e].image[t].image;\n                            n.texImage2D(34069 + t, e + 1, f, i.width, i.height, 0, p, m, i.data);\n                        }\n                    } else {\n                        n.texImage2D(34069 + t, 0, f, p, m, h[t]);\n                        for(let e = 0; e < g.length; e++){\n                            const i = g[e];\n                            n.texImage2D(34069 + t, e + 1, f, p, m, i.image[t]);\n                        }\n                    }\n                    e.__maxMipLevel = g.length;\n                }\n                B(i, d) && F(34067, i, u.width, u.height);\n                e.__version = i.version, i.onUpdate && i.onUpdate(i);\n            }(a, e, r) : (n.activeTexture(33984 + r), n.bindTexture(34067, a.__webglTexture));\n        }\n        const j = {\n            [h]: 10497,\n            [u]: 33071,\n            [d]: 33648\n        }, q = {\n            [p]: 9728,\n            [m]: 9984,\n            [f]: 9986,\n            [g]: 9729,\n            [v]: 9985,\n            [y]: 9987\n        };\n        function X(n, s, a) {\n            if (a ? (t.texParameteri(n, 10242, j[s.wrapS]), t.texParameteri(n, 10243, j[s.wrapT]), 32879 !== n && 35866 !== n || t.texParameteri(n, 32882, j[s.wrapR]), t.texParameteri(n, 10240, q[s.magFilter]), t.texParameteri(n, 10241, q[s.minFilter])) : (t.texParameteri(n, 10242, 33071), t.texParameteri(n, 10243, 33071), 32879 !== n && 35866 !== n || t.texParameteri(n, 32882, 33071), s.wrapS === u && s.wrapT === u || console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\"), t.texParameteri(n, 10240, U(s.magFilter)), t.texParameteri(n, 10241, U(s.minFilter)), s.minFilter !== p && s.minFilter !== g && console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\")), !0 === e.has(\"EXT_texture_filter_anisotropic\")) {\n                const a = e.get(\"EXT_texture_filter_anisotropic\");\n                if (s.type === b && !1 === e.has(\"OES_texture_float_linear\")) return;\n                if (!1 === o && s.type === w && !1 === e.has(\"OES_texture_half_float_linear\")) return;\n                (s.anisotropy > 1 || i.get(s).__currentAnisotropy) && (t.texParameterf(n, a.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(s.anisotropy, r.getMaxAnisotropy())), i.get(s).__currentAnisotropy = s.anisotropy);\n            }\n        }\n        function J(e, n) {\n            void 0 === e.__webglInit && (e.__webglInit = !0, n.addEventListener(\"dispose\", H), e.__webglTexture = t.createTexture(), a.memory.textures++);\n        }\n        function Z(e, i, r) {\n            let a = 3553;\n            i.isDataTexture2DArray && (a = 35866), i.isDataTexture3D && (a = 32879), J(e, i), n.activeTexture(33984 + r), n.bindTexture(a, e.__webglTexture), t.pixelStorei(37440, i.flipY), t.pixelStorei(37441, i.premultiplyAlpha), t.pixelStorei(3317, i.unpackAlignment), t.pixelStorei(37443, 0);\n            const l = function(t) {\n                return !o && (t.wrapS !== u || t.wrapT !== u || t.minFilter !== p && t.minFilter !== g);\n            }(i) && !1 === z(i.image), c = N(i.image, l, !1, x), h = z(c) || o, d = s.convert(i.format);\n            let m, f = s.convert(i.type), v = O(i.internalFormat, d, f, i.encoding);\n            X(a, i, h);\n            const y = i.mipmaps;\n            if (i.isDepthTexture) v = 6402, o ? v = i.type === b ? 36012 : i.type === M ? 33190 : i.type === S ? 35056 : 33189 : i.type === b && console.error(\"WebGLRenderer: Floating point depth texture requires WebGL2.\"), i.format === A && 6402 === v && i.type !== _ && i.type !== M && (console.warn(\"THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.\"), i.type = _, f = s.convert(i.type)), i.format === L && 6402 === v && (v = 34041, i.type !== S && (console.warn(\"THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.\"), i.type = S, f = s.convert(i.type))), n.texImage2D(3553, 0, v, c.width, c.height, 0, d, f, null);\n            else if (i.isDataTexture) {\n                if (y.length > 0 && h) {\n                    for(let t = 0, e = y.length; t < e; t++)m = y[t], n.texImage2D(3553, t, v, m.width, m.height, 0, d, f, m.data);\n                    i.generateMipmaps = !1, e.__maxMipLevel = y.length - 1;\n                } else n.texImage2D(3553, 0, v, c.width, c.height, 0, d, f, c.data), e.__maxMipLevel = 0;\n            } else if (i.isCompressedTexture) {\n                for(let t = 0, e = y.length; t < e; t++)m = y[t], i.format !== E && i.format !== T ? null !== d ? n.compressedTexImage2D(3553, t, v, m.width, m.height, 0, m.data) : console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\") : n.texImage2D(3553, t, v, m.width, m.height, 0, d, f, m.data);\n                e.__maxMipLevel = y.length - 1;\n            } else if (i.isDataTexture2DArray) n.texImage3D(35866, 0, v, c.width, c.height, c.depth, 0, d, f, c.data), e.__maxMipLevel = 0;\n            else if (i.isDataTexture3D) n.texImage3D(32879, 0, v, c.width, c.height, c.depth, 0, d, f, c.data), e.__maxMipLevel = 0;\n            else if (y.length > 0 && h) {\n                for(let t = 0, e = y.length; t < e; t++)m = y[t], n.texImage2D(3553, t, v, d, f, m);\n                i.generateMipmaps = !1, e.__maxMipLevel = y.length - 1;\n            } else n.texImage2D(3553, 0, v, d, f, c), e.__maxMipLevel = 0;\n            B(i, h) && F(a, i, c.width, c.height), e.__version = i.version, i.onUpdate && i.onUpdate(i);\n        }\n        function Q(e, r, a, o, l) {\n            const c = s.convert(a.format), h = s.convert(a.type), u = O(a.internalFormat, c, h, a.encoding);\n            32879 === l || 35866 === l ? n.texImage3D(l, 0, u, r.width, r.height, r.depth, 0, c, h, null) : n.texImage2D(l, 0, u, r.width, r.height, 0, c, h, null), n.bindFramebuffer(36160, e), t.framebufferTexture2D(36160, o, l, i.get(a).__webglTexture, 0), n.bindFramebuffer(36160, null);\n        }\n        function K(e, n, i) {\n            if (t.bindRenderbuffer(36161, e), n.depthBuffer && !n.stencilBuffer) {\n                let r = 33189;\n                if (i) {\n                    const e = n.depthTexture;\n                    e && e.isDepthTexture && (e.type === b ? r = 36012 : e.type === M && (r = 33190));\n                    const i = tt(n);\n                    t.renderbufferStorageMultisample(36161, i, r, n.width, n.height);\n                } else t.renderbufferStorage(36161, r, n.width, n.height);\n                t.framebufferRenderbuffer(36160, 36096, 36161, e);\n            } else if (n.depthBuffer && n.stencilBuffer) {\n                if (i) {\n                    const e = tt(n);\n                    t.renderbufferStorageMultisample(36161, e, 35056, n.width, n.height);\n                } else t.renderbufferStorage(36161, 34041, n.width, n.height);\n                t.framebufferRenderbuffer(36160, 33306, 36161, e);\n            } else {\n                const e = !0 === n.isWebGLMultipleRenderTargets ? n.texture[0] : n.texture, r = s.convert(e.format), a = s.convert(e.type), o = O(e.internalFormat, r, a, e.encoding);\n                if (i) {\n                    const e = tt(n);\n                    t.renderbufferStorageMultisample(36161, e, o, n.width, n.height);\n                } else t.renderbufferStorage(36161, o, n.width, n.height);\n            }\n            t.bindRenderbuffer(36161, null);\n        }\n        function $(e) {\n            const r = i.get(e), s = !0 === e.isWebGLCubeRenderTarget;\n            if (e.depthTexture) {\n                if (s) throw new Error(\"target.depthTexture not supported in Cube render targets\");\n                !function(e, r) {\n                    if (r && r.isWebGLCubeRenderTarget) throw new Error(\"Depth Texture with cube render targets is not supported\");\n                    if (n.bindFramebuffer(36160, e), !r.depthTexture || !r.depthTexture.isDepthTexture) throw new Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");\n                    i.get(r.depthTexture).__webglTexture && r.depthTexture.image.width === r.width && r.depthTexture.image.height === r.height || (r.depthTexture.image.width = r.width, r.depthTexture.image.height = r.height, r.depthTexture.needsUpdate = !0), V(r.depthTexture, 0);\n                    const s = i.get(r.depthTexture).__webglTexture;\n                    if (r.depthTexture.format === A) t.framebufferTexture2D(36160, 36096, 3553, s, 0);\n                    else {\n                        if (r.depthTexture.format !== L) throw new Error(\"Unknown depthTexture format\");\n                        t.framebufferTexture2D(36160, 33306, 3553, s, 0);\n                    }\n                }(r.__webglFramebuffer, e);\n            } else if (s) {\n                r.__webglDepthbuffer = [];\n                for(let i = 0; i < 6; i++)n.bindFramebuffer(36160, r.__webglFramebuffer[i]), r.__webglDepthbuffer[i] = t.createRenderbuffer(), K(r.__webglDepthbuffer[i], e, !1);\n            } else n.bindFramebuffer(36160, r.__webglFramebuffer), r.__webglDepthbuffer = t.createRenderbuffer(), K(r.__webglDepthbuffer, e, !1);\n            n.bindFramebuffer(36160, null);\n        }\n        function tt(t) {\n            return o && t.isWebGLMultisampleRenderTarget ? Math.min(R, t.samples) : 0;\n        }\n        let et = !1, nt = !1;\n        this.allocateTextureUnit = function() {\n            const t = k;\n            return t >= l && console.warn(\"THREE.WebGLTextures: Trying to use \" + t + \" texture units while this GPU supports only \" + l), k += 1, t;\n        }, this.resetTextureUnits = function() {\n            k = 0;\n        }, this.setTexture2D = V, this.setTexture2DArray = function(t, e) {\n            const r = i.get(t);\n            t.version > 0 && r.__version !== t.version ? Z(r, t, e) : (n.activeTexture(33984 + e), n.bindTexture(35866, r.__webglTexture));\n        }, this.setTexture3D = function(t, e) {\n            const r = i.get(t);\n            t.version > 0 && r.__version !== t.version ? Z(r, t, e) : (n.activeTexture(33984 + e), n.bindTexture(32879, r.__webglTexture));\n        }, this.setTextureCube = W, this.setupRenderTarget = function(e) {\n            const l = e.texture, c = i.get(e), h = i.get(l);\n            e.addEventListener(\"dispose\", G), !0 !== e.isWebGLMultipleRenderTargets && (h.__webglTexture = t.createTexture(), h.__version = l.version, a.memory.textures++);\n            const u = !0 === e.isWebGLCubeRenderTarget, d = !0 === e.isWebGLMultipleRenderTargets, p = !0 === e.isWebGLMultisampleRenderTarget, m = l.isDataTexture3D || l.isDataTexture2DArray, f = z(e) || o;\n            if (!o || l.format !== T || l.type !== b && l.type !== w || (l.format = E, console.warn(\"THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.\")), u) {\n                c.__webglFramebuffer = [];\n                for(let e = 0; e < 6; e++)c.__webglFramebuffer[e] = t.createFramebuffer();\n            } else if (c.__webglFramebuffer = t.createFramebuffer(), d) {\n                if (r.drawBuffers) {\n                    const n = e.texture;\n                    for(let e = 0, r = n.length; e < r; e++){\n                        const r = i.get(n[e]);\n                        void 0 === r.__webglTexture && (r.__webglTexture = t.createTexture(), a.memory.textures++);\n                    }\n                } else console.warn(\"THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.\");\n            } else if (p) {\n                if (o) {\n                    c.__webglMultisampledFramebuffer = t.createFramebuffer(), c.__webglColorRenderbuffer = t.createRenderbuffer(), t.bindRenderbuffer(36161, c.__webglColorRenderbuffer);\n                    const i = s.convert(l.format), r = s.convert(l.type), a = O(l.internalFormat, i, r, l.encoding), o = tt(e);\n                    t.renderbufferStorageMultisample(36161, o, a, e.width, e.height), n.bindFramebuffer(36160, c.__webglMultisampledFramebuffer), t.framebufferRenderbuffer(36160, 36064, 36161, c.__webglColorRenderbuffer), t.bindRenderbuffer(36161, null), e.depthBuffer && (c.__webglDepthRenderbuffer = t.createRenderbuffer(), K(c.__webglDepthRenderbuffer, e, !0)), n.bindFramebuffer(36160, null);\n                } else console.warn(\"THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.\");\n            }\n            if (u) {\n                n.bindTexture(34067, h.__webglTexture), X(34067, l, f);\n                for(let t = 0; t < 6; t++)Q(c.__webglFramebuffer[t], e, l, 36064, 34069 + t);\n                B(l, f) && F(34067, l, e.width, e.height), n.unbindTexture();\n            } else if (d) {\n                const t = e.texture;\n                for(let r = 0, s = t.length; r < s; r++){\n                    const s = t[r], a = i.get(s);\n                    n.bindTexture(3553, a.__webglTexture), X(3553, s, f), Q(c.__webglFramebuffer, e, s, 36064 + r, 3553), B(s, f) && F(3553, s, e.width, e.height);\n                }\n                n.unbindTexture();\n            } else {\n                let t = 3553;\n                if (m) {\n                    if (o) t = l.isDataTexture3D ? 32879 : 35866;\n                    else console.warn(\"THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.\");\n                }\n                n.bindTexture(t, h.__webglTexture), X(t, l, f), Q(c.__webglFramebuffer, e, l, 36064, t), B(l, f) && F(t, l, e.width, e.height, e.depth), n.unbindTexture();\n            }\n            e.depthBuffer && $(e);\n        }, this.updateRenderTargetMipmap = function(t) {\n            const e = z(t) || o, r = !0 === t.isWebGLMultipleRenderTargets ? t.texture : [\n                t.texture\n            ];\n            for(let s = 0, a = r.length; s < a; s++){\n                const a = r[s];\n                if (B(a, e)) {\n                    const e = t.isWebGLCubeRenderTarget ? 34067 : 3553, r = i.get(a).__webglTexture;\n                    n.bindTexture(e, r), F(e, a, t.width, t.height), n.unbindTexture();\n                }\n            }\n        }, this.updateMultisampleRenderTarget = function(e) {\n            if (e.isWebGLMultisampleRenderTarget) {\n                if (o) {\n                    const r = e.width, s = e.height;\n                    let a = 16384;\n                    e.depthBuffer && (a |= 256), e.stencilBuffer && (a |= 1024);\n                    const o = i.get(e);\n                    n.bindFramebuffer(36008, o.__webglMultisampledFramebuffer), n.bindFramebuffer(36009, o.__webglFramebuffer), t.blitFramebuffer(0, 0, r, s, 0, 0, r, s, a, 9728), n.bindFramebuffer(36008, null), n.bindFramebuffer(36009, o.__webglMultisampledFramebuffer);\n                } else console.warn(\"THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.\");\n            }\n        }, this.safeSetTexture2D = function(t, e) {\n            t && t.isWebGLRenderTarget && (!1 === et && (console.warn(\"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\"), et = !0), t = t.texture), V(t, e);\n        }, this.safeSetTextureCube = function(t, e) {\n            t && t.isWebGLCubeRenderTarget && (!1 === nt && (console.warn(\"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"), nt = !0), t = t.texture), W(t, e);\n        };\n    }\n    function Ws(t, e, n) {\n        const i = n.isWebGL2;\n        return {\n            convert: function(t) {\n                let n;\n                if (t === x) return 5121;\n                if (1017 === t) return 32819;\n                if (1018 === t) return 32820;\n                if (1019 === t) return 33635;\n                if (1010 === t) return 5120;\n                if (1011 === t) return 5122;\n                if (t === _) return 5123;\n                if (1013 === t) return 5124;\n                if (t === M) return 5125;\n                if (t === b) return 5126;\n                if (t === w) return i ? 5131 : (n = e.get(\"OES_texture_half_float\"), null !== n ? n.HALF_FLOAT_OES : null);\n                if (1021 === t) return 6406;\n                if (t === T) return 6407;\n                if (t === E) return 6408;\n                if (1024 === t) return 6409;\n                if (1025 === t) return 6410;\n                if (t === A) return 6402;\n                if (t === L) return 34041;\n                if (1028 === t) return 6403;\n                if (1029 === t) return 36244;\n                if (1030 === t) return 33319;\n                if (1031 === t) return 33320;\n                if (1032 === t) return 36248;\n                if (1033 === t) return 36249;\n                if (t === R || t === C || t === P || t === I) {\n                    if (n = e.get(\"WEBGL_compressed_texture_s3tc\"), null === n) return null;\n                    if (t === R) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;\n                    if (t === C) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                    if (t === P) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                    if (t === I) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                }\n                if (t === D || t === N || t === z || t === B) {\n                    if (n = e.get(\"WEBGL_compressed_texture_pvrtc\"), null === n) return null;\n                    if (t === D) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n                    if (t === N) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n                    if (t === z) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n                    if (t === B) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n                }\n                if (36196 === t) return n = e.get(\"WEBGL_compressed_texture_etc1\"), null !== n ? n.COMPRESSED_RGB_ETC1_WEBGL : null;\n                if ((t === F || t === O) && (n = e.get(\"WEBGL_compressed_texture_etc\"), null !== n)) {\n                    if (t === F) return n.COMPRESSED_RGB8_ETC2;\n                    if (t === O) return n.COMPRESSED_RGBA8_ETC2_EAC;\n                }\n                return 37808 === t || 37809 === t || 37810 === t || 37811 === t || 37812 === t || 37813 === t || 37814 === t || 37815 === t || 37816 === t || 37817 === t || 37818 === t || 37819 === t || 37820 === t || 37821 === t || 37840 === t || 37841 === t || 37842 === t || 37843 === t || 37844 === t || 37845 === t || 37846 === t || 37847 === t || 37848 === t || 37849 === t || 37850 === t || 37851 === t || 37852 === t || 37853 === t ? (n = e.get(\"WEBGL_compressed_texture_astc\"), null !== n ? t : null) : 36492 === t ? (n = e.get(\"EXT_texture_compression_bptc\"), null !== n ? t : null) : t === S ? i ? 34042 : (n = e.get(\"WEBGL_depth_texture\"), null !== n ? n.UNSIGNED_INT_24_8_WEBGL : null) : void 0;\n            }\n        };\n    }\n    class js extends Kn {\n        constructor(t = []){\n            super(), this.cameras = t;\n        }\n    }\n    js.prototype.isArrayCamera = !0;\n    class qs extends Fe {\n        constructor(){\n            super(), this.type = \"Group\";\n        }\n    }\n    qs.prototype.isGroup = !0;\n    const Xs = {\n        type: \"move\"\n    };\n    class Ys {\n        constructor(){\n            this._targetRay = null, this._grip = null, this._hand = null;\n        }\n        getHandSpace() {\n            return null === this._hand && (this._hand = new qs, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {\n                pinching: !1\n            }), this._hand;\n        }\n        getTargetRaySpace() {\n            return null === this._targetRay && (this._targetRay = new qs, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new zt, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new zt), this._targetRay;\n        }\n        getGripSpace() {\n            return null === this._grip && (this._grip = new qs, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new zt, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new zt), this._grip;\n        }\n        dispatchEvent(t) {\n            return null !== this._targetRay && this._targetRay.dispatchEvent(t), null !== this._grip && this._grip.dispatchEvent(t), null !== this._hand && this._hand.dispatchEvent(t), this;\n        }\n        disconnect(t) {\n            return this.dispatchEvent({\n                type: \"disconnected\",\n                data: t\n            }), null !== this._targetRay && (this._targetRay.visible = !1), null !== this._grip && (this._grip.visible = !1), null !== this._hand && (this._hand.visible = !1), this;\n        }\n        update(t, e, n) {\n            let i = null, r = null, s = null;\n            const a = this._targetRay, o = this._grip, l = this._hand;\n            if (t && \"visible-blurred\" !== e.session.visibilityState) {\n                if (null !== a && (i = e.getPose(t.targetRaySpace, n), null !== i && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(Xs))), l && t.hand) {\n                    s = !0;\n                    for (const i of t.hand.values()){\n                        const t = e.getJointPose(i, n);\n                        if (void 0 === l.joints[i.jointName]) {\n                            const t = new qs;\n                            t.matrixAutoUpdate = !1, t.visible = !1, l.joints[i.jointName] = t, l.add(t);\n                        }\n                        const r = l.joints[i.jointName];\n                        null !== t && (r.matrix.fromArray(t.transform.matrix), r.matrix.decompose(r.position, r.rotation, r.scale), r.jointRadius = t.radius), r.visible = null !== t;\n                    }\n                    const i = l.joints[\"index-finger-tip\"], r = l.joints[\"thumb-tip\"], a = i.position.distanceTo(r.position), o = .02, c = .005;\n                    l.inputState.pinching && a > o + c ? (l.inputState.pinching = !1, this.dispatchEvent({\n                        type: \"pinchend\",\n                        handedness: t.handedness,\n                        target: this\n                    })) : !l.inputState.pinching && a <= o - c && (l.inputState.pinching = !0, this.dispatchEvent({\n                        type: \"pinchstart\",\n                        handedness: t.handedness,\n                        target: this\n                    }));\n                } else null !== o && t.gripSpace && (r = e.getPose(t.gripSpace, n), null !== r && (o.matrix.fromArray(r.transform.matrix), o.matrix.decompose(o.position, o.rotation, o.scale), r.linearVelocity ? (o.hasLinearVelocity = !0, o.linearVelocity.copy(r.linearVelocity)) : o.hasLinearVelocity = !1, r.angularVelocity ? (o.hasAngularVelocity = !0, o.angularVelocity.copy(r.angularVelocity)) : o.hasAngularVelocity = !1));\n            }\n            return null !== a && (a.visible = null !== i), null !== o && (o.visible = null !== r), null !== l && (l.visible = null !== s), this;\n        }\n    }\n    class Js extends rt {\n        constructor(t, e){\n            super();\n            const n = this, i = t.state;\n            let r = null, s = 1, a = null, o = \"local-floor\", l = null, c = null, h = null, u = null, d = null, p = !1, m = null, f = null, g = null, v = null, y = null, x = null;\n            const _ = [], M = new Map, b = new Kn;\n            b.layers.enable(1), b.viewport = new Ct;\n            const w = new Kn;\n            w.layers.enable(2), w.viewport = new Ct;\n            const S = [\n                b,\n                w\n            ], T = new js;\n            T.layers.enable(1), T.layers.enable(2);\n            let E = null, A = null;\n            function L(t) {\n                const e = M.get(t.inputSource);\n                e && e.dispatchEvent({\n                    type: t.type,\n                    data: t.inputSource\n                });\n            }\n            function R() {\n                M.forEach(function(t, e) {\n                    t.disconnect(e);\n                }), M.clear(), E = null, A = null, i.bindXRFramebuffer(null), t.setRenderTarget(t.getRenderTarget()), h && e.deleteFramebuffer(h), m && e.deleteFramebuffer(m), f && e.deleteRenderbuffer(f), g && e.deleteRenderbuffer(g), h = null, m = null, f = null, g = null, d = null, u = null, c = null, r = null, z.stop(), n.isPresenting = !1, n.dispatchEvent({\n                    type: \"sessionend\"\n                });\n            }\n            function C(t) {\n                const e = r.inputSources;\n                for(let t = 0; t < _.length; t++)M.set(e[t], _[t]);\n                for(let e = 0; e < t.removed.length; e++){\n                    const n = t.removed[e], i = M.get(n);\n                    i && (i.dispatchEvent({\n                        type: \"disconnected\",\n                        data: n\n                    }), M.delete(n));\n                }\n                for(let e = 0; e < t.added.length; e++){\n                    const n = t.added[e], i = M.get(n);\n                    i && i.dispatchEvent({\n                        type: \"connected\",\n                        data: n\n                    });\n                }\n            }\n            this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(t) {\n                let e = _[t];\n                return void 0 === e && (e = new Ys, _[t] = e), e.getTargetRaySpace();\n            }, this.getControllerGrip = function(t) {\n                let e = _[t];\n                return void 0 === e && (e = new Ys, _[t] = e), e.getGripSpace();\n            }, this.getHand = function(t) {\n                let e = _[t];\n                return void 0 === e && (e = new Ys, _[t] = e), e.getHandSpace();\n            }, this.setFramebufferScaleFactor = function(t) {\n                s = t, !0 === n.isPresenting && console.warn(\"THREE.WebXRManager: Cannot change framebuffer scale while presenting.\");\n            }, this.setReferenceSpaceType = function(t) {\n                o = t, !0 === n.isPresenting && console.warn(\"THREE.WebXRManager: Cannot change reference space type while presenting.\");\n            }, this.getReferenceSpace = function() {\n                return a;\n            }, this.getBaseLayer = function() {\n                return null !== u ? u : d;\n            }, this.getBinding = function() {\n                return c;\n            }, this.getFrame = function() {\n                return v;\n            }, this.getSession = function() {\n                return r;\n            }, this.setSession = async function(t) {\n                if (r = t, null !== r) {\n                    r.addEventListener(\"select\", L), r.addEventListener(\"selectstart\", L), r.addEventListener(\"selectend\", L), r.addEventListener(\"squeeze\", L), r.addEventListener(\"squeezestart\", L), r.addEventListener(\"squeezeend\", L), r.addEventListener(\"end\", R), r.addEventListener(\"inputsourceschange\", C);\n                    const t = e.getContextAttributes();\n                    if (!0 !== t.xrCompatible && await e.makeXRCompatible(), void 0 === r.renderState.layers) {\n                        const n = {\n                            antialias: t.antialias,\n                            alpha: t.alpha,\n                            depth: t.depth,\n                            stencil: t.stencil,\n                            framebufferScaleFactor: s\n                        };\n                        d = new XRWebGLLayer(r, e, n), r.updateRenderState({\n                            baseLayer: d\n                        });\n                    } else if (e instanceof WebGLRenderingContext) {\n                        const n = {\n                            antialias: !0,\n                            alpha: t.alpha,\n                            depth: t.depth,\n                            stencil: t.stencil,\n                            framebufferScaleFactor: s\n                        };\n                        d = new XRWebGLLayer(r, e, n), r.updateRenderState({\n                            layers: [\n                                d\n                            ]\n                        });\n                    } else {\n                        p = t.antialias;\n                        let n = null;\n                        t.depth && (x = 256, t.stencil && (x |= 1024), y = t.stencil ? 33306 : 36096, n = t.stencil ? 35056 : 33190);\n                        const a = {\n                            colorFormat: t.alpha ? 32856 : 32849,\n                            depthFormat: n,\n                            scaleFactor: s\n                        };\n                        c = new XRWebGLBinding(r, e), u = c.createProjectionLayer(a), h = e.createFramebuffer(), r.updateRenderState({\n                            layers: [\n                                u\n                            ]\n                        }), p && (m = e.createFramebuffer(), f = e.createRenderbuffer(), e.bindRenderbuffer(36161, f), e.renderbufferStorageMultisample(36161, 4, 32856, u.textureWidth, u.textureHeight), i.bindFramebuffer(36160, m), e.framebufferRenderbuffer(36160, 36064, 36161, f), e.bindRenderbuffer(36161, null), null !== n && (g = e.createRenderbuffer(), e.bindRenderbuffer(36161, g), e.renderbufferStorageMultisample(36161, 4, n, u.textureWidth, u.textureHeight), e.framebufferRenderbuffer(36160, y, 36161, g), e.bindRenderbuffer(36161, null)), i.bindFramebuffer(36160, null));\n                    }\n                    a = await r.requestReferenceSpace(o), z.setContext(r), z.start(), n.isPresenting = !0, n.dispatchEvent({\n                        type: \"sessionstart\"\n                    });\n                }\n            };\n            const P = new zt, I = new zt;\n            function D(t, e) {\n                null === e ? t.matrixWorld.copy(t.matrix) : t.matrixWorld.multiplyMatrices(e.matrixWorld, t.matrix), t.matrixWorldInverse.copy(t.matrixWorld).invert();\n            }\n            this.updateCamera = function(t) {\n                if (null === r) return;\n                T.near = w.near = b.near = t.near, T.far = w.far = b.far = t.far, E === T.near && A === T.far || (r.updateRenderState({\n                    depthNear: T.near,\n                    depthFar: T.far\n                }), E = T.near, A = T.far);\n                const e = t.parent, n = T.cameras;\n                D(T, e);\n                for(let t = 0; t < n.length; t++)D(n[t], e);\n                T.matrixWorld.decompose(T.position, T.quaternion, T.scale), t.position.copy(T.position), t.quaternion.copy(T.quaternion), t.scale.copy(T.scale), t.matrix.copy(T.matrix), t.matrixWorld.copy(T.matrixWorld);\n                const i = t.children;\n                for(let t = 0, e = i.length; t < e; t++)i[t].updateMatrixWorld(!0);\n                2 === n.length ? function(t, e, n) {\n                    P.setFromMatrixPosition(e.matrixWorld), I.setFromMatrixPosition(n.matrixWorld);\n                    const i = P.distanceTo(I), r = e.projectionMatrix.elements, s = n.projectionMatrix.elements, a = r[14] / (r[10] - 1), o = r[14] / (r[10] + 1), l = (r[9] + 1) / r[5], c = (r[9] - 1) / r[5], h = (r[8] - 1) / r[0], u = (s[8] + 1) / s[0], d = a * h, p = a * u, m = i / (-h + u), f = m * -h;\n                    e.matrixWorld.decompose(t.position, t.quaternion, t.scale), t.translateX(f), t.translateZ(m), t.matrixWorld.compose(t.position, t.quaternion, t.scale), t.matrixWorldInverse.copy(t.matrixWorld).invert();\n                    const g = a + m, v = o + m, y = d - f, x = p + (i - f), _ = l * o / v * g, M = c * o / v * g;\n                    t.projectionMatrix.makePerspective(y, x, _, M, g, v);\n                }(T, b, w) : T.projectionMatrix.copy(b.projectionMatrix);\n            }, this.getCamera = function() {\n                return T;\n            }, this.getFoveation = function() {\n                return null !== u ? u.fixedFoveation : null !== d ? d.fixedFoveation : void 0;\n            }, this.setFoveation = function(t) {\n                null !== u && (u.fixedFoveation = t), null !== d && void 0 !== d.fixedFoveation && (d.fixedFoveation = t);\n            };\n            let N = null;\n            const z = new hi;\n            z.setAnimationLoop(function(t, n) {\n                if (l = n.getViewerPose(a), v = n, null !== l) {\n                    const t = l.views;\n                    null !== d && i.bindXRFramebuffer(d.framebuffer);\n                    let n = !1;\n                    t.length !== T.cameras.length && (T.cameras.length = 0, n = !0);\n                    for(let r = 0; r < t.length; r++){\n                        const s = t[r];\n                        let a = null;\n                        if (null !== d) a = d.getViewport(s);\n                        else {\n                            const t = c.getViewSubImage(u, s);\n                            i.bindXRFramebuffer(h), void 0 !== t.depthStencilTexture && e.framebufferTexture2D(36160, y, 3553, t.depthStencilTexture, 0), e.framebufferTexture2D(36160, 36064, 3553, t.colorTexture, 0), a = t.viewport;\n                        }\n                        const o = S[r];\n                        o.matrix.fromArray(s.transform.matrix), o.projectionMatrix.fromArray(s.projectionMatrix), o.viewport.set(a.x, a.y, a.width, a.height), 0 === r && T.matrix.copy(o.matrix), !0 === n && T.cameras.push(o);\n                    }\n                    p && (i.bindXRFramebuffer(m), null !== x && e.clear(x));\n                }\n                const s = r.inputSources;\n                for(let t = 0; t < _.length; t++){\n                    const e = _[t], i = s[t];\n                    e.update(i, n, a);\n                }\n                if (N && N(t, n), p) {\n                    const t = u.textureWidth, n = u.textureHeight;\n                    i.bindFramebuffer(36008, m), i.bindFramebuffer(36009, h), e.invalidateFramebuffer(36008, [\n                        y\n                    ]), e.invalidateFramebuffer(36009, [\n                        y\n                    ]), e.blitFramebuffer(0, 0, t, n, 0, 0, t, n, 16384, 9728), e.invalidateFramebuffer(36008, [\n                        36064\n                    ]), i.bindFramebuffer(36008, null), i.bindFramebuffer(36009, null), i.bindFramebuffer(36160, m);\n                }\n                v = null;\n            }), this.setAnimationLoop = function(t) {\n                N = t;\n            }, this.dispose = function() {};\n        }\n    }\n    function Zs(t) {\n        function e(e, n) {\n            e.opacity.value = n.opacity, n.color && e.diffuse.value.copy(n.color), n.emissive && e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity), n.map && (e.map.value = n.map), n.alphaMap && (e.alphaMap.value = n.alphaMap), n.specularMap && (e.specularMap.value = n.specularMap), n.alphaTest > 0 && (e.alphaTest.value = n.alphaTest);\n            const i = t.get(n).envMap;\n            if (i) {\n                e.envMap.value = i, e.flipEnvMap.value = i.isCubeTexture && !1 === i.isRenderTargetTexture ? -1 : 1, e.reflectivity.value = n.reflectivity, e.ior.value = n.ior, e.refractionRatio.value = n.refractionRatio;\n                const r = t.get(i).__maxMipLevel;\n                void 0 !== r && (e.maxMipLevel.value = r);\n            }\n            let r, s;\n            n.lightMap && (e.lightMap.value = n.lightMap, e.lightMapIntensity.value = n.lightMapIntensity), n.aoMap && (e.aoMap.value = n.aoMap, e.aoMapIntensity.value = n.aoMapIntensity), n.map ? r = n.map : n.specularMap ? r = n.specularMap : n.displacementMap ? r = n.displacementMap : n.normalMap ? r = n.normalMap : n.bumpMap ? r = n.bumpMap : n.roughnessMap ? r = n.roughnessMap : n.metalnessMap ? r = n.metalnessMap : n.alphaMap ? r = n.alphaMap : n.emissiveMap ? r = n.emissiveMap : n.clearcoatMap ? r = n.clearcoatMap : n.clearcoatNormalMap ? r = n.clearcoatNormalMap : n.clearcoatRoughnessMap ? r = n.clearcoatRoughnessMap : n.specularIntensityMap ? r = n.specularIntensityMap : n.specularColorMap ? r = n.specularColorMap : n.transmissionMap ? r = n.transmissionMap : n.thicknessMap ? r = n.thicknessMap : n.sheenColorMap ? r = n.sheenColorMap : n.sheenRoughnessMap && (r = n.sheenRoughnessMap), void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture), !0 === r.matrixAutoUpdate && r.updateMatrix(), e.uvTransform.value.copy(r.matrix)), n.aoMap ? s = n.aoMap : n.lightMap && (s = n.lightMap), void 0 !== s && (s.isWebGLRenderTarget && (s = s.texture), !0 === s.matrixAutoUpdate && s.updateMatrix(), e.uv2Transform.value.copy(s.matrix));\n        }\n        function n(e, n) {\n            e.roughness.value = n.roughness, e.metalness.value = n.metalness, n.roughnessMap && (e.roughnessMap.value = n.roughnessMap), n.metalnessMap && (e.metalnessMap.value = n.metalnessMap), n.emissiveMap && (e.emissiveMap.value = n.emissiveMap), n.bumpMap && (e.bumpMap.value = n.bumpMap, e.bumpScale.value = n.bumpScale, 1 === n.side && (e.bumpScale.value *= -1)), n.normalMap && (e.normalMap.value = n.normalMap, e.normalScale.value.copy(n.normalScale), 1 === n.side && e.normalScale.value.negate()), n.displacementMap && (e.displacementMap.value = n.displacementMap, e.displacementScale.value = n.displacementScale, e.displacementBias.value = n.displacementBias);\n            t.get(n).envMap && (e.envMapIntensity.value = n.envMapIntensity);\n        }\n        return {\n            refreshFogUniforms: function(t, e) {\n                t.fogColor.value.copy(e.color), e.isFog ? (t.fogNear.value = e.near, t.fogFar.value = e.far) : e.isFogExp2 && (t.fogDensity.value = e.density);\n            },\n            refreshMaterialUniforms: function(t, i, r, s, a) {\n                i.isMeshBasicMaterial ? e(t, i) : i.isMeshLambertMaterial ? (e(t, i), function(t, e) {\n                    e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);\n                }(t, i)) : i.isMeshToonMaterial ? (e(t, i), function(t, e) {\n                    e.gradientMap && (t.gradientMap.value = e.gradientMap);\n                    e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);\n                    e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale, 1 === e.side && (t.bumpScale.value *= -1));\n                    e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale), 1 === e.side && t.normalScale.value.negate());\n                    e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias);\n                }(t, i)) : i.isMeshPhongMaterial ? (e(t, i), function(t, e) {\n                    t.specular.value.copy(e.specular), t.shininess.value = Math.max(e.shininess, 1e-4), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);\n                    e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale, 1 === e.side && (t.bumpScale.value *= -1));\n                    e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale), 1 === e.side && t.normalScale.value.negate());\n                    e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias);\n                }(t, i)) : i.isMeshStandardMaterial ? (e(t, i), i.isMeshPhysicalMaterial ? function(t, e, i) {\n                    n(t, e), t.ior.value = e.ior, e.sheen > 0 && (t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen), t.sheenRoughness.value = e.sheenRoughness, e.sheenColorMap && (t.sheenColorMap.value = e.sheenColorMap), e.sheenRoughnessMap && (t.sheenRoughnessMap.value = e.sheenRoughnessMap));\n                    e.clearcoat > 0 && (t.clearcoat.value = e.clearcoat, t.clearcoatRoughness.value = e.clearcoatRoughness, e.clearcoatMap && (t.clearcoatMap.value = e.clearcoatMap), e.clearcoatRoughnessMap && (t.clearcoatRoughnessMap.value = e.clearcoatRoughnessMap), e.clearcoatNormalMap && (t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale), t.clearcoatNormalMap.value = e.clearcoatNormalMap, 1 === e.side && t.clearcoatNormalScale.value.negate()));\n                    e.transmission > 0 && (t.transmission.value = e.transmission, t.transmissionSamplerMap.value = i.texture, t.transmissionSamplerSize.value.set(i.width, i.height), e.transmissionMap && (t.transmissionMap.value = e.transmissionMap), t.thickness.value = e.thickness, e.thicknessMap && (t.thicknessMap.value = e.thicknessMap), t.attenuationDistance.value = e.attenuationDistance, t.attenuationColor.value.copy(e.attenuationColor));\n                    t.specularIntensity.value = e.specularIntensity, t.specularColor.value.copy(e.specularColor), e.specularIntensityMap && (t.specularIntensityMap.value = e.specularIntensityMap);\n                    e.specularColorMap && (t.specularColorMap.value = e.specularColorMap);\n                }(t, i, a) : n(t, i)) : i.isMeshMatcapMaterial ? (e(t, i), function(t, e) {\n                    e.matcap && (t.matcap.value = e.matcap);\n                    e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale, 1 === e.side && (t.bumpScale.value *= -1));\n                    e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale), 1 === e.side && t.normalScale.value.negate());\n                    e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias);\n                }(t, i)) : i.isMeshDepthMaterial ? (e(t, i), function(t, e) {\n                    e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias);\n                }(t, i)) : i.isMeshDistanceMaterial ? (e(t, i), function(t, e) {\n                    e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias);\n                    t.referencePosition.value.copy(e.referencePosition), t.nearDistance.value = e.nearDistance, t.farDistance.value = e.farDistance;\n                }(t, i)) : i.isMeshNormalMaterial ? (e(t, i), function(t, e) {\n                    e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale, 1 === e.side && (t.bumpScale.value *= -1));\n                    e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale), 1 === e.side && t.normalScale.value.negate());\n                    e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias);\n                }(t, i)) : i.isLineBasicMaterial ? (function(t, e) {\n                    t.diffuse.value.copy(e.color), t.opacity.value = e.opacity;\n                }(t, i), i.isLineDashedMaterial && function(t, e) {\n                    t.dashSize.value = e.dashSize, t.totalSize.value = e.dashSize + e.gapSize, t.scale.value = e.scale;\n                }(t, i)) : i.isPointsMaterial ? function(t, e, n, i) {\n                    t.diffuse.value.copy(e.color), t.opacity.value = e.opacity, t.size.value = e.size * n, t.scale.value = .5 * i, e.map && (t.map.value = e.map);\n                    e.alphaMap && (t.alphaMap.value = e.alphaMap);\n                    e.alphaTest > 0 && (t.alphaTest.value = e.alphaTest);\n                    let r;\n                    e.map ? r = e.map : e.alphaMap && (r = e.alphaMap);\n                    void 0 !== r && (!0 === r.matrixAutoUpdate && r.updateMatrix(), t.uvTransform.value.copy(r.matrix));\n                }(t, i, r, s) : i.isSpriteMaterial ? function(t, e) {\n                    t.diffuse.value.copy(e.color), t.opacity.value = e.opacity, t.rotation.value = e.rotation, e.map && (t.map.value = e.map);\n                    e.alphaMap && (t.alphaMap.value = e.alphaMap);\n                    e.alphaTest > 0 && (t.alphaTest.value = e.alphaTest);\n                    let n;\n                    e.map ? n = e.map : e.alphaMap && (n = e.alphaMap);\n                    void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(), t.uvTransform.value.copy(n.matrix));\n                }(t, i) : i.isShadowMaterial ? (t.color.value.copy(i.color), t.opacity.value = i.opacity) : i.isShaderMaterial && (i.uniformsNeedUpdate = !1);\n            }\n        };\n    }\n    function Qs(t = {}) {\n        const e = void 0 !== t.canvas ? t.canvas : function() {\n            const t = wt(\"canvas\");\n            return t.style.display = \"block\", t;\n        }(), n = void 0 !== t.context ? t.context : null, i = void 0 !== t.alpha && t.alpha, r = void 0 === t.depth || t.depth, s = void 0 === t.stencil || t.stencil, a = void 0 !== t.antialias && t.antialias, o = void 0 === t.premultipliedAlpha || t.premultipliedAlpha, l = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer, c = void 0 !== t.powerPreference ? t.powerPreference : \"default\", h = void 0 !== t.failIfMajorPerformanceCaveat && t.failIfMajorPerformanceCaveat;\n        let d = null, m = null;\n        const f = [], g = [];\n        this.domElement = e, this.debug = {\n            checkShaderErrors: !0\n        }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.outputEncoding = X, this.physicallyCorrectLights = !1, this.toneMapping = 0, this.toneMappingExposure = 1;\n        const v = this;\n        let _ = !1, M = 0, S = 0, T = null, A = -1, L = null;\n        const R = new Ct, C = new Ct;\n        let P = null, I = e.width, D = e.height, N = 1, z = null, B = null;\n        const F = new Ct(0, 0, I, D), O = new Ct(0, 0, I, D);\n        let U = !1;\n        const H = [], G = new ci;\n        let k = !1, V = !1, W = null;\n        const j = new de, q = new zt, Y = {\n            background: null,\n            fog: null,\n            environment: null,\n            overrideMaterial: null,\n            isScene: !0\n        };\n        function J() {\n            return null === T ? N : 1;\n        }\n        let Z, Q, K, $, tt, et, nt, it, rt, st, at, ot, lt, ct, ht, ut, dt, pt, mt, ft, gt, vt, yt, xt = n;\n        function _t(t, n) {\n            for(let i = 0; i < t.length; i++){\n                const r = t[i], s = e.getContext(r, n);\n                if (null !== s) return s;\n            }\n            return null;\n        }\n        try {\n            const t = {\n                alpha: i,\n                depth: r,\n                stencil: s,\n                antialias: a,\n                premultipliedAlpha: o,\n                preserveDrawingBuffer: l,\n                powerPreference: c,\n                failIfMajorPerformanceCaveat: h\n            };\n            if (e.addEventListener(\"webglcontextlost\", St, !1), e.addEventListener(\"webglcontextrestored\", Tt, !1), null === xt) {\n                const e = [\n                    \"webgl2\",\n                    \"webgl\",\n                    \"experimental-webgl\"\n                ];\n                if (!0 === v.isWebGL1Renderer && e.shift(), xt = _t(e, t), null === xt) throw _t(e) ? new Error(\"Error creating WebGL context with your selected attributes.\") : new Error(\"Error creating WebGL context.\");\n            }\n            void 0 === xt.getShaderPrecisionFormat && (xt.getShaderPrecisionFormat = function() {\n                return {\n                    rangeMin: 1,\n                    rangeMax: 1,\n                    precision: 1\n                };\n            });\n        } catch (t) {\n            throw console.error(\"THREE.WebGLRenderer: \" + t.message), t;\n        }\n        function Mt() {\n            Z = new Yi(xt), Q = new xi(xt, Z, t), Z.init(Q), vt = new Ws(xt, Z, Q), K = new ks(xt, Z, Q), H[0] = 1029, $ = new Qi(xt), tt = new Ls, et = new Vs(xt, Z, K, tt, Q, vt, $), nt = new Mi(v), it = new Xi(v), rt = new ui(xt, Q), yt = new vi(xt, Z, rt, Q), st = new Ji(xt, rt, $, yt), at = new ir(xt, st, rt, $), mt = new nr(xt, Q, et), ut = new _i(tt), ot = new As(v, nt, it, Z, Q, yt, ut), lt = new Zs(tt), ct = new Is(tt), ht = new Os(Z, Q), pt = new gi(v, nt, K, at, o), dt = new Gs(v, at, Q), ft = new yi(xt, Z, $, Q), gt = new Zi(xt, Z, $, Q), $.programs = ot.programs, v.capabilities = Q, v.extensions = Z, v.properties = tt, v.renderLists = ct, v.shadowMap = dt, v.state = K, v.info = $;\n        }\n        Mt();\n        const bt = new Js(v, xt);\n        function St(t) {\n            t.preventDefault(), console.log(\"THREE.WebGLRenderer: Context Lost.\"), _ = !0;\n        }\n        function Tt() {\n            console.log(\"THREE.WebGLRenderer: Context Restored.\"), _ = !1;\n            const t = $.autoReset, e = dt.enabled, n = dt.autoUpdate, i = dt.needsUpdate, r = dt.type;\n            Mt(), $.autoReset = t, dt.enabled = e, dt.autoUpdate = n, dt.needsUpdate = i, dt.type = r;\n        }\n        function Et(t) {\n            const e = t.target;\n            e.removeEventListener(\"dispose\", Et), function(t) {\n                (function(t) {\n                    const e = tt.get(t).programs;\n                    void 0 !== e && e.forEach(function(t) {\n                        ot.releaseProgram(t);\n                    });\n                })(t), tt.remove(t);\n            }(e);\n        }\n        this.xr = bt, this.getContext = function() {\n            return xt;\n        }, this.getContextAttributes = function() {\n            return xt.getContextAttributes();\n        }, this.forceContextLoss = function() {\n            const t = Z.get(\"WEBGL_lose_context\");\n            t && t.loseContext();\n        }, this.forceContextRestore = function() {\n            const t = Z.get(\"WEBGL_lose_context\");\n            t && t.restoreContext();\n        }, this.getPixelRatio = function() {\n            return N;\n        }, this.setPixelRatio = function(t) {\n            void 0 !== t && (N = t, this.setSize(I, D, !1));\n        }, this.getSize = function(t) {\n            return t.set(I, D);\n        }, this.setSize = function(t, n, i) {\n            bt.isPresenting ? console.warn(\"THREE.WebGLRenderer: Can't change size while VR device is presenting.\") : (I = t, D = n, e.width = Math.floor(t * N), e.height = Math.floor(n * N), !1 !== i && (e.style.width = t + \"px\", e.style.height = n + \"px\"), this.setViewport(0, 0, t, n));\n        }, this.getDrawingBufferSize = function(t) {\n            return t.set(I * N, D * N).floor();\n        }, this.setDrawingBufferSize = function(t, n, i) {\n            I = t, D = n, N = i, e.width = Math.floor(t * i), e.height = Math.floor(n * i), this.setViewport(0, 0, t, n);\n        }, this.getCurrentViewport = function(t) {\n            return t.copy(R);\n        }, this.getViewport = function(t) {\n            return t.copy(F);\n        }, this.setViewport = function(t, e, n, i) {\n            t.isVector4 ? F.set(t.x, t.y, t.z, t.w) : F.set(t, e, n, i), K.viewport(R.copy(F).multiplyScalar(N).floor());\n        }, this.getScissor = function(t) {\n            return t.copy(O);\n        }, this.setScissor = function(t, e, n, i) {\n            t.isVector4 ? O.set(t.x, t.y, t.z, t.w) : O.set(t, e, n, i), K.scissor(C.copy(O).multiplyScalar(N).floor());\n        }, this.getScissorTest = function() {\n            return U;\n        }, this.setScissorTest = function(t) {\n            K.setScissorTest(U = t);\n        }, this.setOpaqueSort = function(t) {\n            z = t;\n        }, this.setTransparentSort = function(t) {\n            B = t;\n        }, this.getClearColor = function(t) {\n            return t.copy(pt.getClearColor());\n        }, this.setClearColor = function() {\n            pt.setClearColor.apply(pt, arguments);\n        }, this.getClearAlpha = function() {\n            return pt.getClearAlpha();\n        }, this.setClearAlpha = function() {\n            pt.setClearAlpha.apply(pt, arguments);\n        }, this.clear = function(t, e, n) {\n            let i = 0;\n            (void 0 === t || t) && (i |= 16384), (void 0 === e || e) && (i |= 256), (void 0 === n || n) && (i |= 1024), xt.clear(i);\n        }, this.clearColor = function() {\n            this.clear(!0, !1, !1);\n        }, this.clearDepth = function() {\n            this.clear(!1, !0, !1);\n        }, this.clearStencil = function() {\n            this.clear(!1, !1, !0);\n        }, this.dispose = function() {\n            e.removeEventListener(\"webglcontextlost\", St, !1), e.removeEventListener(\"webglcontextrestored\", Tt, !1), ct.dispose(), ht.dispose(), tt.dispose(), nt.dispose(), it.dispose(), at.dispose(), yt.dispose(), bt.dispose(), bt.removeEventListener(\"sessionstart\", Lt), bt.removeEventListener(\"sessionend\", Rt), W && (W.dispose(), W = null), It.stop();\n        }, this.renderBufferDirect = function(t, e, n, i, r, s) {\n            null === e && (e = Y);\n            const a = r.isMesh && r.matrixWorld.determinant() < 0, o = function(t, e, n, i, r) {\n                !0 !== e.isScene && (e = Y);\n                et.resetTextureUnits();\n                const s = e.fog, a = i.isMeshStandardMaterial ? e.environment : null, o = null === T ? v.outputEncoding : T.texture.encoding, l = (i.isMeshStandardMaterial ? it : nt).get(i.envMap || a), c = !0 === i.vertexColors && !!n.attributes.color && 4 === n.attributes.color.itemSize, h = !!i.normalMap && !!n.attributes.tangent, u = !!n.morphAttributes.position, d = !!n.morphAttributes.normal, p = n.morphAttributes.position ? n.morphAttributes.position.length : 0, f = tt.get(i), g = m.state.lights;\n                if (!0 === k && (!0 === V || t !== L)) {\n                    const e = t === L && i.id === A;\n                    ut.setState(i, t, e);\n                }\n                let y = !1;\n                i.version === f.__version ? f.needsLights && f.lightsStateVersion !== g.state.version || f.outputEncoding !== o || r.isInstancedMesh && !1 === f.instancing ? y = !0 : r.isInstancedMesh || !0 !== f.instancing ? r.isSkinnedMesh && !1 === f.skinning ? y = !0 : r.isSkinnedMesh || !0 !== f.skinning ? f.envMap !== l || i.fog && f.fog !== s ? y = !0 : void 0 === f.numClippingPlanes || f.numClippingPlanes === ut.numPlanes && f.numIntersection === ut.numIntersection ? (f.vertexAlphas !== c || f.vertexTangents !== h || f.morphTargets !== u || f.morphNormals !== d || !0 === Q.isWebGL2 && f.morphTargetsCount !== p) && (y = !0) : y = !0 : y = !0 : y = !0 : (y = !0, f.__version = i.version);\n                let x = f.currentProgram;\n                !0 === y && (x = Ut(i, e, r));\n                let _ = !1, M = !1, b = !1;\n                const w = x.getUniforms(), S = f.uniforms;\n                K.useProgram(x.program) && (_ = !0, M = !0, b = !0);\n                i.id !== A && (A = i.id, M = !0);\n                if (_ || L !== t) {\n                    if (w.setValue(xt, \"projectionMatrix\", t.projectionMatrix), Q.logarithmicDepthBuffer && w.setValue(xt, \"logDepthBufFC\", 2 / (Math.log(t.far + 1) / Math.LN2)), L !== t && (L = t, M = !0, b = !0), i.isShaderMaterial || i.isMeshPhongMaterial || i.isMeshToonMaterial || i.isMeshStandardMaterial || i.envMap) {\n                        const e = w.map.cameraPosition;\n                        void 0 !== e && e.setValue(xt, q.setFromMatrixPosition(t.matrixWorld));\n                    }\n                    (i.isMeshPhongMaterial || i.isMeshToonMaterial || i.isMeshLambertMaterial || i.isMeshBasicMaterial || i.isMeshStandardMaterial || i.isShaderMaterial) && w.setValue(xt, \"isOrthographic\", !0 === t.isOrthographicCamera), (i.isMeshPhongMaterial || i.isMeshToonMaterial || i.isMeshLambertMaterial || i.isMeshBasicMaterial || i.isMeshStandardMaterial || i.isShaderMaterial || i.isShadowMaterial || r.isSkinnedMesh) && w.setValue(xt, \"viewMatrix\", t.matrixWorldInverse);\n                }\n                if (r.isSkinnedMesh) {\n                    w.setOptional(xt, r, \"bindMatrix\"), w.setOptional(xt, r, \"bindMatrixInverse\");\n                    const t = r.skeleton;\n                    t && (Q.floatVertexTextures ? (null === t.boneTexture && t.computeBoneTexture(), w.setValue(xt, \"boneTexture\", t.boneTexture, et), w.setValue(xt, \"boneTextureSize\", t.boneTextureSize)) : w.setOptional(xt, t, \"boneMatrices\"));\n                }\n                !n || void 0 === n.morphAttributes.position && void 0 === n.morphAttributes.normal || mt.update(r, n, i, x);\n                (M || f.receiveShadow !== r.receiveShadow) && (f.receiveShadow = r.receiveShadow, w.setValue(xt, \"receiveShadow\", r.receiveShadow));\n                M && (w.setValue(xt, \"toneMappingExposure\", v.toneMappingExposure), f.needsLights && (R = b, (E = S).ambientLightColor.needsUpdate = R, E.lightProbe.needsUpdate = R, E.directionalLights.needsUpdate = R, E.directionalLightShadows.needsUpdate = R, E.pointLights.needsUpdate = R, E.pointLightShadows.needsUpdate = R, E.spotLights.needsUpdate = R, E.spotLightShadows.needsUpdate = R, E.rectAreaLights.needsUpdate = R, E.hemisphereLights.needsUpdate = R), s && i.fog && lt.refreshFogUniforms(S, s), lt.refreshMaterialUniforms(S, i, N, D, W), as.upload(xt, f.uniformsList, S, et));\n                var E, R;\n                i.isShaderMaterial && !0 === i.uniformsNeedUpdate && (as.upload(xt, f.uniformsList, S, et), i.uniformsNeedUpdate = !1);\n                i.isSpriteMaterial && w.setValue(xt, \"center\", r.center);\n                return w.setValue(xt, \"modelViewMatrix\", r.modelViewMatrix), w.setValue(xt, \"normalMatrix\", r.normalMatrix), w.setValue(xt, \"modelMatrix\", r.matrixWorld), x;\n            }(t, e, n, i, r);\n            K.setMaterial(i, a);\n            let l = n.index;\n            const c = n.attributes.position;\n            if (null === l) {\n                if (void 0 === c || 0 === c.count) return;\n            } else if (0 === l.count) return;\n            let h, u = 1;\n            !0 === i.wireframe && (l = st.getWireframeAttribute(n), u = 2), yt.setup(r, i, o, n, l);\n            let d = ft;\n            null !== l && (h = rt.get(l), d = gt, d.setIndex(h));\n            const p = null !== l ? l.count : c.count, f = n.drawRange.start * u, g = n.drawRange.count * u, y = null !== s ? s.start * u : 0, x = null !== s ? s.count * u : 1 / 0, _ = Math.max(f, y), M = Math.min(p, f + g, y + x) - 1, b = Math.max(0, M - _ + 1);\n            if (0 !== b) {\n                if (r.isMesh) !0 === i.wireframe ? (K.setLineWidth(i.wireframeLinewidth * J()), d.setMode(1)) : d.setMode(4);\n                else if (r.isLine) {\n                    let t = i.linewidth;\n                    void 0 === t && (t = 1), K.setLineWidth(t * J()), r.isLineSegments ? d.setMode(1) : r.isLineLoop ? d.setMode(2) : d.setMode(3);\n                } else r.isPoints ? d.setMode(0) : r.isSprite && d.setMode(4);\n                if (r.isInstancedMesh) d.renderInstances(_, b, r.count);\n                else if (n.isInstancedBufferGeometry) {\n                    const t = Math.min(n.instanceCount, n._maxInstanceCount);\n                    d.renderInstances(_, b, t);\n                } else d.render(_, b);\n            }\n        }, this.compile = function(t, e) {\n            m = ht.get(t), m.init(), g.push(m), t.traverseVisible(function(t) {\n                t.isLight && t.layers.test(e.layers) && (m.pushLight(t), t.castShadow && m.pushShadow(t));\n            }), m.setupLights(v.physicallyCorrectLights), t.traverse(function(e) {\n                const n = e.material;\n                if (n) {\n                    if (Array.isArray(n)) for(let i = 0; i < n.length; i++)Ut(n[i], t, e);\n                    else Ut(n, t, e);\n                }\n            }), g.pop(), m = null;\n        };\n        let At = null;\n        function Lt() {\n            It.stop();\n        }\n        function Rt() {\n            It.start();\n        }\n        const It = new hi;\n        function Nt(t, e, n, i) {\n            if (!1 === t.visible) return;\n            if (t.layers.test(e.layers)) {\n                if (t.isGroup) n = t.renderOrder;\n                else if (t.isLOD) !0 === t.autoUpdate && t.update(e);\n                else if (t.isLight) m.pushLight(t), t.castShadow && m.pushShadow(t);\n                else if (t.isSprite) {\n                    if (!t.frustumCulled || G.intersectsSprite(t)) {\n                        i && q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);\n                        const e = at.update(t), r = t.material;\n                        r.visible && d.push(t, e, r, n, q.z, null);\n                    }\n                } else if ((t.isMesh || t.isLine || t.isPoints) && (t.isSkinnedMesh && t.skeleton.frame !== $.render.frame && (t.skeleton.update(), t.skeleton.frame = $.render.frame), !t.frustumCulled || G.intersectsObject(t))) {\n                    i && q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);\n                    const e = at.update(t), r = t.material;\n                    if (Array.isArray(r)) {\n                        const i = e.groups;\n                        for(let s = 0, a = i.length; s < a; s++){\n                            const a = i[s], o = r[a.materialIndex];\n                            o && o.visible && d.push(t, e, o, n, q.z, a);\n                        }\n                    } else r.visible && d.push(t, e, r, n, q.z, null);\n                }\n            }\n            const r = t.children;\n            for(let t = 0, s = r.length; t < s; t++)Nt(r[t], e, n, i);\n        }\n        function Bt(t, e, n, i) {\n            const r = t.opaque, s = t.transmissive, o = t.transparent;\n            m.setupLightsView(n), s.length > 0 && function(t, e, n) {\n                if (null === W) {\n                    const t = !0 === a && !0 === Q.isWebGL2;\n                    W = new (t ? Dt : Pt)(1024, 1024, {\n                        generateMipmaps: !0,\n                        type: null !== vt.convert(w) ? w : x,\n                        minFilter: y,\n                        magFilter: p,\n                        wrapS: u,\n                        wrapT: u\n                    });\n                }\n                const i = v.getRenderTarget();\n                v.setRenderTarget(W), v.clear();\n                const r = v.toneMapping;\n                v.toneMapping = 0, Ft(t, e, n), v.toneMapping = r, et.updateMultisampleRenderTarget(W), et.updateRenderTargetMipmap(W), v.setRenderTarget(i);\n            }(r, e, n), i && K.viewport(R.copy(i)), r.length > 0 && Ft(r, e, n), s.length > 0 && Ft(s, e, n), o.length > 0 && Ft(o, e, n);\n        }\n        function Ft(t, e, n) {\n            const i = !0 === e.isScene ? e.overrideMaterial : null;\n            for(let r = 0, s = t.length; r < s; r++){\n                const s = t[r], a = s.object, o = s.geometry, l = null === i ? s.material : i, c = s.group;\n                a.layers.test(n.layers) && Ot(a, e, n, o, l, c);\n            }\n        }\n        function Ot(t, e, n, i, r, s) {\n            t.onBeforeRender(v, e, n, i, r, s), t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld), t.normalMatrix.getNormalMatrix(t.modelViewMatrix), r.onBeforeRender(v, e, n, i, t, s), !0 === r.transparent && 2 === r.side ? (r.side = 1, r.needsUpdate = !0, v.renderBufferDirect(n, e, i, r, t, s), r.side = 0, r.needsUpdate = !0, v.renderBufferDirect(n, e, i, r, t, s), r.side = 2) : v.renderBufferDirect(n, e, i, r, t, s), t.onAfterRender(v, e, n, i, r, s);\n        }\n        function Ut(t, e, n) {\n            !0 !== e.isScene && (e = Y);\n            const i = tt.get(t), r = m.state.lights, s = m.state.shadowsArray, a = r.state.version, o = ot.getParameters(t, r.state, s, e, n), l = ot.getProgramCacheKey(o);\n            let c = i.programs;\n            i.environment = t.isMeshStandardMaterial ? e.environment : null, i.fog = e.fog, i.envMap = (t.isMeshStandardMaterial ? it : nt).get(t.envMap || i.environment), void 0 === c && (t.addEventListener(\"dispose\", Et), c = new Map, i.programs = c);\n            let h = c.get(l);\n            if (void 0 !== h) {\n                if (i.currentProgram === h && i.lightsStateVersion === a) return Ht(t, o), h;\n            } else o.uniforms = ot.getUniforms(t), t.onBuild(n, o, v), t.onBeforeCompile(o, v), h = ot.acquireProgram(o, l), c.set(l, h), i.uniforms = o.uniforms;\n            const u = i.uniforms;\n            (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (u.clippingPlanes = ut.uniform), Ht(t, o), i.needsLights = function(t) {\n                return t.isMeshLambertMaterial || t.isMeshToonMaterial || t.isMeshPhongMaterial || t.isMeshStandardMaterial || t.isShadowMaterial || t.isShaderMaterial && !0 === t.lights;\n            }(t), i.lightsStateVersion = a, i.needsLights && (u.ambientLightColor.value = r.state.ambient, u.lightProbe.value = r.state.probe, u.directionalLights.value = r.state.directional, u.directionalLightShadows.value = r.state.directionalShadow, u.spotLights.value = r.state.spot, u.spotLightShadows.value = r.state.spotShadow, u.rectAreaLights.value = r.state.rectArea, u.ltc_1.value = r.state.rectAreaLTC1, u.ltc_2.value = r.state.rectAreaLTC2, u.pointLights.value = r.state.point, u.pointLightShadows.value = r.state.pointShadow, u.hemisphereLights.value = r.state.hemi, u.directionalShadowMap.value = r.state.directionalShadowMap, u.directionalShadowMatrix.value = r.state.directionalShadowMatrix, u.spotShadowMap.value = r.state.spotShadowMap, u.spotShadowMatrix.value = r.state.spotShadowMatrix, u.pointShadowMap.value = r.state.pointShadowMap, u.pointShadowMatrix.value = r.state.pointShadowMatrix);\n            const d = h.getUniforms(), p = as.seqWithValue(d.seq, u);\n            return i.currentProgram = h, i.uniformsList = p, h;\n        }\n        function Ht(t, e) {\n            const n = tt.get(t);\n            n.outputEncoding = e.outputEncoding, n.instancing = e.instancing, n.skinning = e.skinning, n.morphTargets = e.morphTargets, n.morphNormals = e.morphNormals, n.morphTargetsCount = e.morphTargetsCount, n.numClippingPlanes = e.numClippingPlanes, n.numIntersection = e.numClipIntersection, n.vertexAlphas = e.vertexAlphas, n.vertexTangents = e.vertexTangents;\n        }\n        It.setAnimationLoop(function(t) {\n            At && At(t);\n        }), \"undefined\" != typeof window && It.setContext(window), this.setAnimationLoop = function(t) {\n            At = t, bt.setAnimationLoop(t), null === t ? It.stop() : It.start();\n        }, bt.addEventListener(\"sessionstart\", Lt), bt.addEventListener(\"sessionend\", Rt), this.render = function(t, e) {\n            if (void 0 !== e && !0 !== e.isCamera) return void console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");\n            if (!0 === _) return;\n            !0 === t.autoUpdate && t.updateMatrixWorld(), null === e.parent && e.updateMatrixWorld(), !0 === bt.enabled && !0 === bt.isPresenting && (!0 === bt.cameraAutoUpdate && bt.updateCamera(e), e = bt.getCamera()), !0 === t.isScene && t.onBeforeRender(v, t, e, T), m = ht.get(t, g.length), m.init(), g.push(m), j.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse), G.setFromProjectionMatrix(j), V = this.localClippingEnabled, k = ut.init(this.clippingPlanes, V, e), d = ct.get(t, f.length), d.init(), f.push(d), Nt(t, e, 0, v.sortObjects), d.finish(), !0 === v.sortObjects && d.sort(z, B), !0 === k && ut.beginShadows();\n            const n = m.state.shadowsArray;\n            if (dt.render(n, t, e), !0 === k && ut.endShadows(), !0 === this.info.autoReset && this.info.reset(), pt.render(d, t), m.setupLights(v.physicallyCorrectLights), e.isArrayCamera) {\n                const n = e.cameras;\n                for(let e = 0, i = n.length; e < i; e++){\n                    const i = n[e];\n                    Bt(d, t, i, i.viewport);\n                }\n            } else Bt(d, t, e);\n            null !== T && (et.updateMultisampleRenderTarget(T), et.updateRenderTargetMipmap(T)), !0 === t.isScene && t.onAfterRender(v, t, e), K.buffers.depth.setTest(!0), K.buffers.depth.setMask(!0), K.buffers.color.setMask(!0), K.setPolygonOffset(!1), yt.resetDefaultState(), A = -1, L = null, g.pop(), m = g.length > 0 ? g[g.length - 1] : null, f.pop(), d = f.length > 0 ? f[f.length - 1] : null;\n        }, this.getActiveCubeFace = function() {\n            return M;\n        }, this.getActiveMipmapLevel = function() {\n            return S;\n        }, this.getRenderTarget = function() {\n            return T;\n        }, this.setRenderTarget = function(t, e = 0, n = 0) {\n            T = t, M = e, S = n, t && void 0 === tt.get(t).__webglFramebuffer && et.setupRenderTarget(t);\n            let i = null, r = !1, s = !1;\n            if (t) {\n                const n = t.texture;\n                (n.isDataTexture3D || n.isDataTexture2DArray) && (s = !0);\n                const a = tt.get(t).__webglFramebuffer;\n                t.isWebGLCubeRenderTarget ? (i = a[e], r = !0) : i = t.isWebGLMultisampleRenderTarget ? tt.get(t).__webglMultisampledFramebuffer : a, R.copy(t.viewport), C.copy(t.scissor), P = t.scissorTest;\n            } else R.copy(F).multiplyScalar(N).floor(), C.copy(O).multiplyScalar(N).floor(), P = U;\n            if (K.bindFramebuffer(36160, i) && Q.drawBuffers) {\n                let e = !1;\n                if (t) {\n                    if (t.isWebGLMultipleRenderTargets) {\n                        const n = t.texture;\n                        if (H.length !== n.length || 36064 !== H[0]) {\n                            for(let t = 0, e = n.length; t < e; t++)H[t] = 36064 + t;\n                            H.length = n.length, e = !0;\n                        }\n                    } else 1 === H.length && 36064 === H[0] || (H[0] = 36064, H.length = 1, e = !0);\n                } else 1 === H.length && 1029 === H[0] || (H[0] = 1029, H.length = 1, e = !0);\n                e && (Q.isWebGL2 ? xt.drawBuffers(H) : Z.get(\"WEBGL_draw_buffers\").drawBuffersWEBGL(H));\n            }\n            if (K.viewport(R), K.scissor(C), K.setScissorTest(P), r) {\n                const i = tt.get(t.texture);\n                xt.framebufferTexture2D(36160, 36064, 34069 + e, i.__webglTexture, n);\n            } else if (s) {\n                const i = tt.get(t.texture), r = e || 0;\n                xt.framebufferTextureLayer(36160, 36064, i.__webglTexture, n || 0, r);\n            }\n            A = -1;\n        }, this.readRenderTargetPixels = function(t, e, n, i, r, s, a) {\n            if (!t || !t.isWebGLRenderTarget) return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");\n            let o = tt.get(t).__webglFramebuffer;\n            if (t.isWebGLCubeRenderTarget && void 0 !== a && (o = o[a]), o) {\n                K.bindFramebuffer(36160, o);\n                try {\n                    const a = t.texture, o = a.format, l = a.type;\n                    if (o !== E && vt.convert(o) !== xt.getParameter(35739)) return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\");\n                    const c = l === w && (Z.has(\"EXT_color_buffer_half_float\") || Q.isWebGL2 && Z.has(\"EXT_color_buffer_float\"));\n                    if (!(l === x || vt.convert(l) === xt.getParameter(35738) || l === b && (Q.isWebGL2 || Z.has(\"OES_texture_float\") || Z.has(\"WEBGL_color_buffer_float\")) || c)) return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\");\n                    36053 === xt.checkFramebufferStatus(36160) ? e >= 0 && e <= t.width - i && n >= 0 && n <= t.height - r && xt.readPixels(e, n, i, r, vt.convert(o), vt.convert(l), s) : console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\");\n                } finally{\n                    const t = null !== T ? tt.get(T).__webglFramebuffer : null;\n                    K.bindFramebuffer(36160, t);\n                }\n            }\n        }, this.copyFramebufferToTexture = function(t, e, n = 0) {\n            const i = Math.pow(2, -n), r = Math.floor(e.image.width * i), s = Math.floor(e.image.height * i);\n            let a = vt.convert(e.format);\n            Q.isWebGL2 && (6407 === a && (a = 32849), 6408 === a && (a = 32856)), et.setTexture2D(e, 0), xt.copyTexImage2D(3553, n, a, t.x, t.y, r, s, 0), K.unbindTexture();\n        }, this.copyTextureToTexture = function(t, e, n, i = 0) {\n            const r = e.image.width, s = e.image.height, a = vt.convert(n.format), o = vt.convert(n.type);\n            et.setTexture2D(n, 0), xt.pixelStorei(37440, n.flipY), xt.pixelStorei(37441, n.premultiplyAlpha), xt.pixelStorei(3317, n.unpackAlignment), e.isDataTexture ? xt.texSubImage2D(3553, i, t.x, t.y, r, s, a, o, e.image.data) : e.isCompressedTexture ? xt.compressedTexSubImage2D(3553, i, t.x, t.y, e.mipmaps[0].width, e.mipmaps[0].height, a, e.mipmaps[0].data) : xt.texSubImage2D(3553, i, t.x, t.y, a, o, e.image), 0 === i && n.generateMipmaps && xt.generateMipmap(3553), K.unbindTexture();\n        }, this.copyTextureToTexture3D = function(t, e, n, i, r = 0) {\n            if (v.isWebGL1Renderer) return void console.warn(\"THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.\");\n            const s = t.max.x - t.min.x + 1, a = t.max.y - t.min.y + 1, o = t.max.z - t.min.z + 1, l = vt.convert(i.format), c = vt.convert(i.type);\n            let h;\n            if (i.isDataTexture3D) et.setTexture3D(i, 0), h = 32879;\n            else {\n                if (!i.isDataTexture2DArray) return void console.warn(\"THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.\");\n                et.setTexture2DArray(i, 0), h = 35866;\n            }\n            xt.pixelStorei(37440, i.flipY), xt.pixelStorei(37441, i.premultiplyAlpha), xt.pixelStorei(3317, i.unpackAlignment);\n            const u = xt.getParameter(3314), d = xt.getParameter(32878), p = xt.getParameter(3316), m = xt.getParameter(3315), f = xt.getParameter(32877), g = n.isCompressedTexture ? n.mipmaps[0] : n.image;\n            xt.pixelStorei(3314, g.width), xt.pixelStorei(32878, g.height), xt.pixelStorei(3316, t.min.x), xt.pixelStorei(3315, t.min.y), xt.pixelStorei(32877, t.min.z), n.isDataTexture || n.isDataTexture3D ? xt.texSubImage3D(h, r, e.x, e.y, e.z, s, a, o, l, c, g.data) : n.isCompressedTexture ? (console.warn(\"THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.\"), xt.compressedTexSubImage3D(h, r, e.x, e.y, e.z, s, a, o, l, g.data)) : xt.texSubImage3D(h, r, e.x, e.y, e.z, s, a, o, l, c, g), xt.pixelStorei(3314, u), xt.pixelStorei(32878, d), xt.pixelStorei(3316, p), xt.pixelStorei(3315, m), xt.pixelStorei(32877, f), 0 === r && i.generateMipmaps && xt.generateMipmap(h), K.unbindTexture();\n        }, this.initTexture = function(t) {\n            et.setTexture2D(t, 0), K.unbindTexture();\n        }, this.resetState = function() {\n            M = 0, S = 0, T = null, K.reset(), yt.reset();\n        }, \"undefined\" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent(\"observe\", {\n            detail: this\n        }));\n    }\n    Qs.prototype.isWebGLRenderer = !0;\n    class Ks extends Qs {\n    }\n    Ks.prototype.isWebGL1Renderer = !0;\n    class $s {\n        constructor(t, e = 25e-5){\n            this.name = \"\", this.color = new rn(t), this.density = e;\n        }\n        clone() {\n            return new $s(this.color, this.density);\n        }\n        toJSON() {\n            return {\n                type: \"FogExp2\",\n                color: this.color.getHex(),\n                density: this.density\n            };\n        }\n    }\n    $s.prototype.isFogExp2 = !0;\n    class ta {\n        constructor(t, e = 1, n = 1e3){\n            this.name = \"\", this.color = new rn(t), this.near = e, this.far = n;\n        }\n        clone() {\n            return new ta(this.color, this.near, this.far);\n        }\n        toJSON() {\n            return {\n                type: \"Fog\",\n                color: this.color.getHex(),\n                near: this.near,\n                far: this.far\n            };\n        }\n    }\n    ta.prototype.isFog = !0;\n    class ea extends Fe {\n        constructor(){\n            super(), this.type = \"Scene\", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, \"undefined\" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent(\"observe\", {\n                detail: this\n            }));\n        }\n        copy(t, e) {\n            return super.copy(t, e), null !== t.background && (this.background = t.background.clone()), null !== t.environment && (this.environment = t.environment.clone()), null !== t.fog && (this.fog = t.fog.clone()), null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()), this.autoUpdate = t.autoUpdate, this.matrixAutoUpdate = t.matrixAutoUpdate, this;\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            return null !== this.fog && (e.object.fog = this.fog.toJSON()), e;\n        }\n    }\n    ea.prototype.isScene = !0;\n    class na {\n        constructor(t, e){\n            this.array = t, this.stride = e, this.count = void 0 !== t ? t.length / e : 0, this.usage = et, this.updateRange = {\n                offset: 0,\n                count: -1\n            }, this.version = 0, this.uuid = ht();\n        }\n        onUploadCallback() {}\n        set needsUpdate(t) {\n            !0 === t && this.version++;\n        }\n        setUsage(t) {\n            return this.usage = t, this;\n        }\n        copy(t) {\n            return this.array = new t.array.constructor(t.array), this.count = t.count, this.stride = t.stride, this.usage = t.usage, this;\n        }\n        copyAt(t, e, n) {\n            t *= this.stride, n *= e.stride;\n            for(let i = 0, r = this.stride; i < r; i++)this.array[t + i] = e.array[n + i];\n            return this;\n        }\n        set(t, e = 0) {\n            return this.array.set(t, e), this;\n        }\n        clone(t) {\n            void 0 === t.arrayBuffers && (t.arrayBuffers = {}), void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = ht()), void 0 === t.arrayBuffers[this.array.buffer._uuid] && (t.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);\n            const e = new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]), n = new this.constructor(e, this.stride);\n            return n.setUsage(this.usage), n;\n        }\n        onUpload(t) {\n            return this.onUploadCallback = t, this;\n        }\n        toJSON(t) {\n            return void 0 === t.arrayBuffers && (t.arrayBuffers = {}), void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = ht()), void 0 === t.arrayBuffers[this.array.buffer._uuid] && (t.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {\n                uuid: this.uuid,\n                buffer: this.array.buffer._uuid,\n                type: this.array.constructor.name,\n                stride: this.stride\n            };\n        }\n    }\n    na.prototype.isInterleavedBuffer = !0;\n    const ia = new zt;\n    class ra {\n        constructor(t, e, n, i = !1){\n            this.name = \"\", this.data = t, this.itemSize = e, this.offset = n, this.normalized = !0 === i;\n        }\n        get count() {\n            return this.data.count;\n        }\n        get array() {\n            return this.data.array;\n        }\n        set needsUpdate(t) {\n            this.data.needsUpdate = t;\n        }\n        applyMatrix4(t) {\n            for(let e = 0, n = this.data.count; e < n; e++)ia.x = this.getX(e), ia.y = this.getY(e), ia.z = this.getZ(e), ia.applyMatrix4(t), this.setXYZ(e, ia.x, ia.y, ia.z);\n            return this;\n        }\n        applyNormalMatrix(t) {\n            for(let e = 0, n = this.count; e < n; e++)ia.x = this.getX(e), ia.y = this.getY(e), ia.z = this.getZ(e), ia.applyNormalMatrix(t), this.setXYZ(e, ia.x, ia.y, ia.z);\n            return this;\n        }\n        transformDirection(t) {\n            for(let e = 0, n = this.count; e < n; e++)ia.x = this.getX(e), ia.y = this.getY(e), ia.z = this.getZ(e), ia.transformDirection(t), this.setXYZ(e, ia.x, ia.y, ia.z);\n            return this;\n        }\n        setX(t, e) {\n            return this.data.array[t * this.data.stride + this.offset] = e, this;\n        }\n        setY(t, e) {\n            return this.data.array[t * this.data.stride + this.offset + 1] = e, this;\n        }\n        setZ(t, e) {\n            return this.data.array[t * this.data.stride + this.offset + 2] = e, this;\n        }\n        setW(t, e) {\n            return this.data.array[t * this.data.stride + this.offset + 3] = e, this;\n        }\n        getX(t) {\n            return this.data.array[t * this.data.stride + this.offset];\n        }\n        getY(t) {\n            return this.data.array[t * this.data.stride + this.offset + 1];\n        }\n        getZ(t) {\n            return this.data.array[t * this.data.stride + this.offset + 2];\n        }\n        getW(t) {\n            return this.data.array[t * this.data.stride + this.offset + 3];\n        }\n        setXY(t, e, n) {\n            return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = n, this;\n        }\n        setXYZ(t, e, n, i) {\n            return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = n, this.data.array[t + 2] = i, this;\n        }\n        setXYZW(t, e, n, i, r) {\n            return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = n, this.data.array[t + 2] = i, this.data.array[t + 3] = r, this;\n        }\n        clone(t) {\n            if (void 0 === t) {\n                console.log(\"THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.\");\n                const t = [];\n                for(let e = 0; e < this.count; e++){\n                    const n = e * this.data.stride + this.offset;\n                    for(let e = 0; e < this.itemSize; e++)t.push(this.data.array[n + e]);\n                }\n                return new ln(new this.array.constructor(t), this.itemSize, this.normalized);\n            }\n            return void 0 === t.interleavedBuffers && (t.interleavedBuffers = {}), void 0 === t.interleavedBuffers[this.data.uuid] && (t.interleavedBuffers[this.data.uuid] = this.data.clone(t)), new ra(t.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n        }\n        toJSON(t) {\n            if (void 0 === t) {\n                console.log(\"THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.\");\n                const t = [];\n                for(let e = 0; e < this.count; e++){\n                    const n = e * this.data.stride + this.offset;\n                    for(let e = 0; e < this.itemSize; e++)t.push(this.data.array[n + e]);\n                }\n                return {\n                    itemSize: this.itemSize,\n                    type: this.array.constructor.name,\n                    array: t,\n                    normalized: this.normalized\n                };\n            }\n            return void 0 === t.interleavedBuffers && (t.interleavedBuffers = {}), void 0 === t.interleavedBuffers[this.data.uuid] && (t.interleavedBuffers[this.data.uuid] = this.data.toJSON(t)), {\n                isInterleavedBufferAttribute: !0,\n                itemSize: this.itemSize,\n                data: this.data.uuid,\n                offset: this.offset,\n                normalized: this.normalized\n            };\n        }\n    }\n    ra.prototype.isInterleavedBufferAttribute = !0;\n    class sa extends Ze {\n        constructor(t){\n            super(), this.type = \"SpriteMaterial\", this.color = new rn(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.map = t.map, this.alphaMap = t.alphaMap, this.rotation = t.rotation, this.sizeAttenuation = t.sizeAttenuation, this;\n        }\n    }\n    let aa;\n    sa.prototype.isSpriteMaterial = !0;\n    const oa = new zt, la = new zt, ca = new zt, ha = new yt, ua = new yt, da = new de, pa = new zt, ma = new zt, fa = new zt, ga = new yt, va = new yt, ya = new yt;\n    class xa extends Fe {\n        constructor(t){\n            if (super(), this.type = \"Sprite\", void 0 === aa) {\n                aa = new En;\n                const t = new Float32Array([\n                    -0.5,\n                    -0.5,\n                    0,\n                    0,\n                    0,\n                    .5,\n                    -0.5,\n                    0,\n                    1,\n                    0,\n                    .5,\n                    .5,\n                    0,\n                    1,\n                    1,\n                    -0.5,\n                    .5,\n                    0,\n                    0,\n                    1\n                ]), e = new na(t, 5);\n                aa.setIndex([\n                    0,\n                    1,\n                    2,\n                    0,\n                    2,\n                    3\n                ]), aa.setAttribute(\"position\", new ra(e, 3, 0, !1)), aa.setAttribute(\"uv\", new ra(e, 2, 3, !1));\n            }\n            this.geometry = aa, this.material = void 0 !== t ? t : new sa, this.center = new yt(.5, .5);\n        }\n        raycast(t, e) {\n            null === t.camera && console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.'), la.setFromMatrixScale(this.matrixWorld), da.copy(t.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse, this.matrixWorld), ca.setFromMatrixPosition(this.modelViewMatrix), t.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && la.multiplyScalar(-ca.z);\n            const n = this.material.rotation;\n            let i, r;\n            0 !== n && (r = Math.cos(n), i = Math.sin(n));\n            const s = this.center;\n            _a(pa.set(-0.5, -0.5, 0), ca, s, la, i, r), _a(ma.set(.5, -0.5, 0), ca, s, la, i, r), _a(fa.set(.5, .5, 0), ca, s, la, i, r), ga.set(0, 0), va.set(1, 0), ya.set(1, 1);\n            let a = t.ray.intersectTriangle(pa, ma, fa, !1, oa);\n            if (null === a && (_a(ma.set(-0.5, .5, 0), ca, s, la, i, r), va.set(0, 1), a = t.ray.intersectTriangle(pa, fa, ma, !1, oa), null === a)) return;\n            const o = t.ray.origin.distanceTo(oa);\n            o < t.near || o > t.far || e.push({\n                distance: o,\n                point: oa.clone(),\n                uv: Ye.getUV(oa, pa, ma, fa, ga, va, ya, new yt),\n                face: null,\n                object: this\n            });\n        }\n        copy(t) {\n            return super.copy(t), void 0 !== t.center && this.center.copy(t.center), this.material = t.material, this;\n        }\n    }\n    function _a(t, e, n, i, r, s) {\n        ha.subVectors(t, n).addScalar(.5).multiply(i), void 0 !== r ? (ua.x = s * ha.x - r * ha.y, ua.y = r * ha.x + s * ha.y) : ua.copy(ha), t.copy(e), t.x += ua.x, t.y += ua.y, t.applyMatrix4(da);\n    }\n    xa.prototype.isSprite = !0;\n    const Ma = new zt, ba = new zt;\n    class wa extends Fe {\n        constructor(){\n            super(), this._currentLevel = 0, this.type = \"LOD\", Object.defineProperties(this, {\n                levels: {\n                    enumerable: !0,\n                    value: []\n                },\n                isLOD: {\n                    value: !0\n                }\n            }), this.autoUpdate = !0;\n        }\n        copy(t) {\n            super.copy(t, !1);\n            const e = t.levels;\n            for(let t = 0, n = e.length; t < n; t++){\n                const n = e[t];\n                this.addLevel(n.object.clone(), n.distance);\n            }\n            return this.autoUpdate = t.autoUpdate, this;\n        }\n        addLevel(t, e = 0) {\n            e = Math.abs(e);\n            const n = this.levels;\n            let i;\n            for(i = 0; i < n.length && !(e < n[i].distance); i++);\n            return n.splice(i, 0, {\n                distance: e,\n                object: t\n            }), this.add(t), this;\n        }\n        getCurrentLevel() {\n            return this._currentLevel;\n        }\n        getObjectForDistance(t) {\n            const e = this.levels;\n            if (e.length > 0) {\n                let n, i;\n                for(n = 1, i = e.length; n < i && !(t < e[n].distance); n++);\n                return e[n - 1].object;\n            }\n            return null;\n        }\n        raycast(t, e) {\n            if (this.levels.length > 0) {\n                Ma.setFromMatrixPosition(this.matrixWorld);\n                const n = t.ray.origin.distanceTo(Ma);\n                this.getObjectForDistance(n).raycast(t, e);\n            }\n        }\n        update(t) {\n            const e = this.levels;\n            if (e.length > 1) {\n                Ma.setFromMatrixPosition(t.matrixWorld), ba.setFromMatrixPosition(this.matrixWorld);\n                const n = Ma.distanceTo(ba) / t.zoom;\n                let i, r;\n                for(e[0].object.visible = !0, i = 1, r = e.length; i < r && n >= e[i].distance; i++)e[i - 1].object.visible = !1, e[i].object.visible = !0;\n                for(this._currentLevel = i - 1; i < r; i++)e[i].object.visible = !1;\n            }\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            !1 === this.autoUpdate && (e.object.autoUpdate = !1), e.object.levels = [];\n            const n = this.levels;\n            for(let t = 0, i = n.length; t < i; t++){\n                const i = n[t];\n                e.object.levels.push({\n                    object: i.object.uuid,\n                    distance: i.distance\n                });\n            }\n            return e;\n        }\n    }\n    const Sa = new zt, Ta = new Ct, Ea = new Ct, Aa = new zt, La = new de;\n    class Ra extends Wn {\n        constructor(t, e){\n            super(t, e), this.type = \"SkinnedMesh\", this.bindMode = \"attached\", this.bindMatrix = new de, this.bindMatrixInverse = new de;\n        }\n        copy(t) {\n            return super.copy(t), this.bindMode = t.bindMode, this.bindMatrix.copy(t.bindMatrix), this.bindMatrixInverse.copy(t.bindMatrixInverse), this.skeleton = t.skeleton, this;\n        }\n        bind(t, e) {\n            this.skeleton = t, void 0 === e && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), e = this.matrixWorld), this.bindMatrix.copy(e), this.bindMatrixInverse.copy(e).invert();\n        }\n        pose() {\n            this.skeleton.pose();\n        }\n        normalizeSkinWeights() {\n            const t = new Ct, e = this.geometry.attributes.skinWeight;\n            for(let n = 0, i = e.count; n < i; n++){\n                t.x = e.getX(n), t.y = e.getY(n), t.z = e.getZ(n), t.w = e.getW(n);\n                const i = 1 / t.manhattanLength();\n                i !== 1 / 0 ? t.multiplyScalar(i) : t.set(1, 0, 0, 0), e.setXYZW(n, t.x, t.y, t.z, t.w);\n            }\n        }\n        updateMatrixWorld(t) {\n            super.updateMatrixWorld(t), \"attached\" === this.bindMode ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : \"detached\" === this.bindMode ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn(\"THREE.SkinnedMesh: Unrecognized bindMode: \" + this.bindMode);\n        }\n        boneTransform(t, e) {\n            const n = this.skeleton, i = this.geometry;\n            Ta.fromBufferAttribute(i.attributes.skinIndex, t), Ea.fromBufferAttribute(i.attributes.skinWeight, t), Sa.copy(e).applyMatrix4(this.bindMatrix), e.set(0, 0, 0);\n            for(let t = 0; t < 4; t++){\n                const i = Ea.getComponent(t);\n                if (0 !== i) {\n                    const r = Ta.getComponent(t);\n                    La.multiplyMatrices(n.bones[r].matrixWorld, n.boneInverses[r]), e.addScaledVector(Aa.copy(Sa).applyMatrix4(La), i);\n                }\n            }\n            return e.applyMatrix4(this.bindMatrixInverse);\n        }\n    }\n    Ra.prototype.isSkinnedMesh = !0;\n    class Ca extends Fe {\n        constructor(){\n            super(), this.type = \"Bone\";\n        }\n    }\n    Ca.prototype.isBone = !0;\n    class Pa extends Lt {\n        constructor(t = null, e = 1, n = 1, i, r, s, a, o, l = 1003, c = 1003, h, u){\n            super(null, s, a, o, l, c, i, r, h, u), this.image = {\n                data: t,\n                width: e,\n                height: n\n            }, this.magFilter = l, this.minFilter = c, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1, this.needsUpdate = !0;\n        }\n    }\n    Pa.prototype.isDataTexture = !0;\n    const Ia = new de, Da = new de;\n    class Na {\n        constructor(t = [], e = []){\n            this.uuid = ht(), this.bones = t.slice(0), this.boneInverses = e, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.frame = -1, this.init();\n        }\n        init() {\n            const t = this.bones, e = this.boneInverses;\n            if (this.boneMatrices = new Float32Array(16 * t.length), 0 === e.length) this.calculateInverses();\n            else if (t.length !== e.length) {\n                console.warn(\"THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.\"), this.boneInverses = [];\n                for(let t = 0, e = this.bones.length; t < e; t++)this.boneInverses.push(new de);\n            }\n        }\n        calculateInverses() {\n            this.boneInverses.length = 0;\n            for(let t = 0, e = this.bones.length; t < e; t++){\n                const e = new de;\n                this.bones[t] && e.copy(this.bones[t].matrixWorld).invert(), this.boneInverses.push(e);\n            }\n        }\n        pose() {\n            for(let t = 0, e = this.bones.length; t < e; t++){\n                const e = this.bones[t];\n                e && e.matrixWorld.copy(this.boneInverses[t]).invert();\n            }\n            for(let t = 0, e = this.bones.length; t < e; t++){\n                const e = this.bones[t];\n                e && (e.parent && e.parent.isBone ? (e.matrix.copy(e.parent.matrixWorld).invert(), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale));\n            }\n        }\n        update() {\n            const t = this.bones, e = this.boneInverses, n = this.boneMatrices, i = this.boneTexture;\n            for(let i = 0, r = t.length; i < r; i++){\n                const r = t[i] ? t[i].matrixWorld : Da;\n                Ia.multiplyMatrices(r, e[i]), Ia.toArray(n, 16 * i);\n            }\n            null !== i && (i.needsUpdate = !0);\n        }\n        clone() {\n            return new Na(this.bones, this.boneInverses);\n        }\n        computeBoneTexture() {\n            let t = Math.sqrt(4 * this.bones.length);\n            t = ft(t), t = Math.max(t, 4);\n            const e = new Float32Array(t * t * 4);\n            e.set(this.boneMatrices);\n            const n = new Pa(e, t, t, E, b);\n            return this.boneMatrices = e, this.boneTexture = n, this.boneTextureSize = t, this;\n        }\n        getBoneByName(t) {\n            for(let e = 0, n = this.bones.length; e < n; e++){\n                const n = this.bones[e];\n                if (n.name === t) return n;\n            }\n        }\n        dispose() {\n            null !== this.boneTexture && (this.boneTexture.dispose(), this.boneTexture = null);\n        }\n        fromJSON(t, e) {\n            this.uuid = t.uuid;\n            for(let n = 0, i = t.bones.length; n < i; n++){\n                const i = t.bones[n];\n                let r = e[i];\n                void 0 === r && (console.warn(\"THREE.Skeleton: No bone found with UUID:\", i), r = new Ca), this.bones.push(r), this.boneInverses.push((new de).fromArray(t.boneInverses[n]));\n            }\n            return this.init(), this;\n        }\n        toJSON() {\n            const t = {\n                metadata: {\n                    version: 4.5,\n                    type: \"Skeleton\",\n                    generator: \"Skeleton.toJSON\"\n                },\n                bones: [],\n                boneInverses: []\n            };\n            t.uuid = this.uuid;\n            const e = this.bones, n = this.boneInverses;\n            for(let i = 0, r = e.length; i < r; i++){\n                const r = e[i];\n                t.bones.push(r.uuid);\n                const s = n[i];\n                t.boneInverses.push(s.toArray());\n            }\n            return t;\n        }\n    }\n    class za extends ln {\n        constructor(t, e, n, i = 1){\n            \"number\" == typeof n && (i = n, n = !1, console.error(\"THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.\")), super(t, e, n), this.meshPerAttribute = i;\n        }\n        copy(t) {\n            return super.copy(t), this.meshPerAttribute = t.meshPerAttribute, this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.meshPerAttribute = this.meshPerAttribute, t.isInstancedBufferAttribute = !0, t;\n        }\n    }\n    za.prototype.isInstancedBufferAttribute = !0;\n    const Ba = new de, Fa = new de, Oa = [], Ua = new Wn;\n    class Ha extends Wn {\n        constructor(t, e, n){\n            super(t, e), this.instanceMatrix = new za(new Float32Array(16 * n), 16), this.instanceColor = null, this.count = n, this.frustumCulled = !1;\n        }\n        copy(t) {\n            return super.copy(t), this.instanceMatrix.copy(t.instanceMatrix), null !== t.instanceColor && (this.instanceColor = t.instanceColor.clone()), this.count = t.count, this;\n        }\n        getColorAt(t, e) {\n            e.fromArray(this.instanceColor.array, 3 * t);\n        }\n        getMatrixAt(t, e) {\n            e.fromArray(this.instanceMatrix.array, 16 * t);\n        }\n        raycast(t, e) {\n            const n = this.matrixWorld, i = this.count;\n            if (Ua.geometry = this.geometry, Ua.material = this.material, void 0 !== Ua.material) for(let r = 0; r < i; r++){\n                this.getMatrixAt(r, Ba), Fa.multiplyMatrices(n, Ba), Ua.matrixWorld = Fa, Ua.raycast(t, Oa);\n                for(let t = 0, n = Oa.length; t < n; t++){\n                    const n = Oa[t];\n                    n.instanceId = r, n.object = this, e.push(n);\n                }\n                Oa.length = 0;\n            }\n        }\n        setColorAt(t, e) {\n            null === this.instanceColor && (this.instanceColor = new za(new Float32Array(3 * this.instanceMatrix.count), 3)), e.toArray(this.instanceColor.array, 3 * t);\n        }\n        setMatrixAt(t, e) {\n            e.toArray(this.instanceMatrix.array, 16 * t);\n        }\n        updateMorphTargets() {}\n        dispose() {\n            this.dispatchEvent({\n                type: \"dispose\"\n            });\n        }\n    }\n    Ha.prototype.isInstancedMesh = !0;\n    class Ga extends Ze {\n        constructor(t){\n            super(), this.type = \"LineBasicMaterial\", this.color = new rn(16777215), this.linewidth = 1, this.linecap = \"round\", this.linejoin = \"round\", this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.linewidth = t.linewidth, this.linecap = t.linecap, this.linejoin = t.linejoin, this;\n        }\n    }\n    Ga.prototype.isLineBasicMaterial = !0;\n    const ka = new zt, Va = new zt, Wa = new de, ja = new ue, qa = new ie;\n    class Xa extends Fe {\n        constructor(t = new En, e = new Ga){\n            super(), this.type = \"Line\", this.geometry = t, this.material = e, this.updateMorphTargets();\n        }\n        copy(t) {\n            return super.copy(t), this.material = t.material, this.geometry = t.geometry, this;\n        }\n        computeLineDistances() {\n            const t = this.geometry;\n            if (t.isBufferGeometry) {\n                if (null === t.index) {\n                    const e = t.attributes.position, n = [\n                        0\n                    ];\n                    for(let t = 1, i = e.count; t < i; t++)ka.fromBufferAttribute(e, t - 1), Va.fromBufferAttribute(e, t), n[t] = n[t - 1], n[t] += ka.distanceTo(Va);\n                    t.setAttribute(\"lineDistance\", new vn(n, 1));\n                } else console.warn(\"THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");\n            } else t.isGeometry && console.error(\"THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");\n            return this;\n        }\n        raycast(t, e) {\n            const n = this.geometry, i = this.matrixWorld, r = t.params.Line.threshold, s = n.drawRange;\n            if (null === n.boundingSphere && n.computeBoundingSphere(), qa.copy(n.boundingSphere), qa.applyMatrix4(i), qa.radius += r, !1 === t.ray.intersectsSphere(qa)) return;\n            Wa.copy(i).invert(), ja.copy(t.ray).applyMatrix4(Wa);\n            const a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), o = a * a, l = new zt, c = new zt, h = new zt, u = new zt, d = this.isLineSegments ? 2 : 1;\n            if (n.isBufferGeometry) {\n                const i = n.index, r = n.attributes.position;\n                if (null !== i) for(let n = Math.max(0, s.start), a = Math.min(i.count, s.start + s.count) - 1; n < a; n += d){\n                    const s = i.getX(n), a = i.getX(n + 1);\n                    l.fromBufferAttribute(r, s), c.fromBufferAttribute(r, a);\n                    if (ja.distanceSqToSegment(l, c, u, h) > o) continue;\n                    u.applyMatrix4(this.matrixWorld);\n                    const d = t.ray.origin.distanceTo(u);\n                    d < t.near || d > t.far || e.push({\n                        distance: d,\n                        point: h.clone().applyMatrix4(this.matrixWorld),\n                        index: n,\n                        face: null,\n                        faceIndex: null,\n                        object: this\n                    });\n                }\n                else for(let n = Math.max(0, s.start), i = Math.min(r.count, s.start + s.count) - 1; n < i; n += d){\n                    l.fromBufferAttribute(r, n), c.fromBufferAttribute(r, n + 1);\n                    if (ja.distanceSqToSegment(l, c, u, h) > o) continue;\n                    u.applyMatrix4(this.matrixWorld);\n                    const i = t.ray.origin.distanceTo(u);\n                    i < t.near || i > t.far || e.push({\n                        distance: i,\n                        point: h.clone().applyMatrix4(this.matrixWorld),\n                        index: n,\n                        face: null,\n                        faceIndex: null,\n                        object: this\n                    });\n                }\n            } else n.isGeometry && console.error(\"THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");\n        }\n        updateMorphTargets() {\n            const t = this.geometry;\n            if (t.isBufferGeometry) {\n                const e = t.morphAttributes, n = Object.keys(e);\n                if (n.length > 0) {\n                    const t = e[n[0]];\n                    if (void 0 !== t) {\n                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};\n                        for(let e = 0, n = t.length; e < n; e++){\n                            const n = t[e].name || String(e);\n                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e;\n                        }\n                    }\n                }\n            } else {\n                const e = t.morphTargets;\n                void 0 !== e && e.length > 0 && console.error(\"THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.\");\n            }\n        }\n    }\n    Xa.prototype.isLine = !0;\n    const Ya = new zt, Ja = new zt;\n    class Za extends Xa {\n        constructor(t, e){\n            super(t, e), this.type = \"LineSegments\";\n        }\n        computeLineDistances() {\n            const t = this.geometry;\n            if (t.isBufferGeometry) {\n                if (null === t.index) {\n                    const e = t.attributes.position, n = [];\n                    for(let t = 0, i = e.count; t < i; t += 2)Ya.fromBufferAttribute(e, t), Ja.fromBufferAttribute(e, t + 1), n[t] = 0 === t ? 0 : n[t - 1], n[t + 1] = n[t] + Ya.distanceTo(Ja);\n                    t.setAttribute(\"lineDistance\", new vn(n, 1));\n                } else console.warn(\"THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");\n            } else t.isGeometry && console.error(\"THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");\n            return this;\n        }\n    }\n    Za.prototype.isLineSegments = !0;\n    class Qa extends Xa {\n        constructor(t, e){\n            super(t, e), this.type = \"LineLoop\";\n        }\n    }\n    Qa.prototype.isLineLoop = !0;\n    class Ka extends Ze {\n        constructor(t){\n            super(), this.type = \"PointsMaterial\", this.color = new rn(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.map = t.map, this.alphaMap = t.alphaMap, this.size = t.size, this.sizeAttenuation = t.sizeAttenuation, this;\n        }\n    }\n    Ka.prototype.isPointsMaterial = !0;\n    const $a = new de, to = new ue, eo = new ie, no = new zt;\n    class io extends Fe {\n        constructor(t = new En, e = new Ka){\n            super(), this.type = \"Points\", this.geometry = t, this.material = e, this.updateMorphTargets();\n        }\n        copy(t) {\n            return super.copy(t), this.material = t.material, this.geometry = t.geometry, this;\n        }\n        raycast(t, e) {\n            const n = this.geometry, i = this.matrixWorld, r = t.params.Points.threshold, s = n.drawRange;\n            if (null === n.boundingSphere && n.computeBoundingSphere(), eo.copy(n.boundingSphere), eo.applyMatrix4(i), eo.radius += r, !1 === t.ray.intersectsSphere(eo)) return;\n            $a.copy(i).invert(), to.copy(t.ray).applyMatrix4($a);\n            const a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), o = a * a;\n            if (n.isBufferGeometry) {\n                const r = n.index, a = n.attributes.position;\n                if (null !== r) for(let n = Math.max(0, s.start), l = Math.min(r.count, s.start + s.count); n < l; n++){\n                    const s = r.getX(n);\n                    no.fromBufferAttribute(a, s), ro(no, s, o, i, t, e, this);\n                }\n                else for(let n = Math.max(0, s.start), r = Math.min(a.count, s.start + s.count); n < r; n++)no.fromBufferAttribute(a, n), ro(no, n, o, i, t, e, this);\n            } else console.error(\"THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");\n        }\n        updateMorphTargets() {\n            const t = this.geometry;\n            if (t.isBufferGeometry) {\n                const e = t.morphAttributes, n = Object.keys(e);\n                if (n.length > 0) {\n                    const t = e[n[0]];\n                    if (void 0 !== t) {\n                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};\n                        for(let e = 0, n = t.length; e < n; e++){\n                            const n = t[e].name || String(e);\n                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e;\n                        }\n                    }\n                }\n            } else {\n                const e = t.morphTargets;\n                void 0 !== e && e.length > 0 && console.error(\"THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.\");\n            }\n        }\n    }\n    function ro(t, e, n, i, r, s, a) {\n        const o = to.distanceSqToPoint(t);\n        if (o < n) {\n            const n = new zt;\n            to.closestPointToPoint(t, n), n.applyMatrix4(i);\n            const l = r.ray.origin.distanceTo(n);\n            if (l < r.near || l > r.far) return;\n            s.push({\n                distance: l,\n                distanceToRay: Math.sqrt(o),\n                point: n,\n                index: e,\n                face: null,\n                object: a\n            });\n        }\n    }\n    io.prototype.isPoints = !0;\n    class so extends Lt {\n        constructor(t, e, n, i, r, s, a, o, l){\n            super(t, e, n, i, r, s, a, o, l), this.format = void 0 !== a ? a : T, this.minFilter = void 0 !== s ? s : g, this.magFilter = void 0 !== r ? r : g, this.generateMipmaps = !1;\n            const c = this;\n            \"requestVideoFrameCallback\" in t && t.requestVideoFrameCallback(function e() {\n                c.needsUpdate = !0, t.requestVideoFrameCallback(e);\n            });\n        }\n        clone() {\n            return new this.constructor(this.image).copy(this);\n        }\n        update() {\n            const t = this.image;\n            !1 === \"requestVideoFrameCallback\" in t && t.readyState >= t.HAVE_CURRENT_DATA && (this.needsUpdate = !0);\n        }\n    }\n    so.prototype.isVideoTexture = !0;\n    class ao extends Lt {\n        constructor(t, e, n, i, r, s, a, o, l, c, h, u){\n            super(null, s, a, o, l, c, i, r, h, u), this.image = {\n                width: e,\n                height: n\n            }, this.mipmaps = t, this.flipY = !1, this.generateMipmaps = !1;\n        }\n    }\n    ao.prototype.isCompressedTexture = !0;\n    class oo extends Lt {\n        constructor(t, e, n, i, r, s, a, o, l){\n            super(t, e, n, i, r, s, a, o, l), this.needsUpdate = !0;\n        }\n    }\n    oo.prototype.isCanvasTexture = !0;\n    class lo extends Lt {\n        constructor(t, e, n, i, r, s, a, o, l, c){\n            if ((c = void 0 !== c ? c : A) !== A && c !== L) throw new Error(\"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\");\n            void 0 === n && c === A && (n = _), void 0 === n && c === L && (n = S), super(null, i, r, s, a, o, c, n, l), this.image = {\n                width: t,\n                height: e\n            }, this.magFilter = void 0 !== a ? a : p, this.minFilter = void 0 !== o ? o : p, this.flipY = !1, this.generateMipmaps = !1;\n        }\n    }\n    lo.prototype.isDepthTexture = !0;\n    class co extends En {\n        constructor(t = 1, e = 8, n = 0, i = 2 * Math.PI){\n            super(), this.type = \"CircleGeometry\", this.parameters = {\n                radius: t,\n                segments: e,\n                thetaStart: n,\n                thetaLength: i\n            }, e = Math.max(3, e);\n            const r = [], s = [], a = [], o = [], l = new zt, c = new yt;\n            s.push(0, 0, 0), a.push(0, 0, 1), o.push(.5, .5);\n            for(let r = 0, h = 3; r <= e; r++, h += 3){\n                const u = n + r / e * i;\n                l.x = t * Math.cos(u), l.y = t * Math.sin(u), s.push(l.x, l.y, l.z), a.push(0, 0, 1), c.x = (s[h] / t + 1) / 2, c.y = (s[h + 1] / t + 1) / 2, o.push(c.x, c.y);\n            }\n            for(let t = 1; t <= e; t++)r.push(t, t + 1, 0);\n            this.setIndex(r), this.setAttribute(\"position\", new vn(s, 3)), this.setAttribute(\"normal\", new vn(a, 3)), this.setAttribute(\"uv\", new vn(o, 2));\n        }\n        static fromJSON(t) {\n            return new co(t.radius, t.segments, t.thetaStart, t.thetaLength);\n        }\n    }\n    class ho extends En {\n        constructor(t = 1, e = 1, n = 1, i = 8, r = 1, s = !1, a = 0, o = 2 * Math.PI){\n            super(), this.type = \"CylinderGeometry\", this.parameters = {\n                radiusTop: t,\n                radiusBottom: e,\n                height: n,\n                radialSegments: i,\n                heightSegments: r,\n                openEnded: s,\n                thetaStart: a,\n                thetaLength: o\n            };\n            const l = this;\n            i = Math.floor(i), r = Math.floor(r);\n            const c = [], h = [], u = [], d = [];\n            let p = 0;\n            const m = [], f = n / 2;\n            let g = 0;\n            function v(n) {\n                const r = p, s = new yt, m = new zt;\n                let v = 0;\n                const y = !0 === n ? t : e, x = !0 === n ? 1 : -1;\n                for(let t = 1; t <= i; t++)h.push(0, f * x, 0), u.push(0, x, 0), d.push(.5, .5), p++;\n                const _ = p;\n                for(let t = 0; t <= i; t++){\n                    const e = t / i * o + a, n = Math.cos(e), r = Math.sin(e);\n                    m.x = y * r, m.y = f * x, m.z = y * n, h.push(m.x, m.y, m.z), u.push(0, x, 0), s.x = .5 * n + .5, s.y = .5 * r * x + .5, d.push(s.x, s.y), p++;\n                }\n                for(let t = 0; t < i; t++){\n                    const e = r + t, i = _ + t;\n                    !0 === n ? c.push(i, i + 1, e) : c.push(i + 1, i, e), v += 3;\n                }\n                l.addGroup(g, v, !0 === n ? 1 : 2), g += v;\n            }\n            !function() {\n                const s = new zt, v = new zt;\n                let y = 0;\n                const x = (e - t) / n;\n                for(let l = 0; l <= r; l++){\n                    const c = [], g = l / r, y = g * (e - t) + t;\n                    for(let t = 0; t <= i; t++){\n                        const e = t / i, r = e * o + a, l = Math.sin(r), m = Math.cos(r);\n                        v.x = y * l, v.y = -g * n + f, v.z = y * m, h.push(v.x, v.y, v.z), s.set(l, x, m).normalize(), u.push(s.x, s.y, s.z), d.push(e, 1 - g), c.push(p++);\n                    }\n                    m.push(c);\n                }\n                for(let t = 0; t < i; t++)for(let e = 0; e < r; e++){\n                    const n = m[e][t], i = m[e + 1][t], r = m[e + 1][t + 1], s = m[e][t + 1];\n                    c.push(n, i, s), c.push(i, r, s), y += 6;\n                }\n                l.addGroup(g, y, 0), g += y;\n            }(), !1 === s && (t > 0 && v(!0), e > 0 && v(!1)), this.setIndex(c), this.setAttribute(\"position\", new vn(h, 3)), this.setAttribute(\"normal\", new vn(u, 3)), this.setAttribute(\"uv\", new vn(d, 2));\n        }\n        static fromJSON(t) {\n            return new ho(t.radiusTop, t.radiusBottom, t.height, t.radialSegments, t.heightSegments, t.openEnded, t.thetaStart, t.thetaLength);\n        }\n    }\n    class uo extends ho {\n        constructor(t = 1, e = 1, n = 8, i = 1, r = !1, s = 0, a = 2 * Math.PI){\n            super(0, t, e, n, i, r, s, a), this.type = \"ConeGeometry\", this.parameters = {\n                radius: t,\n                height: e,\n                radialSegments: n,\n                heightSegments: i,\n                openEnded: r,\n                thetaStart: s,\n                thetaLength: a\n            };\n        }\n        static fromJSON(t) {\n            return new uo(t.radius, t.height, t.radialSegments, t.heightSegments, t.openEnded, t.thetaStart, t.thetaLength);\n        }\n    }\n    class po extends En {\n        constructor(t = [], e = [], n = 1, i = 0){\n            super(), this.type = \"PolyhedronGeometry\", this.parameters = {\n                vertices: t,\n                indices: e,\n                radius: n,\n                detail: i\n            };\n            const r = [], s = [];\n            function a(t, e, n, i) {\n                const r = i + 1, s = [];\n                for(let i = 0; i <= r; i++){\n                    s[i] = [];\n                    const a = t.clone().lerp(n, i / r), o = e.clone().lerp(n, i / r), l = r - i;\n                    for(let t = 0; t <= l; t++)s[i][t] = 0 === t && i === r ? a : a.clone().lerp(o, t / l);\n                }\n                for(let t = 0; t < r; t++)for(let e = 0; e < 2 * (r - t) - 1; e++){\n                    const n = Math.floor(e / 2);\n                    e % 2 == 0 ? (o(s[t][n + 1]), o(s[t + 1][n]), o(s[t][n])) : (o(s[t][n + 1]), o(s[t + 1][n + 1]), o(s[t + 1][n]));\n                }\n            }\n            function o(t) {\n                r.push(t.x, t.y, t.z);\n            }\n            function l(e, n) {\n                const i = 3 * e;\n                n.x = t[i + 0], n.y = t[i + 1], n.z = t[i + 2];\n            }\n            function c(t, e, n, i) {\n                i < 0 && 1 === t.x && (s[e] = t.x - 1), 0 === n.x && 0 === n.z && (s[e] = i / 2 / Math.PI + .5);\n            }\n            function h(t) {\n                return Math.atan2(t.z, -t.x);\n            }\n            !function(t) {\n                const n = new zt, i = new zt, r = new zt;\n                for(let s = 0; s < e.length; s += 3)l(e[s + 0], n), l(e[s + 1], i), l(e[s + 2], r), a(n, i, r, t);\n            }(i), function(t) {\n                const e = new zt;\n                for(let n = 0; n < r.length; n += 3)e.x = r[n + 0], e.y = r[n + 1], e.z = r[n + 2], e.normalize().multiplyScalar(t), r[n + 0] = e.x, r[n + 1] = e.y, r[n + 2] = e.z;\n            }(n), function() {\n                const t = new zt;\n                for(let n = 0; n < r.length; n += 3){\n                    t.x = r[n + 0], t.y = r[n + 1], t.z = r[n + 2];\n                    const i = h(t) / 2 / Math.PI + .5, a = (e = t, Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z)) / Math.PI + .5);\n                    s.push(i, 1 - a);\n                }\n                var e;\n                (function() {\n                    const t = new zt, e = new zt, n = new zt, i = new zt, a = new yt, o = new yt, l = new yt;\n                    for(let u = 0, d = 0; u < r.length; u += 9, d += 6){\n                        t.set(r[u + 0], r[u + 1], r[u + 2]), e.set(r[u + 3], r[u + 4], r[u + 5]), n.set(r[u + 6], r[u + 7], r[u + 8]), a.set(s[d + 0], s[d + 1]), o.set(s[d + 2], s[d + 3]), l.set(s[d + 4], s[d + 5]), i.copy(t).add(e).add(n).divideScalar(3);\n                        const p = h(i);\n                        c(a, d + 0, t, p), c(o, d + 2, e, p), c(l, d + 4, n, p);\n                    }\n                })(), function() {\n                    for(let t = 0; t < s.length; t += 6){\n                        const e = s[t + 0], n = s[t + 2], i = s[t + 4], r = Math.max(e, n, i), a = Math.min(e, n, i);\n                        r > .9 && a < .1 && (e < .2 && (s[t + 0] += 1), n < .2 && (s[t + 2] += 1), i < .2 && (s[t + 4] += 1));\n                    }\n                }();\n            }(), this.setAttribute(\"position\", new vn(r, 3)), this.setAttribute(\"normal\", new vn(r.slice(), 3)), this.setAttribute(\"uv\", new vn(s, 2)), 0 === i ? this.computeVertexNormals() : this.normalizeNormals();\n        }\n        static fromJSON(t) {\n            return new po(t.vertices, t.indices, t.radius, t.details);\n        }\n    }\n    class mo extends po {\n        constructor(t = 1, e = 0){\n            const n = (1 + Math.sqrt(5)) / 2, i = 1 / n;\n            super([\n                -1,\n                -1,\n                -1,\n                -1,\n                -1,\n                1,\n                -1,\n                1,\n                -1,\n                -1,\n                1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                -1,\n                1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                1,\n                0,\n                -i,\n                -n,\n                0,\n                -i,\n                n,\n                0,\n                i,\n                -n,\n                0,\n                i,\n                n,\n                -i,\n                -n,\n                0,\n                -i,\n                n,\n                0,\n                i,\n                -n,\n                0,\n                i,\n                n,\n                0,\n                -n,\n                0,\n                -i,\n                n,\n                0,\n                -i,\n                -n,\n                0,\n                i,\n                n,\n                0,\n                i\n            ], [\n                3,\n                11,\n                7,\n                3,\n                7,\n                15,\n                3,\n                15,\n                13,\n                7,\n                19,\n                17,\n                7,\n                17,\n                6,\n                7,\n                6,\n                15,\n                17,\n                4,\n                8,\n                17,\n                8,\n                10,\n                17,\n                10,\n                6,\n                8,\n                0,\n                16,\n                8,\n                16,\n                2,\n                8,\n                2,\n                10,\n                0,\n                12,\n                1,\n                0,\n                1,\n                18,\n                0,\n                18,\n                16,\n                6,\n                10,\n                2,\n                6,\n                2,\n                13,\n                6,\n                13,\n                15,\n                2,\n                16,\n                18,\n                2,\n                18,\n                3,\n                2,\n                3,\n                13,\n                18,\n                1,\n                9,\n                18,\n                9,\n                11,\n                18,\n                11,\n                3,\n                4,\n                14,\n                12,\n                4,\n                12,\n                0,\n                4,\n                0,\n                8,\n                11,\n                9,\n                5,\n                11,\n                5,\n                19,\n                11,\n                19,\n                7,\n                19,\n                5,\n                14,\n                19,\n                14,\n                4,\n                19,\n                4,\n                17,\n                1,\n                12,\n                14,\n                1,\n                14,\n                5,\n                1,\n                5,\n                9\n            ], t, e), this.type = \"DodecahedronGeometry\", this.parameters = {\n                radius: t,\n                detail: e\n            };\n        }\n        static fromJSON(t) {\n            return new mo(t.radius, t.detail);\n        }\n    }\n    const fo = new zt, go = new zt, vo = new zt, yo = new Ye;\n    class xo extends En {\n        constructor(t = null, e = 1){\n            if (super(), this.type = \"EdgesGeometry\", this.parameters = {\n                geometry: t,\n                thresholdAngle: e\n            }, null !== t) {\n                const n = 4, i = Math.pow(10, n), r = Math.cos(at * e), s = t.getIndex(), a = t.getAttribute(\"position\"), o = s ? s.count : a.count, l = [\n                    0,\n                    0,\n                    0\n                ], c = [\n                    \"a\",\n                    \"b\",\n                    \"c\"\n                ], h = new Array(3), u = {}, d = [];\n                for(let t = 0; t < o; t += 3){\n                    s ? (l[0] = s.getX(t), l[1] = s.getX(t + 1), l[2] = s.getX(t + 2)) : (l[0] = t, l[1] = t + 1, l[2] = t + 2);\n                    const { a: e, b: n, c: o } = yo;\n                    if (e.fromBufferAttribute(a, l[0]), n.fromBufferAttribute(a, l[1]), o.fromBufferAttribute(a, l[2]), yo.getNormal(vo), h[0] = `${Math.round(e.x * i)},${Math.round(e.y * i)},${Math.round(e.z * i)}`, h[1] = `${Math.round(n.x * i)},${Math.round(n.y * i)},${Math.round(n.z * i)}`, h[2] = `${Math.round(o.x * i)},${Math.round(o.y * i)},${Math.round(o.z * i)}`, h[0] !== h[1] && h[1] !== h[2] && h[2] !== h[0]) for(let t = 0; t < 3; t++){\n                        const e = (t + 1) % 3, n = h[t], i = h[e], s = yo[c[t]], a = yo[c[e]], o = `${n}_${i}`, p = `${i}_${n}`;\n                        p in u && u[p] ? (vo.dot(u[p].normal) <= r && (d.push(s.x, s.y, s.z), d.push(a.x, a.y, a.z)), u[p] = null) : o in u || (u[o] = {\n                            index0: l[t],\n                            index1: l[e],\n                            normal: vo.clone()\n                        });\n                    }\n                }\n                for(const t in u)if (u[t]) {\n                    const { index0: e, index1: n } = u[t];\n                    fo.fromBufferAttribute(a, e), go.fromBufferAttribute(a, n), d.push(fo.x, fo.y, fo.z), d.push(go.x, go.y, go.z);\n                }\n                this.setAttribute(\"position\", new vn(d, 3));\n            }\n        }\n    }\n    class _o {\n        constructor(){\n            this.type = \"Curve\", this.arcLengthDivisions = 200;\n        }\n        getPoint() {\n            return console.warn(\"THREE.Curve: .getPoint() not implemented.\"), null;\n        }\n        getPointAt(t, e) {\n            const n = this.getUtoTmapping(t);\n            return this.getPoint(n, e);\n        }\n        getPoints(t = 5) {\n            const e = [];\n            for(let n = 0; n <= t; n++)e.push(this.getPoint(n / t));\n            return e;\n        }\n        getSpacedPoints(t = 5) {\n            const e = [];\n            for(let n = 0; n <= t; n++)e.push(this.getPointAt(n / t));\n            return e;\n        }\n        getLength() {\n            const t = this.getLengths();\n            return t[t.length - 1];\n        }\n        getLengths(t = this.arcLengthDivisions) {\n            if (this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate) return this.cacheArcLengths;\n            this.needsUpdate = !1;\n            const e = [];\n            let n, i = this.getPoint(0), r = 0;\n            e.push(0);\n            for(let s = 1; s <= t; s++)n = this.getPoint(s / t), r += n.distanceTo(i), e.push(r), i = n;\n            return this.cacheArcLengths = e, e;\n        }\n        updateArcLengths() {\n            this.needsUpdate = !0, this.getLengths();\n        }\n        getUtoTmapping(t, e) {\n            const n = this.getLengths();\n            let i = 0;\n            const r = n.length;\n            let s;\n            s = e || t * n[r - 1];\n            let a, o = 0, l = r - 1;\n            for(; o <= l;)if (i = Math.floor(o + (l - o) / 2), a = n[i] - s, a < 0) o = i + 1;\n            else {\n                if (!(a > 0)) {\n                    l = i;\n                    break;\n                }\n                l = i - 1;\n            }\n            if (i = l, n[i] === s) return i / (r - 1);\n            const c = n[i];\n            return (i + (s - c) / (n[i + 1] - c)) / (r - 1);\n        }\n        getTangent(t, e) {\n            const n = 1e-4;\n            let i = t - n, r = t + n;\n            i < 0 && (i = 0), r > 1 && (r = 1);\n            const s = this.getPoint(i), a = this.getPoint(r), o = e || (s.isVector2 ? new yt : new zt);\n            return o.copy(a).sub(s).normalize(), o;\n        }\n        getTangentAt(t, e) {\n            const n = this.getUtoTmapping(t);\n            return this.getTangent(n, e);\n        }\n        computeFrenetFrames(t, e) {\n            const n = new zt, i = [], r = [], s = [], a = new zt, o = new de;\n            for(let e = 0; e <= t; e++){\n                const n = e / t;\n                i[e] = this.getTangentAt(n, new zt);\n            }\n            r[0] = new zt, s[0] = new zt;\n            let l = Number.MAX_VALUE;\n            const c = Math.abs(i[0].x), h = Math.abs(i[0].y), u = Math.abs(i[0].z);\n            c <= l && (l = c, n.set(1, 0, 0)), h <= l && (l = h, n.set(0, 1, 0)), u <= l && n.set(0, 0, 1), a.crossVectors(i[0], n).normalize(), r[0].crossVectors(i[0], a), s[0].crossVectors(i[0], r[0]);\n            for(let e = 1; e <= t; e++){\n                if (r[e] = r[e - 1].clone(), s[e] = s[e - 1].clone(), a.crossVectors(i[e - 1], i[e]), a.length() > Number.EPSILON) {\n                    a.normalize();\n                    const t = Math.acos(ut(i[e - 1].dot(i[e]), -1, 1));\n                    r[e].applyMatrix4(o.makeRotationAxis(a, t));\n                }\n                s[e].crossVectors(i[e], r[e]);\n            }\n            if (!0 === e) {\n                let e = Math.acos(ut(r[0].dot(r[t]), -1, 1));\n                e /= t, i[0].dot(a.crossVectors(r[0], r[t])) > 0 && (e = -e);\n                for(let n = 1; n <= t; n++)r[n].applyMatrix4(o.makeRotationAxis(i[n], e * n)), s[n].crossVectors(i[n], r[n]);\n            }\n            return {\n                tangents: i,\n                normals: r,\n                binormals: s\n            };\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            return this.arcLengthDivisions = t.arcLengthDivisions, this;\n        }\n        toJSON() {\n            const t = {\n                metadata: {\n                    version: 4.5,\n                    type: \"Curve\",\n                    generator: \"Curve.toJSON\"\n                }\n            };\n            return t.arcLengthDivisions = this.arcLengthDivisions, t.type = this.type, t;\n        }\n        fromJSON(t) {\n            return this.arcLengthDivisions = t.arcLengthDivisions, this;\n        }\n    }\n    class Mo extends _o {\n        constructor(t = 0, e = 0, n = 1, i = 1, r = 0, s = 2 * Math.PI, a = !1, o = 0){\n            super(), this.type = \"EllipseCurve\", this.aX = t, this.aY = e, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = s, this.aClockwise = a, this.aRotation = o;\n        }\n        getPoint(t, e) {\n            const n = e || new yt, i = 2 * Math.PI;\n            let r = this.aEndAngle - this.aStartAngle;\n            const s = Math.abs(r) < Number.EPSILON;\n            for(; r < 0;)r += i;\n            for(; r > i;)r -= i;\n            r < Number.EPSILON && (r = s ? 0 : i), !0 !== this.aClockwise || s || (r === i ? r = -i : r -= i);\n            const a = this.aStartAngle + t * r;\n            let o = this.aX + this.xRadius * Math.cos(a), l = this.aY + this.yRadius * Math.sin(a);\n            if (0 !== this.aRotation) {\n                const t = Math.cos(this.aRotation), e = Math.sin(this.aRotation), n = o - this.aX, i = l - this.aY;\n                o = n * t - i * e + this.aX, l = n * e + i * t + this.aY;\n            }\n            return n.set(o, l);\n        }\n        copy(t) {\n            return super.copy(t), this.aX = t.aX, this.aY = t.aY, this.xRadius = t.xRadius, this.yRadius = t.yRadius, this.aStartAngle = t.aStartAngle, this.aEndAngle = t.aEndAngle, this.aClockwise = t.aClockwise, this.aRotation = t.aRotation, this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.aX = this.aX, t.aY = this.aY, t.xRadius = this.xRadius, t.yRadius = this.yRadius, t.aStartAngle = this.aStartAngle, t.aEndAngle = this.aEndAngle, t.aClockwise = this.aClockwise, t.aRotation = this.aRotation, t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.aX = t.aX, this.aY = t.aY, this.xRadius = t.xRadius, this.yRadius = t.yRadius, this.aStartAngle = t.aStartAngle, this.aEndAngle = t.aEndAngle, this.aClockwise = t.aClockwise, this.aRotation = t.aRotation, this;\n        }\n    }\n    Mo.prototype.isEllipseCurve = !0;\n    class bo extends Mo {\n        constructor(t, e, n, i, r, s){\n            super(t, e, n, n, i, r, s), this.type = \"ArcCurve\";\n        }\n    }\n    function wo() {\n        let t = 0, e = 0, n = 0, i = 0;\n        function r(r, s, a, o) {\n            t = r, e = a, n = -3 * r + 3 * s - 2 * a - o, i = 2 * r - 2 * s + a + o;\n        }\n        return {\n            initCatmullRom: function(t, e, n, i, s) {\n                r(e, n, s * (n - t), s * (i - e));\n            },\n            initNonuniformCatmullRom: function(t, e, n, i, s, a, o) {\n                let l = (e - t) / s - (n - t) / (s + a) + (n - e) / a, c = (n - e) / a - (i - e) / (a + o) + (i - n) / o;\n                l *= a, c *= a, r(e, n, l, c);\n            },\n            calc: function(r) {\n                const s = r * r;\n                return t + e * r + n * s + i * (s * r);\n            }\n        };\n    }\n    bo.prototype.isArcCurve = !0;\n    const So = new zt, To = new wo, Eo = new wo, Ao = new wo;\n    class Lo extends _o {\n        constructor(t = [], e = !1, n = \"centripetal\", i = .5){\n            super(), this.type = \"CatmullRomCurve3\", this.points = t, this.closed = e, this.curveType = n, this.tension = i;\n        }\n        getPoint(t, e = new zt) {\n            const n = e, i = this.points, r = i.length, s = (r - (this.closed ? 0 : 1)) * t;\n            let a, o, l = Math.floor(s), c = s - l;\n            this.closed ? l += l > 0 ? 0 : (Math.floor(Math.abs(l) / r) + 1) * r : 0 === c && l === r - 1 && (l = r - 2, c = 1), this.closed || l > 0 ? a = i[(l - 1) % r] : (So.subVectors(i[0], i[1]).add(i[0]), a = So);\n            const h = i[l % r], u = i[(l + 1) % r];\n            if (this.closed || l + 2 < r ? o = i[(l + 2) % r] : (So.subVectors(i[r - 1], i[r - 2]).add(i[r - 1]), o = So), \"centripetal\" === this.curveType || \"chordal\" === this.curveType) {\n                const t = \"chordal\" === this.curveType ? .5 : .25;\n                let e = Math.pow(a.distanceToSquared(h), t), n = Math.pow(h.distanceToSquared(u), t), i = Math.pow(u.distanceToSquared(o), t);\n                n < 1e-4 && (n = 1), e < 1e-4 && (e = n), i < 1e-4 && (i = n), To.initNonuniformCatmullRom(a.x, h.x, u.x, o.x, e, n, i), Eo.initNonuniformCatmullRom(a.y, h.y, u.y, o.y, e, n, i), Ao.initNonuniformCatmullRom(a.z, h.z, u.z, o.z, e, n, i);\n            } else \"catmullrom\" === this.curveType && (To.initCatmullRom(a.x, h.x, u.x, o.x, this.tension), Eo.initCatmullRom(a.y, h.y, u.y, o.y, this.tension), Ao.initCatmullRom(a.z, h.z, u.z, o.z, this.tension));\n            return n.set(To.calc(c), Eo.calc(c), Ao.calc(c)), n;\n        }\n        copy(t) {\n            super.copy(t), this.points = [];\n            for(let e = 0, n = t.points.length; e < n; e++){\n                const n = t.points[e];\n                this.points.push(n.clone());\n            }\n            return this.closed = t.closed, this.curveType = t.curveType, this.tension = t.tension, this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            t.points = [];\n            for(let e = 0, n = this.points.length; e < n; e++){\n                const n = this.points[e];\n                t.points.push(n.toArray());\n            }\n            return t.closed = this.closed, t.curveType = this.curveType, t.tension = this.tension, t;\n        }\n        fromJSON(t) {\n            super.fromJSON(t), this.points = [];\n            for(let e = 0, n = t.points.length; e < n; e++){\n                const n = t.points[e];\n                this.points.push((new zt).fromArray(n));\n            }\n            return this.closed = t.closed, this.curveType = t.curveType, this.tension = t.tension, this;\n        }\n    }\n    function Ro(t, e, n, i, r) {\n        const s = .5 * (i - e), a = .5 * (r - n), o = t * t;\n        return (2 * n - 2 * i + s + a) * (t * o) + (-3 * n + 3 * i - 2 * s - a) * o + s * t + n;\n    }\n    function Co(t, e, n, i) {\n        return function(t, e) {\n            const n = 1 - t;\n            return n * n * e;\n        }(t, e) + function(t, e) {\n            return 2 * (1 - t) * t * e;\n        }(t, n) + function(t, e) {\n            return t * t * e;\n        }(t, i);\n    }\n    function Po(t, e, n, i, r) {\n        return function(t, e) {\n            const n = 1 - t;\n            return n * n * n * e;\n        }(t, e) + function(t, e) {\n            const n = 1 - t;\n            return 3 * n * n * t * e;\n        }(t, n) + function(t, e) {\n            return 3 * (1 - t) * t * t * e;\n        }(t, i) + function(t, e) {\n            return t * t * t * e;\n        }(t, r);\n    }\n    Lo.prototype.isCatmullRomCurve3 = !0;\n    class Io extends _o {\n        constructor(t = new yt, e = new yt, n = new yt, i = new yt){\n            super(), this.type = \"CubicBezierCurve\", this.v0 = t, this.v1 = e, this.v2 = n, this.v3 = i;\n        }\n        getPoint(t, e = new yt) {\n            const n = e, i = this.v0, r = this.v1, s = this.v2, a = this.v3;\n            return n.set(Po(t, i.x, r.x, s.x, a.x), Po(t, i.y, r.y, s.y, a.y)), n;\n        }\n        copy(t) {\n            return super.copy(t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this.v3.copy(t.v3), this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t.v3 = this.v3.toArray(), t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this.v3.fromArray(t.v3), this;\n        }\n    }\n    Io.prototype.isCubicBezierCurve = !0;\n    class Do extends _o {\n        constructor(t = new zt, e = new zt, n = new zt, i = new zt){\n            super(), this.type = \"CubicBezierCurve3\", this.v0 = t, this.v1 = e, this.v2 = n, this.v3 = i;\n        }\n        getPoint(t, e = new zt) {\n            const n = e, i = this.v0, r = this.v1, s = this.v2, a = this.v3;\n            return n.set(Po(t, i.x, r.x, s.x, a.x), Po(t, i.y, r.y, s.y, a.y), Po(t, i.z, r.z, s.z, a.z)), n;\n        }\n        copy(t) {\n            return super.copy(t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this.v3.copy(t.v3), this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t.v3 = this.v3.toArray(), t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this.v3.fromArray(t.v3), this;\n        }\n    }\n    Do.prototype.isCubicBezierCurve3 = !0;\n    class No extends _o {\n        constructor(t = new yt, e = new yt){\n            super(), this.type = \"LineCurve\", this.v1 = t, this.v2 = e;\n        }\n        getPoint(t, e = new yt) {\n            const n = e;\n            return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(t).add(this.v1)), n;\n        }\n        getPointAt(t, e) {\n            return this.getPoint(t, e);\n        }\n        getTangent(t, e) {\n            const n = e || new yt;\n            return n.copy(this.v2).sub(this.v1).normalize(), n;\n        }\n        copy(t) {\n            return super.copy(t), this.v1.copy(t.v1), this.v2.copy(t.v2), this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;\n        }\n    }\n    No.prototype.isLineCurve = !0;\n    class zo extends _o {\n        constructor(t = new zt, e = new zt){\n            super(), this.type = \"LineCurve3\", this.isLineCurve3 = !0, this.v1 = t, this.v2 = e;\n        }\n        getPoint(t, e = new zt) {\n            const n = e;\n            return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(t).add(this.v1)), n;\n        }\n        getPointAt(t, e) {\n            return this.getPoint(t, e);\n        }\n        copy(t) {\n            return super.copy(t), this.v1.copy(t.v1), this.v2.copy(t.v2), this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;\n        }\n    }\n    class Bo extends _o {\n        constructor(t = new yt, e = new yt, n = new yt){\n            super(), this.type = \"QuadraticBezierCurve\", this.v0 = t, this.v1 = e, this.v2 = n;\n        }\n        getPoint(t, e = new yt) {\n            const n = e, i = this.v0, r = this.v1, s = this.v2;\n            return n.set(Co(t, i.x, r.x, s.x), Co(t, i.y, r.y, s.y)), n;\n        }\n        copy(t) {\n            return super.copy(t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;\n        }\n    }\n    Bo.prototype.isQuadraticBezierCurve = !0;\n    class Fo extends _o {\n        constructor(t = new zt, e = new zt, n = new zt){\n            super(), this.type = \"QuadraticBezierCurve3\", this.v0 = t, this.v1 = e, this.v2 = n;\n        }\n        getPoint(t, e = new zt) {\n            const n = e, i = this.v0, r = this.v1, s = this.v2;\n            return n.set(Co(t, i.x, r.x, s.x), Co(t, i.y, r.y, s.y), Co(t, i.z, r.z, s.z)), n;\n        }\n        copy(t) {\n            return super.copy(t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;\n        }\n    }\n    Fo.prototype.isQuadraticBezierCurve3 = !0;\n    class Oo extends _o {\n        constructor(t = []){\n            super(), this.type = \"SplineCurve\", this.points = t;\n        }\n        getPoint(t, e = new yt) {\n            const n = e, i = this.points, r = (i.length - 1) * t, s = Math.floor(r), a = r - s, o = i[0 === s ? s : s - 1], l = i[s], c = i[s > i.length - 2 ? i.length - 1 : s + 1], h = i[s > i.length - 3 ? i.length - 1 : s + 2];\n            return n.set(Ro(a, o.x, l.x, c.x, h.x), Ro(a, o.y, l.y, c.y, h.y)), n;\n        }\n        copy(t) {\n            super.copy(t), this.points = [];\n            for(let e = 0, n = t.points.length; e < n; e++){\n                const n = t.points[e];\n                this.points.push(n.clone());\n            }\n            return this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            t.points = [];\n            for(let e = 0, n = this.points.length; e < n; e++){\n                const n = this.points[e];\n                t.points.push(n.toArray());\n            }\n            return t;\n        }\n        fromJSON(t) {\n            super.fromJSON(t), this.points = [];\n            for(let e = 0, n = t.points.length; e < n; e++){\n                const n = t.points[e];\n                this.points.push((new yt).fromArray(n));\n            }\n            return this;\n        }\n    }\n    Oo.prototype.isSplineCurve = !0;\n    var Uo = Object.freeze({\n        __proto__: null,\n        ArcCurve: bo,\n        CatmullRomCurve3: Lo,\n        CubicBezierCurve: Io,\n        CubicBezierCurve3: Do,\n        EllipseCurve: Mo,\n        LineCurve: No,\n        LineCurve3: zo,\n        QuadraticBezierCurve: Bo,\n        QuadraticBezierCurve3: Fo,\n        SplineCurve: Oo\n    });\n    class Ho extends _o {\n        constructor(){\n            super(), this.type = \"CurvePath\", this.curves = [], this.autoClose = !1;\n        }\n        add(t) {\n            this.curves.push(t);\n        }\n        closePath() {\n            const t = this.curves[0].getPoint(0), e = this.curves[this.curves.length - 1].getPoint(1);\n            t.equals(e) || this.curves.push(new No(e, t));\n        }\n        getPoint(t, e) {\n            const n = t * this.getLength(), i = this.getCurveLengths();\n            let r = 0;\n            for(; r < i.length;){\n                if (i[r] >= n) {\n                    const t = i[r] - n, s = this.curves[r], a = s.getLength(), o = 0 === a ? 0 : 1 - t / a;\n                    return s.getPointAt(o, e);\n                }\n                r++;\n            }\n            return null;\n        }\n        getLength() {\n            const t = this.getCurveLengths();\n            return t[t.length - 1];\n        }\n        updateArcLengths() {\n            this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();\n        }\n        getCurveLengths() {\n            if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;\n            const t = [];\n            let e = 0;\n            for(let n = 0, i = this.curves.length; n < i; n++)e += this.curves[n].getLength(), t.push(e);\n            return this.cacheLengths = t, t;\n        }\n        getSpacedPoints(t = 40) {\n            const e = [];\n            for(let n = 0; n <= t; n++)e.push(this.getPoint(n / t));\n            return this.autoClose && e.push(e[0]), e;\n        }\n        getPoints(t = 12) {\n            const e = [];\n            let n;\n            for(let i = 0, r = this.curves; i < r.length; i++){\n                const s = r[i], a = s && s.isEllipseCurve ? 2 * t : s && (s.isLineCurve || s.isLineCurve3) ? 1 : s && s.isSplineCurve ? t * s.points.length : t, o = s.getPoints(a);\n                for(let t = 0; t < o.length; t++){\n                    const i = o[t];\n                    n && n.equals(i) || (e.push(i), n = i);\n                }\n            }\n            return this.autoClose && e.length > 1 && !e[e.length - 1].equals(e[0]) && e.push(e[0]), e;\n        }\n        copy(t) {\n            super.copy(t), this.curves = [];\n            for(let e = 0, n = t.curves.length; e < n; e++){\n                const n = t.curves[e];\n                this.curves.push(n.clone());\n            }\n            return this.autoClose = t.autoClose, this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            t.autoClose = this.autoClose, t.curves = [];\n            for(let e = 0, n = this.curves.length; e < n; e++){\n                const n = this.curves[e];\n                t.curves.push(n.toJSON());\n            }\n            return t;\n        }\n        fromJSON(t) {\n            super.fromJSON(t), this.autoClose = t.autoClose, this.curves = [];\n            for(let e = 0, n = t.curves.length; e < n; e++){\n                const n = t.curves[e];\n                this.curves.push((new Uo[n.type]).fromJSON(n));\n            }\n            return this;\n        }\n    }\n    class Go extends Ho {\n        constructor(t){\n            super(), this.type = \"Path\", this.currentPoint = new yt, t && this.setFromPoints(t);\n        }\n        setFromPoints(t) {\n            this.moveTo(t[0].x, t[0].y);\n            for(let e = 1, n = t.length; e < n; e++)this.lineTo(t[e].x, t[e].y);\n            return this;\n        }\n        moveTo(t, e) {\n            return this.currentPoint.set(t, e), this;\n        }\n        lineTo(t, e) {\n            const n = new No(this.currentPoint.clone(), new yt(t, e));\n            return this.curves.push(n), this.currentPoint.set(t, e), this;\n        }\n        quadraticCurveTo(t, e, n, i) {\n            const r = new Bo(this.currentPoint.clone(), new yt(t, e), new yt(n, i));\n            return this.curves.push(r), this.currentPoint.set(n, i), this;\n        }\n        bezierCurveTo(t, e, n, i, r, s) {\n            const a = new Io(this.currentPoint.clone(), new yt(t, e), new yt(n, i), new yt(r, s));\n            return this.curves.push(a), this.currentPoint.set(r, s), this;\n        }\n        splineThru(t) {\n            const e = [\n                this.currentPoint.clone()\n            ].concat(t), n = new Oo(e);\n            return this.curves.push(n), this.currentPoint.copy(t[t.length - 1]), this;\n        }\n        arc(t, e, n, i, r, s) {\n            const a = this.currentPoint.x, o = this.currentPoint.y;\n            return this.absarc(t + a, e + o, n, i, r, s), this;\n        }\n        absarc(t, e, n, i, r, s) {\n            return this.absellipse(t, e, n, n, i, r, s), this;\n        }\n        ellipse(t, e, n, i, r, s, a, o) {\n            const l = this.currentPoint.x, c = this.currentPoint.y;\n            return this.absellipse(t + l, e + c, n, i, r, s, a, o), this;\n        }\n        absellipse(t, e, n, i, r, s, a, o) {\n            const l = new Mo(t, e, n, i, r, s, a, o);\n            if (this.curves.length > 0) {\n                const t = l.getPoint(0);\n                t.equals(this.currentPoint) || this.lineTo(t.x, t.y);\n            }\n            this.curves.push(l);\n            const c = l.getPoint(1);\n            return this.currentPoint.copy(c), this;\n        }\n        copy(t) {\n            return super.copy(t), this.currentPoint.copy(t.currentPoint), this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.currentPoint = this.currentPoint.toArray(), t;\n        }\n        fromJSON(t) {\n            return super.fromJSON(t), this.currentPoint.fromArray(t.currentPoint), this;\n        }\n    }\n    class ko extends Go {\n        constructor(t){\n            super(t), this.uuid = ht(), this.type = \"Shape\", this.holes = [];\n        }\n        getPointsHoles(t) {\n            const e = [];\n            for(let n = 0, i = this.holes.length; n < i; n++)e[n] = this.holes[n].getPoints(t);\n            return e;\n        }\n        extractPoints(t) {\n            return {\n                shape: this.getPoints(t),\n                holes: this.getPointsHoles(t)\n            };\n        }\n        copy(t) {\n            super.copy(t), this.holes = [];\n            for(let e = 0, n = t.holes.length; e < n; e++){\n                const n = t.holes[e];\n                this.holes.push(n.clone());\n            }\n            return this;\n        }\n        toJSON() {\n            const t = super.toJSON();\n            t.uuid = this.uuid, t.holes = [];\n            for(let e = 0, n = this.holes.length; e < n; e++){\n                const n = this.holes[e];\n                t.holes.push(n.toJSON());\n            }\n            return t;\n        }\n        fromJSON(t) {\n            super.fromJSON(t), this.uuid = t.uuid, this.holes = [];\n            for(let e = 0, n = t.holes.length; e < n; e++){\n                const n = t.holes[e];\n                this.holes.push((new Go).fromJSON(n));\n            }\n            return this;\n        }\n    }\n    const Vo = function(t, e, n = 2) {\n        const i = e && e.length, r = i ? e[0] * n : t.length;\n        let s = Wo(t, 0, r, n, !0);\n        const a = [];\n        if (!s || s.next === s.prev) return a;\n        let o, l, c, h, u, d, p;\n        if (i && (s = function(t, e, n, i) {\n            const r = [];\n            let s, a, o, l, c;\n            for(s = 0, a = e.length; s < a; s++)o = e[s] * i, l = s < a - 1 ? e[s + 1] * i : t.length, c = Wo(t, o, l, i, !1), c === c.next && (c.steiner = !0), r.push(el(c));\n            for(r.sort(Qo), s = 0; s < r.length; s++)Ko(r[s], n), n = jo(n, n.next);\n            return n;\n        }(t, e, s, n)), t.length > 80 * n) {\n            o = c = t[0], l = h = t[1];\n            for(let e = n; e < r; e += n)u = t[e], d = t[e + 1], u < o && (o = u), d < l && (l = d), u > c && (c = u), d > h && (h = d);\n            p = Math.max(c - o, h - l), p = 0 !== p ? 1 / p : 0;\n        }\n        return qo(s, a, n, o, l, p), a;\n    };\n    function Wo(t, e, n, i, r) {\n        let s, a;\n        if (r === function(t, e, n, i) {\n            let r = 0;\n            for(let s = e, a = n - i; s < n; s += i)r += (t[a] - t[s]) * (t[s + 1] + t[a + 1]), a = s;\n            return r;\n        }(t, e, n, i) > 0) for(s = e; s < n; s += i)a = ul(s, t[s], t[s + 1], a);\n        else for(s = n - i; s >= e; s -= i)a = ul(s, t[s], t[s + 1], a);\n        return a && sl(a, a.next) && (dl(a), a = a.next), a;\n    }\n    function jo(t, e) {\n        if (!t) return t;\n        e || (e = t);\n        let n, i = t;\n        do if (n = !1, i.steiner || !sl(i, i.next) && 0 !== rl(i.prev, i, i.next)) i = i.next;\n        else {\n            if (dl(i), i = e = i.prev, i === i.next) break;\n            n = !0;\n        }\n        while (n || i !== e);\n        return e;\n    }\n    function qo(t, e, n, i, r, s, a) {\n        if (!t) return;\n        !a && s && function(t, e, n, i) {\n            let r = t;\n            do null === r.z && (r.z = tl(r.x, r.y, e, n, i)), r.prevZ = r.prev, r.nextZ = r.next, r = r.next;\n            while (r !== t);\n            r.prevZ.nextZ = null, r.prevZ = null, function(t) {\n                let e, n, i, r, s, a, o, l, c = 1;\n                do {\n                    for(n = t, t = null, s = null, a = 0; n;){\n                        for(a++, i = n, o = 0, e = 0; e < c && (o++, i = i.nextZ, i); e++);\n                        for(l = c; o > 0 || l > 0 && i;)0 !== o && (0 === l || !i || n.z <= i.z) ? (r = n, n = n.nextZ, o--) : (r = i, i = i.nextZ, l--), s ? s.nextZ = r : t = r, r.prevZ = s, s = r;\n                        n = i;\n                    }\n                    s.nextZ = null, c *= 2;\n                }while (a > 1);\n            }(r);\n        }(t, i, r, s);\n        let o, l, c = t;\n        for(; t.prev !== t.next;)if (o = t.prev, l = t.next, s ? Yo(t, i, r, s) : Xo(t)) e.push(o.i / n), e.push(t.i / n), e.push(l.i / n), dl(t), t = l.next, c = l.next;\n        else if ((t = l) === c) {\n            a ? 1 === a ? qo(t = Jo(jo(t), e, n), e, n, i, r, s, 2) : 2 === a && Zo(t, e, n, i, r, s) : qo(jo(t), e, n, i, r, s, 1);\n            break;\n        }\n    }\n    function Xo(t) {\n        const e = t.prev, n = t, i = t.next;\n        if (rl(e, n, i) >= 0) return !1;\n        let r = t.next.next;\n        for(; r !== t.prev;){\n            if (nl(e.x, e.y, n.x, n.y, i.x, i.y, r.x, r.y) && rl(r.prev, r, r.next) >= 0) return !1;\n            r = r.next;\n        }\n        return !0;\n    }\n    function Yo(t, e, n, i) {\n        const r = t.prev, s = t, a = t.next;\n        if (rl(r, s, a) >= 0) return !1;\n        const o = r.x < s.x ? r.x < a.x ? r.x : a.x : s.x < a.x ? s.x : a.x, l = r.y < s.y ? r.y < a.y ? r.y : a.y : s.y < a.y ? s.y : a.y, c = r.x > s.x ? r.x > a.x ? r.x : a.x : s.x > a.x ? s.x : a.x, h = r.y > s.y ? r.y > a.y ? r.y : a.y : s.y > a.y ? s.y : a.y, u = tl(o, l, e, n, i), d = tl(c, h, e, n, i);\n        let p = t.prevZ, m = t.nextZ;\n        for(; p && p.z >= u && m && m.z <= d;){\n            if (p !== t.prev && p !== t.next && nl(r.x, r.y, s.x, s.y, a.x, a.y, p.x, p.y) && rl(p.prev, p, p.next) >= 0) return !1;\n            if (p = p.prevZ, m !== t.prev && m !== t.next && nl(r.x, r.y, s.x, s.y, a.x, a.y, m.x, m.y) && rl(m.prev, m, m.next) >= 0) return !1;\n            m = m.nextZ;\n        }\n        for(; p && p.z >= u;){\n            if (p !== t.prev && p !== t.next && nl(r.x, r.y, s.x, s.y, a.x, a.y, p.x, p.y) && rl(p.prev, p, p.next) >= 0) return !1;\n            p = p.prevZ;\n        }\n        for(; m && m.z <= d;){\n            if (m !== t.prev && m !== t.next && nl(r.x, r.y, s.x, s.y, a.x, a.y, m.x, m.y) && rl(m.prev, m, m.next) >= 0) return !1;\n            m = m.nextZ;\n        }\n        return !0;\n    }\n    function Jo(t, e, n) {\n        let i = t;\n        do {\n            const r = i.prev, s = i.next.next;\n            !sl(r, s) && al(r, i, i.next, s) && cl(r, s) && cl(s, r) && (e.push(r.i / n), e.push(i.i / n), e.push(s.i / n), dl(i), dl(i.next), i = t = s), i = i.next;\n        }while (i !== t);\n        return jo(i);\n    }\n    function Zo(t, e, n, i, r, s) {\n        let a = t;\n        do {\n            let t = a.next.next;\n            for(; t !== a.prev;){\n                if (a.i !== t.i && il(a, t)) {\n                    let o = hl(a, t);\n                    return a = jo(a, a.next), o = jo(o, o.next), qo(a, e, n, i, r, s), void qo(o, e, n, i, r, s);\n                }\n                t = t.next;\n            }\n            a = a.next;\n        }while (a !== t);\n    }\n    function Qo(t, e) {\n        return t.x - e.x;\n    }\n    function Ko(t, e) {\n        if (e = function(t, e) {\n            let n = e;\n            const i = t.x, r = t.y;\n            let s, a = -1 / 0;\n            do {\n                if (r <= n.y && r >= n.next.y && n.next.y !== n.y) {\n                    const t = n.x + (r - n.y) * (n.next.x - n.x) / (n.next.y - n.y);\n                    if (t <= i && t > a) {\n                        if (a = t, t === i) {\n                            if (r === n.y) return n;\n                            if (r === n.next.y) return n.next;\n                        }\n                        s = n.x < n.next.x ? n : n.next;\n                    }\n                }\n                n = n.next;\n            }while (n !== e);\n            if (!s) return null;\n            if (i === a) return s;\n            const o = s, l = s.x, c = s.y;\n            let h, u = 1 / 0;\n            n = s;\n            do i >= n.x && n.x >= l && i !== n.x && nl(r < c ? i : a, r, l, c, r < c ? a : i, r, n.x, n.y) && (h = Math.abs(r - n.y) / (i - n.x), cl(n, t) && (h < u || h === u && (n.x > s.x || n.x === s.x && $o(s, n))) && (s = n, u = h)), n = n.next;\n            while (n !== o);\n            return s;\n        }(t, e), e) {\n            const n = hl(e, t);\n            jo(e, e.next), jo(n, n.next);\n        }\n    }\n    function $o(t, e) {\n        return rl(t.prev, t, e.prev) < 0 && rl(e.next, t, t.next) < 0;\n    }\n    function tl(t, e, n, i, r) {\n        return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - n) * r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - i) * r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1;\n    }\n    function el(t) {\n        let e = t, n = t;\n        do (e.x < n.x || e.x === n.x && e.y < n.y) && (n = e), e = e.next;\n        while (e !== t);\n        return n;\n    }\n    function nl(t, e, n, i, r, s, a, o) {\n        return (r - a) * (e - o) - (t - a) * (s - o) >= 0 && (t - a) * (i - o) - (n - a) * (e - o) >= 0 && (n - a) * (s - o) - (r - a) * (i - o) >= 0;\n    }\n    function il(t, e) {\n        return t.next.i !== e.i && t.prev.i !== e.i && !function(t, e) {\n            let n = t;\n            do {\n                if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && al(n, n.next, t, e)) return !0;\n                n = n.next;\n            }while (n !== t);\n            return !1;\n        }(t, e) && (cl(t, e) && cl(e, t) && function(t, e) {\n            let n = t, i = !1;\n            const r = (t.x + e.x) / 2, s = (t.y + e.y) / 2;\n            do n.y > s != n.next.y > s && n.next.y !== n.y && r < (n.next.x - n.x) * (s - n.y) / (n.next.y - n.y) + n.x && (i = !i), n = n.next;\n            while (n !== t);\n            return i;\n        }(t, e) && (rl(t.prev, t, e.prev) || rl(t, e.prev, e)) || sl(t, e) && rl(t.prev, t, t.next) > 0 && rl(e.prev, e, e.next) > 0);\n    }\n    function rl(t, e, n) {\n        return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y);\n    }\n    function sl(t, e) {\n        return t.x === e.x && t.y === e.y;\n    }\n    function al(t, e, n, i) {\n        const r = ll(rl(t, e, n)), s = ll(rl(t, e, i)), a = ll(rl(n, i, t)), o = ll(rl(n, i, e));\n        return r !== s && a !== o || !(0 !== r || !ol(t, n, e)) || !(0 !== s || !ol(t, i, e)) || !(0 !== a || !ol(n, t, i)) || !(0 !== o || !ol(n, e, i));\n    }\n    function ol(t, e, n) {\n        return e.x <= Math.max(t.x, n.x) && e.x >= Math.min(t.x, n.x) && e.y <= Math.max(t.y, n.y) && e.y >= Math.min(t.y, n.y);\n    }\n    function ll(t) {\n        return t > 0 ? 1 : t < 0 ? -1 : 0;\n    }\n    function cl(t, e) {\n        return rl(t.prev, t, t.next) < 0 ? rl(t, e, t.next) >= 0 && rl(t, t.prev, e) >= 0 : rl(t, e, t.prev) < 0 || rl(t, t.next, e) < 0;\n    }\n    function hl(t, e) {\n        const n = new pl(t.i, t.x, t.y), i = new pl(e.i, e.x, e.y), r = t.next, s = e.prev;\n        return t.next = e, e.prev = t, n.next = r, r.prev = n, i.next = n, n.prev = i, s.next = i, i.prev = s, i;\n    }\n    function ul(t, e, n, i) {\n        const r = new pl(t, e, n);\n        return i ? (r.next = i.next, r.prev = i, i.next.prev = r, i.next = r) : (r.prev = r, r.next = r), r;\n    }\n    function dl(t) {\n        t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);\n    }\n    function pl(t, e, n) {\n        this.i = t, this.x = e, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;\n    }\n    class ml {\n        static area(t) {\n            const e = t.length;\n            let n = 0;\n            for(let i = e - 1, r = 0; r < e; i = r++)n += t[i].x * t[r].y - t[r].x * t[i].y;\n            return .5 * n;\n        }\n        static isClockWise(t) {\n            return ml.area(t) < 0;\n        }\n        static triangulateShape(t, e) {\n            const n = [], i = [], r = [];\n            fl(t), gl(n, t);\n            let s = t.length;\n            e.forEach(fl);\n            for(let t = 0; t < e.length; t++)i.push(s), s += e[t].length, gl(n, e[t]);\n            const a = Vo(n, i);\n            for(let t = 0; t < a.length; t += 3)r.push(a.slice(t, t + 3));\n            return r;\n        }\n    }\n    function fl(t) {\n        const e = t.length;\n        e > 2 && t[e - 1].equals(t[0]) && t.pop();\n    }\n    function gl(t, e) {\n        for(let n = 0; n < e.length; n++)t.push(e[n].x), t.push(e[n].y);\n    }\n    class vl extends En {\n        constructor(t = new ko([\n            new yt(.5, .5),\n            new yt(-0.5, .5),\n            new yt(-0.5, -0.5),\n            new yt(.5, -0.5)\n        ]), e = {}){\n            super(), this.type = \"ExtrudeGeometry\", this.parameters = {\n                shapes: t,\n                options: e\n            }, t = Array.isArray(t) ? t : [\n                t\n            ];\n            const n = this, i = [], r = [];\n            for(let e = 0, n = t.length; e < n; e++)s(t[e]);\n            function s(t) {\n                const s = [], a = void 0 !== e.curveSegments ? e.curveSegments : 12, o = void 0 !== e.steps ? e.steps : 1;\n                let l = void 0 !== e.depth ? e.depth : 1, c = void 0 === e.bevelEnabled || e.bevelEnabled, h = void 0 !== e.bevelThickness ? e.bevelThickness : .2, u = void 0 !== e.bevelSize ? e.bevelSize : h - .1, d = void 0 !== e.bevelOffset ? e.bevelOffset : 0, p = void 0 !== e.bevelSegments ? e.bevelSegments : 3;\n                const m = e.extrudePath, f = void 0 !== e.UVGenerator ? e.UVGenerator : yl;\n                void 0 !== e.amount && (console.warn(\"THREE.ExtrudeBufferGeometry: amount has been renamed to depth.\"), l = e.amount);\n                let g, v, y, x, _, M = !1;\n                m && (g = m.getSpacedPoints(o), M = !0, c = !1, v = m.computeFrenetFrames(o, !1), y = new zt, x = new zt, _ = new zt), c || (p = 0, h = 0, u = 0, d = 0);\n                const b = t.extractPoints(a);\n                let w = b.shape;\n                const S = b.holes;\n                if (!ml.isClockWise(w)) {\n                    w = w.reverse();\n                    for(let t = 0, e = S.length; t < e; t++){\n                        const e = S[t];\n                        ml.isClockWise(e) && (S[t] = e.reverse());\n                    }\n                }\n                const T = ml.triangulateShape(w, S), E = w;\n                for(let t = 0, e = S.length; t < e; t++){\n                    const e = S[t];\n                    w = w.concat(e);\n                }\n                function A(t, e, n) {\n                    return e || console.error(\"THREE.ExtrudeGeometry: vec does not exist\"), e.clone().multiplyScalar(n).add(t);\n                }\n                const L = w.length, R = T.length;\n                function C(t, e, n) {\n                    let i, r, s;\n                    const a = t.x - e.x, o = t.y - e.y, l = n.x - t.x, c = n.y - t.y, h = a * a + o * o, u = a * c - o * l;\n                    if (Math.abs(u) > Number.EPSILON) {\n                        const u = Math.sqrt(h), d = Math.sqrt(l * l + c * c), p = e.x - o / u, m = e.y + a / u, f = ((n.x - c / d - p) * c - (n.y + l / d - m) * l) / (a * c - o * l);\n                        i = p + a * f - t.x, r = m + o * f - t.y;\n                        const g = i * i + r * r;\n                        if (g <= 2) return new yt(i, r);\n                        s = Math.sqrt(g / 2);\n                    } else {\n                        let t = !1;\n                        a > Number.EPSILON ? l > Number.EPSILON && (t = !0) : a < -Number.EPSILON ? l < -Number.EPSILON && (t = !0) : Math.sign(o) === Math.sign(c) && (t = !0), t ? (i = -o, r = a, s = Math.sqrt(h)) : (i = a, r = o, s = Math.sqrt(h / 2));\n                    }\n                    return new yt(i / s, r / s);\n                }\n                const P = [];\n                for(let t = 0, e = E.length, n = e - 1, i = t + 1; t < e; t++, n++, i++)n === e && (n = 0), i === e && (i = 0), P[t] = C(E[t], E[n], E[i]);\n                const I = [];\n                let D, N = P.concat();\n                for(let t = 0, e = S.length; t < e; t++){\n                    const e = S[t];\n                    D = [];\n                    for(let t = 0, n = e.length, i = n - 1, r = t + 1; t < n; t++, i++, r++)i === n && (i = 0), r === n && (r = 0), D[t] = C(e[t], e[i], e[r]);\n                    I.push(D), N = N.concat(D);\n                }\n                for(let t = 0; t < p; t++){\n                    const e = t / p, n = h * Math.cos(e * Math.PI / 2), i = u * Math.sin(e * Math.PI / 2) + d;\n                    for(let t = 0, e = E.length; t < e; t++){\n                        const e = A(E[t], P[t], i);\n                        F(e.x, e.y, -n);\n                    }\n                    for(let t = 0, e = S.length; t < e; t++){\n                        const e = S[t];\n                        D = I[t];\n                        for(let t = 0, r = e.length; t < r; t++){\n                            const r = A(e[t], D[t], i);\n                            F(r.x, r.y, -n);\n                        }\n                    }\n                }\n                const z = u + d;\n                for(let t = 0; t < L; t++){\n                    const e = c ? A(w[t], N[t], z) : w[t];\n                    M ? (x.copy(v.normals[0]).multiplyScalar(e.x), y.copy(v.binormals[0]).multiplyScalar(e.y), _.copy(g[0]).add(x).add(y), F(_.x, _.y, _.z)) : F(e.x, e.y, 0);\n                }\n                for(let t = 1; t <= o; t++)for(let e = 0; e < L; e++){\n                    const n = c ? A(w[e], N[e], z) : w[e];\n                    M ? (x.copy(v.normals[t]).multiplyScalar(n.x), y.copy(v.binormals[t]).multiplyScalar(n.y), _.copy(g[t]).add(x).add(y), F(_.x, _.y, _.z)) : F(n.x, n.y, l / o * t);\n                }\n                for(let t = p - 1; t >= 0; t--){\n                    const e = t / p, n = h * Math.cos(e * Math.PI / 2), i = u * Math.sin(e * Math.PI / 2) + d;\n                    for(let t = 0, e = E.length; t < e; t++){\n                        const e = A(E[t], P[t], i);\n                        F(e.x, e.y, l + n);\n                    }\n                    for(let t = 0, e = S.length; t < e; t++){\n                        const e = S[t];\n                        D = I[t];\n                        for(let t = 0, r = e.length; t < r; t++){\n                            const r = A(e[t], D[t], i);\n                            M ? F(r.x, r.y + g[o - 1].y, g[o - 1].x + n) : F(r.x, r.y, l + n);\n                        }\n                    }\n                }\n                function B(t, e) {\n                    let n = t.length;\n                    for(; --n >= 0;){\n                        const i = n;\n                        let r = n - 1;\n                        r < 0 && (r = t.length - 1);\n                        for(let t = 0, n = o + 2 * p; t < n; t++){\n                            const n = L * t, s = L * (t + 1);\n                            U(e + i + n, e + r + n, e + r + s, e + i + s);\n                        }\n                    }\n                }\n                function F(t, e, n) {\n                    s.push(t), s.push(e), s.push(n);\n                }\n                function O(t, e, r) {\n                    H(t), H(e), H(r);\n                    const s = i.length / 3, a = f.generateTopUV(n, i, s - 3, s - 2, s - 1);\n                    G(a[0]), G(a[1]), G(a[2]);\n                }\n                function U(t, e, r, s) {\n                    H(t), H(e), H(s), H(e), H(r), H(s);\n                    const a = i.length / 3, o = f.generateSideWallUV(n, i, a - 6, a - 3, a - 2, a - 1);\n                    G(o[0]), G(o[1]), G(o[3]), G(o[1]), G(o[2]), G(o[3]);\n                }\n                function H(t) {\n                    i.push(s[3 * t + 0]), i.push(s[3 * t + 1]), i.push(s[3 * t + 2]);\n                }\n                function G(t) {\n                    r.push(t.x), r.push(t.y);\n                }\n                !function() {\n                    const t = i.length / 3;\n                    if (c) {\n                        let t = 0, e = L * t;\n                        for(let t = 0; t < R; t++){\n                            const n = T[t];\n                            O(n[2] + e, n[1] + e, n[0] + e);\n                        }\n                        t = o + 2 * p, e = L * t;\n                        for(let t = 0; t < R; t++){\n                            const n = T[t];\n                            O(n[0] + e, n[1] + e, n[2] + e);\n                        }\n                    } else {\n                        for(let t = 0; t < R; t++){\n                            const e = T[t];\n                            O(e[2], e[1], e[0]);\n                        }\n                        for(let t = 0; t < R; t++){\n                            const e = T[t];\n                            O(e[0] + L * o, e[1] + L * o, e[2] + L * o);\n                        }\n                    }\n                    n.addGroup(t, i.length / 3 - t, 0);\n                }(), function() {\n                    const t = i.length / 3;\n                    let e = 0;\n                    B(E, e), e += E.length;\n                    for(let t = 0, n = S.length; t < n; t++){\n                        const n = S[t];\n                        B(n, e), e += n.length;\n                    }\n                    n.addGroup(t, i.length / 3 - t, 1);\n                }();\n            }\n            this.setAttribute(\"position\", new vn(i, 3)), this.setAttribute(\"uv\", new vn(r, 2)), this.computeVertexNormals();\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return function(t, e, n) {\n                if (n.shapes = [], Array.isArray(t)) for(let e = 0, i = t.length; e < i; e++){\n                    const i = t[e];\n                    n.shapes.push(i.uuid);\n                }\n                else n.shapes.push(t.uuid);\n                void 0 !== e.extrudePath && (n.options.extrudePath = e.extrudePath.toJSON());\n                return n;\n            }(this.parameters.shapes, this.parameters.options, t);\n        }\n        static fromJSON(t, e) {\n            const n = [];\n            for(let i = 0, r = t.shapes.length; i < r; i++){\n                const r = e[t.shapes[i]];\n                n.push(r);\n            }\n            const i = t.options.extrudePath;\n            return void 0 !== i && (t.options.extrudePath = (new Uo[i.type]).fromJSON(i)), new vl(n, t.options);\n        }\n    }\n    const yl = {\n        generateTopUV: function(t, e, n, i, r) {\n            const s = e[3 * n], a = e[3 * n + 1], o = e[3 * i], l = e[3 * i + 1], c = e[3 * r], h = e[3 * r + 1];\n            return [\n                new yt(s, a),\n                new yt(o, l),\n                new yt(c, h)\n            ];\n        },\n        generateSideWallUV: function(t, e, n, i, r, s) {\n            const a = e[3 * n], o = e[3 * n + 1], l = e[3 * n + 2], c = e[3 * i], h = e[3 * i + 1], u = e[3 * i + 2], d = e[3 * r], p = e[3 * r + 1], m = e[3 * r + 2], f = e[3 * s], g = e[3 * s + 1], v = e[3 * s + 2];\n            return Math.abs(o - h) < Math.abs(a - c) ? [\n                new yt(a, 1 - l),\n                new yt(c, 1 - u),\n                new yt(d, 1 - m),\n                new yt(f, 1 - v)\n            ] : [\n                new yt(o, 1 - l),\n                new yt(h, 1 - u),\n                new yt(p, 1 - m),\n                new yt(g, 1 - v)\n            ];\n        }\n    };\n    class xl extends po {\n        constructor(t = 1, e = 0){\n            const n = (1 + Math.sqrt(5)) / 2;\n            super([\n                -1,\n                n,\n                0,\n                1,\n                n,\n                0,\n                -1,\n                -n,\n                0,\n                1,\n                -n,\n                0,\n                0,\n                -1,\n                n,\n                0,\n                1,\n                n,\n                0,\n                -1,\n                -n,\n                0,\n                1,\n                -n,\n                n,\n                0,\n                -1,\n                n,\n                0,\n                1,\n                -n,\n                0,\n                -1,\n                -n,\n                0,\n                1\n            ], [\n                0,\n                11,\n                5,\n                0,\n                5,\n                1,\n                0,\n                1,\n                7,\n                0,\n                7,\n                10,\n                0,\n                10,\n                11,\n                1,\n                5,\n                9,\n                5,\n                11,\n                4,\n                11,\n                10,\n                2,\n                10,\n                7,\n                6,\n                7,\n                1,\n                8,\n                3,\n                9,\n                4,\n                3,\n                4,\n                2,\n                3,\n                2,\n                6,\n                3,\n                6,\n                8,\n                3,\n                8,\n                9,\n                4,\n                9,\n                5,\n                2,\n                4,\n                11,\n                6,\n                2,\n                10,\n                8,\n                6,\n                7,\n                9,\n                8,\n                1\n            ], t, e), this.type = \"IcosahedronGeometry\", this.parameters = {\n                radius: t,\n                detail: e\n            };\n        }\n        static fromJSON(t) {\n            return new xl(t.radius, t.detail);\n        }\n    }\n    class _l extends En {\n        constructor(t = [\n            new yt(0, .5),\n            new yt(.5, 0),\n            new yt(0, -0.5)\n        ], e = 12, n = 0, i = 2 * Math.PI){\n            super(), this.type = \"LatheGeometry\", this.parameters = {\n                points: t,\n                segments: e,\n                phiStart: n,\n                phiLength: i\n            }, e = Math.floor(e), i = ut(i, 0, 2 * Math.PI);\n            const r = [], s = [], a = [], o = 1 / e, l = new zt, c = new yt;\n            for(let r = 0; r <= e; r++){\n                const h = n + r * o * i, u = Math.sin(h), d = Math.cos(h);\n                for(let n = 0; n <= t.length - 1; n++)l.x = t[n].x * u, l.y = t[n].y, l.z = t[n].x * d, s.push(l.x, l.y, l.z), c.x = r / e, c.y = n / (t.length - 1), a.push(c.x, c.y);\n            }\n            for(let n = 0; n < e; n++)for(let e = 0; e < t.length - 1; e++){\n                const i = e + n * t.length, s = i, a = i + t.length, o = i + t.length + 1, l = i + 1;\n                r.push(s, a, l), r.push(a, o, l);\n            }\n            if (this.setIndex(r), this.setAttribute(\"position\", new vn(s, 3)), this.setAttribute(\"uv\", new vn(a, 2)), this.computeVertexNormals(), i === 2 * Math.PI) {\n                const n = this.attributes.normal.array, i = new zt, r = new zt, s = new zt, a = e * t.length * 3;\n                for(let e = 0, o = 0; e < t.length; e++, o += 3)i.x = n[o + 0], i.y = n[o + 1], i.z = n[o + 2], r.x = n[a + o + 0], r.y = n[a + o + 1], r.z = n[a + o + 2], s.addVectors(i, r).normalize(), n[o + 0] = n[a + o + 0] = s.x, n[o + 1] = n[a + o + 1] = s.y, n[o + 2] = n[a + o + 2] = s.z;\n            }\n        }\n        static fromJSON(t) {\n            return new _l(t.points, t.segments, t.phiStart, t.phiLength);\n        }\n    }\n    class Ml extends po {\n        constructor(t = 1, e = 0){\n            super([\n                1,\n                0,\n                0,\n                -1,\n                0,\n                0,\n                0,\n                1,\n                0,\n                0,\n                -1,\n                0,\n                0,\n                0,\n                1,\n                0,\n                0,\n                -1\n            ], [\n                0,\n                2,\n                4,\n                0,\n                4,\n                3,\n                0,\n                3,\n                5,\n                0,\n                5,\n                2,\n                1,\n                2,\n                5,\n                1,\n                5,\n                3,\n                1,\n                3,\n                4,\n                1,\n                4,\n                2\n            ], t, e), this.type = \"OctahedronGeometry\", this.parameters = {\n                radius: t,\n                detail: e\n            };\n        }\n        static fromJSON(t) {\n            return new Ml(t.radius, t.detail);\n        }\n    }\n    class bl extends En {\n        constructor(t = .5, e = 1, n = 8, i = 1, r = 0, s = 2 * Math.PI){\n            super(), this.type = \"RingGeometry\", this.parameters = {\n                innerRadius: t,\n                outerRadius: e,\n                thetaSegments: n,\n                phiSegments: i,\n                thetaStart: r,\n                thetaLength: s\n            }, n = Math.max(3, n);\n            const a = [], o = [], l = [], c = [];\n            let h = t;\n            const u = (e - t) / (i = Math.max(1, i)), d = new zt, p = new yt;\n            for(let t = 0; t <= i; t++){\n                for(let t = 0; t <= n; t++){\n                    const i = r + t / n * s;\n                    d.x = h * Math.cos(i), d.y = h * Math.sin(i), o.push(d.x, d.y, d.z), l.push(0, 0, 1), p.x = (d.x / e + 1) / 2, p.y = (d.y / e + 1) / 2, c.push(p.x, p.y);\n                }\n                h += u;\n            }\n            for(let t = 0; t < i; t++){\n                const e = t * (n + 1);\n                for(let t = 0; t < n; t++){\n                    const i = t + e, r = i, s = i + n + 1, o = i + n + 2, l = i + 1;\n                    a.push(r, s, l), a.push(s, o, l);\n                }\n            }\n            this.setIndex(a), this.setAttribute(\"position\", new vn(o, 3)), this.setAttribute(\"normal\", new vn(l, 3)), this.setAttribute(\"uv\", new vn(c, 2));\n        }\n        static fromJSON(t) {\n            return new bl(t.innerRadius, t.outerRadius, t.thetaSegments, t.phiSegments, t.thetaStart, t.thetaLength);\n        }\n    }\n    class wl extends En {\n        constructor(t = new ko([\n            new yt(0, .5),\n            new yt(-0.5, -0.5),\n            new yt(.5, -0.5)\n        ]), e = 12){\n            super(), this.type = \"ShapeGeometry\", this.parameters = {\n                shapes: t,\n                curveSegments: e\n            };\n            const n = [], i = [], r = [], s = [];\n            let a = 0, o = 0;\n            if (!1 === Array.isArray(t)) l(t);\n            else for(let e = 0; e < t.length; e++)l(t[e]), this.addGroup(a, o, e), a += o, o = 0;\n            function l(t) {\n                const a = i.length / 3, l = t.extractPoints(e);\n                let c = l.shape;\n                const h = l.holes;\n                !1 === ml.isClockWise(c) && (c = c.reverse());\n                for(let t = 0, e = h.length; t < e; t++){\n                    const e = h[t];\n                    !0 === ml.isClockWise(e) && (h[t] = e.reverse());\n                }\n                const u = ml.triangulateShape(c, h);\n                for(let t = 0, e = h.length; t < e; t++){\n                    const e = h[t];\n                    c = c.concat(e);\n                }\n                for(let t = 0, e = c.length; t < e; t++){\n                    const e = c[t];\n                    i.push(e.x, e.y, 0), r.push(0, 0, 1), s.push(e.x, e.y);\n                }\n                for(let t = 0, e = u.length; t < e; t++){\n                    const e = u[t], i = e[0] + a, r = e[1] + a, s = e[2] + a;\n                    n.push(i, r, s), o += 3;\n                }\n            }\n            this.setIndex(n), this.setAttribute(\"position\", new vn(i, 3)), this.setAttribute(\"normal\", new vn(r, 3)), this.setAttribute(\"uv\", new vn(s, 2));\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return function(t, e) {\n                if (e.shapes = [], Array.isArray(t)) for(let n = 0, i = t.length; n < i; n++){\n                    const i = t[n];\n                    e.shapes.push(i.uuid);\n                }\n                else e.shapes.push(t.uuid);\n                return e;\n            }(this.parameters.shapes, t);\n        }\n        static fromJSON(t, e) {\n            const n = [];\n            for(let i = 0, r = t.shapes.length; i < r; i++){\n                const r = e[t.shapes[i]];\n                n.push(r);\n            }\n            return new wl(n, t.curveSegments);\n        }\n    }\n    class Sl extends En {\n        constructor(t = 1, e = 32, n = 16, i = 0, r = 2 * Math.PI, s = 0, a = Math.PI){\n            super(), this.type = \"SphereGeometry\", this.parameters = {\n                radius: t,\n                widthSegments: e,\n                heightSegments: n,\n                phiStart: i,\n                phiLength: r,\n                thetaStart: s,\n                thetaLength: a\n            }, e = Math.max(3, Math.floor(e)), n = Math.max(2, Math.floor(n));\n            const o = Math.min(s + a, Math.PI);\n            let l = 0;\n            const c = [], h = new zt, u = new zt, d = [], p = [], m = [], f = [];\n            for(let d = 0; d <= n; d++){\n                const g = [], v = d / n;\n                let y = 0;\n                0 == d && 0 == s ? y = .5 / e : d == n && o == Math.PI && (y = -0.5 / e);\n                for(let n = 0; n <= e; n++){\n                    const o = n / e;\n                    h.x = -t * Math.cos(i + o * r) * Math.sin(s + v * a), h.y = t * Math.cos(s + v * a), h.z = t * Math.sin(i + o * r) * Math.sin(s + v * a), p.push(h.x, h.y, h.z), u.copy(h).normalize(), m.push(u.x, u.y, u.z), f.push(o + y, 1 - v), g.push(l++);\n                }\n                c.push(g);\n            }\n            for(let t = 0; t < n; t++)for(let i = 0; i < e; i++){\n                const e = c[t][i + 1], r = c[t][i], a = c[t + 1][i], l = c[t + 1][i + 1];\n                (0 !== t || s > 0) && d.push(e, r, l), (t !== n - 1 || o < Math.PI) && d.push(r, a, l);\n            }\n            this.setIndex(d), this.setAttribute(\"position\", new vn(p, 3)), this.setAttribute(\"normal\", new vn(m, 3)), this.setAttribute(\"uv\", new vn(f, 2));\n        }\n        static fromJSON(t) {\n            return new Sl(t.radius, t.widthSegments, t.heightSegments, t.phiStart, t.phiLength, t.thetaStart, t.thetaLength);\n        }\n    }\n    class Tl extends po {\n        constructor(t = 1, e = 0){\n            super([\n                1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                -1,\n                1,\n                -1,\n                1,\n                -1,\n                -1\n            ], [\n                2,\n                1,\n                0,\n                0,\n                3,\n                2,\n                1,\n                3,\n                0,\n                2,\n                3,\n                1\n            ], t, e), this.type = \"TetrahedronGeometry\", this.parameters = {\n                radius: t,\n                detail: e\n            };\n        }\n        static fromJSON(t) {\n            return new Tl(t.radius, t.detail);\n        }\n    }\n    class El extends En {\n        constructor(t = 1, e = .4, n = 8, i = 6, r = 2 * Math.PI){\n            super(), this.type = \"TorusGeometry\", this.parameters = {\n                radius: t,\n                tube: e,\n                radialSegments: n,\n                tubularSegments: i,\n                arc: r\n            }, n = Math.floor(n), i = Math.floor(i);\n            const s = [], a = [], o = [], l = [], c = new zt, h = new zt, u = new zt;\n            for(let s = 0; s <= n; s++)for(let d = 0; d <= i; d++){\n                const p = d / i * r, m = s / n * Math.PI * 2;\n                h.x = (t + e * Math.cos(m)) * Math.cos(p), h.y = (t + e * Math.cos(m)) * Math.sin(p), h.z = e * Math.sin(m), a.push(h.x, h.y, h.z), c.x = t * Math.cos(p), c.y = t * Math.sin(p), u.subVectors(h, c).normalize(), o.push(u.x, u.y, u.z), l.push(d / i), l.push(s / n);\n            }\n            for(let t = 1; t <= n; t++)for(let e = 1; e <= i; e++){\n                const n = (i + 1) * t + e - 1, r = (i + 1) * (t - 1) + e - 1, a = (i + 1) * (t - 1) + e, o = (i + 1) * t + e;\n                s.push(n, r, o), s.push(r, a, o);\n            }\n            this.setIndex(s), this.setAttribute(\"position\", new vn(a, 3)), this.setAttribute(\"normal\", new vn(o, 3)), this.setAttribute(\"uv\", new vn(l, 2));\n        }\n        static fromJSON(t) {\n            return new El(t.radius, t.tube, t.radialSegments, t.tubularSegments, t.arc);\n        }\n    }\n    class Al extends En {\n        constructor(t = 1, e = .4, n = 64, i = 8, r = 2, s = 3){\n            super(), this.type = \"TorusKnotGeometry\", this.parameters = {\n                radius: t,\n                tube: e,\n                tubularSegments: n,\n                radialSegments: i,\n                p: r,\n                q: s\n            }, n = Math.floor(n), i = Math.floor(i);\n            const a = [], o = [], l = [], c = [], h = new zt, u = new zt, d = new zt, p = new zt, m = new zt, f = new zt, g = new zt;\n            for(let a = 0; a <= n; ++a){\n                const y = a / n * r * Math.PI * 2;\n                v(y, r, s, t, d), v(y + .01, r, s, t, p), f.subVectors(p, d), g.addVectors(p, d), m.crossVectors(f, g), g.crossVectors(m, f), m.normalize(), g.normalize();\n                for(let t = 0; t <= i; ++t){\n                    const r = t / i * Math.PI * 2, s = -e * Math.cos(r), p = e * Math.sin(r);\n                    h.x = d.x + (s * g.x + p * m.x), h.y = d.y + (s * g.y + p * m.y), h.z = d.z + (s * g.z + p * m.z), o.push(h.x, h.y, h.z), u.subVectors(h, d).normalize(), l.push(u.x, u.y, u.z), c.push(a / n), c.push(t / i);\n                }\n            }\n            for(let t = 1; t <= n; t++)for(let e = 1; e <= i; e++){\n                const n = (i + 1) * (t - 1) + (e - 1), r = (i + 1) * t + (e - 1), s = (i + 1) * t + e, o = (i + 1) * (t - 1) + e;\n                a.push(n, r, o), a.push(r, s, o);\n            }\n            function v(t, e, n, i, r) {\n                const s = Math.cos(t), a = Math.sin(t), o = n / e * t, l = Math.cos(o);\n                r.x = i * (2 + l) * .5 * s, r.y = i * (2 + l) * a * .5, r.z = i * Math.sin(o) * .5;\n            }\n            this.setIndex(a), this.setAttribute(\"position\", new vn(o, 3)), this.setAttribute(\"normal\", new vn(l, 3)), this.setAttribute(\"uv\", new vn(c, 2));\n        }\n        static fromJSON(t) {\n            return new Al(t.radius, t.tube, t.tubularSegments, t.radialSegments, t.p, t.q);\n        }\n    }\n    class Ll extends En {\n        constructor(t = new Fo(new zt(-1, -1, 0), new zt(-1, 1, 0), new zt(1, 1, 0)), e = 64, n = 1, i = 8, r = !1){\n            super(), this.type = \"TubeGeometry\", this.parameters = {\n                path: t,\n                tubularSegments: e,\n                radius: n,\n                radialSegments: i,\n                closed: r\n            };\n            const s = t.computeFrenetFrames(e, r);\n            this.tangents = s.tangents, this.normals = s.normals, this.binormals = s.binormals;\n            const a = new zt, o = new zt, l = new yt;\n            let c = new zt;\n            const h = [], u = [], d = [], p = [];\n            function m(r) {\n                c = t.getPointAt(r / e, c);\n                const l = s.normals[r], d = s.binormals[r];\n                for(let t = 0; t <= i; t++){\n                    const e = t / i * Math.PI * 2, r = Math.sin(e), s = -Math.cos(e);\n                    o.x = s * l.x + r * d.x, o.y = s * l.y + r * d.y, o.z = s * l.z + r * d.z, o.normalize(), u.push(o.x, o.y, o.z), a.x = c.x + n * o.x, a.y = c.y + n * o.y, a.z = c.z + n * o.z, h.push(a.x, a.y, a.z);\n                }\n            }\n            !function() {\n                for(let t = 0; t < e; t++)m(t);\n                m(!1 === r ? e : 0), function() {\n                    for(let t = 0; t <= e; t++)for(let n = 0; n <= i; n++)l.x = t / e, l.y = n / i, d.push(l.x, l.y);\n                }(), function() {\n                    for(let t = 1; t <= e; t++)for(let e = 1; e <= i; e++){\n                        const n = (i + 1) * (t - 1) + (e - 1), r = (i + 1) * t + (e - 1), s = (i + 1) * t + e, a = (i + 1) * (t - 1) + e;\n                        p.push(n, r, a), p.push(r, s, a);\n                    }\n                }();\n            }(), this.setIndex(p), this.setAttribute(\"position\", new vn(h, 3)), this.setAttribute(\"normal\", new vn(u, 3)), this.setAttribute(\"uv\", new vn(d, 2));\n        }\n        toJSON() {\n            const t = super.toJSON();\n            return t.path = this.parameters.path.toJSON(), t;\n        }\n        static fromJSON(t) {\n            return new Ll((new Uo[t.path.type]).fromJSON(t.path), t.tubularSegments, t.radius, t.radialSegments, t.closed);\n        }\n    }\n    class Rl extends En {\n        constructor(t = null){\n            if (super(), this.type = \"WireframeGeometry\", this.parameters = {\n                geometry: t\n            }, null !== t) {\n                const e = [], n = new Set, i = new zt, r = new zt;\n                if (null !== t.index) {\n                    const s = t.attributes.position, a = t.index;\n                    let o = t.groups;\n                    0 === o.length && (o = [\n                        {\n                            start: 0,\n                            count: a.count,\n                            materialIndex: 0\n                        }\n                    ]);\n                    for(let t = 0, l = o.length; t < l; ++t){\n                        const l = o[t], c = l.start;\n                        for(let t = c, o = c + l.count; t < o; t += 3)for(let o = 0; o < 3; o++){\n                            const l = a.getX(t + o), c = a.getX(t + (o + 1) % 3);\n                            i.fromBufferAttribute(s, l), r.fromBufferAttribute(s, c), !0 === Cl(i, r, n) && (e.push(i.x, i.y, i.z), e.push(r.x, r.y, r.z));\n                        }\n                    }\n                } else {\n                    const s = t.attributes.position;\n                    for(let t = 0, a = s.count / 3; t < a; t++)for(let a = 0; a < 3; a++){\n                        const o = 3 * t + a, l = 3 * t + (a + 1) % 3;\n                        i.fromBufferAttribute(s, o), r.fromBufferAttribute(s, l), !0 === Cl(i, r, n) && (e.push(i.x, i.y, i.z), e.push(r.x, r.y, r.z));\n                    }\n                }\n                this.setAttribute(\"position\", new vn(e, 3));\n            }\n        }\n    }\n    function Cl(t, e, n) {\n        const i = `${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`, r = `${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;\n        return !0 !== n.has(i) && !0 !== n.has(r) && (n.add(i, r), !0);\n    }\n    var Pl = Object.freeze({\n        __proto__: null,\n        BoxGeometry: qn,\n        BoxBufferGeometry: qn,\n        CircleGeometry: co,\n        CircleBufferGeometry: co,\n        ConeGeometry: uo,\n        ConeBufferGeometry: uo,\n        CylinderGeometry: ho,\n        CylinderBufferGeometry: ho,\n        DodecahedronGeometry: mo,\n        DodecahedronBufferGeometry: mo,\n        EdgesGeometry: xo,\n        ExtrudeGeometry: vl,\n        ExtrudeBufferGeometry: vl,\n        IcosahedronGeometry: xl,\n        IcosahedronBufferGeometry: xl,\n        LatheGeometry: _l,\n        LatheBufferGeometry: _l,\n        OctahedronGeometry: Ml,\n        OctahedronBufferGeometry: Ml,\n        PlaneGeometry: di,\n        PlaneBufferGeometry: di,\n        PolyhedronGeometry: po,\n        PolyhedronBufferGeometry: po,\n        RingGeometry: bl,\n        RingBufferGeometry: bl,\n        ShapeGeometry: wl,\n        ShapeBufferGeometry: wl,\n        SphereGeometry: Sl,\n        SphereBufferGeometry: Sl,\n        TetrahedronGeometry: Tl,\n        TetrahedronBufferGeometry: Tl,\n        TorusGeometry: El,\n        TorusBufferGeometry: El,\n        TorusKnotGeometry: Al,\n        TorusKnotBufferGeometry: Al,\n        TubeGeometry: Ll,\n        TubeBufferGeometry: Ll,\n        WireframeGeometry: Rl\n    });\n    class Il extends Ze {\n        constructor(t){\n            super(), this.type = \"ShadowMaterial\", this.color = new rn(0), this.transparent = !0, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this;\n        }\n    }\n    Il.prototype.isShadowMaterial = !0;\n    class Dl extends Ze {\n        constructor(t){\n            super(), this.defines = {\n                STANDARD: \"\"\n            }, this.type = \"MeshStandardMaterial\", this.color = new rn(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new rn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new yt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.flatShading = !1, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.defines = {\n                STANDARD: \"\"\n            }, this.color.copy(t.color), this.roughness = t.roughness, this.metalness = t.metalness, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.roughnessMap = t.roughnessMap, this.metalnessMap = t.metalnessMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.envMapIntensity = t.envMapIntensity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.flatShading = t.flatShading, this;\n        }\n    }\n    Dl.prototype.isMeshStandardMaterial = !0;\n    class Nl extends Dl {\n        constructor(t){\n            super(), this.defines = {\n                STANDARD: \"\",\n                PHYSICAL: \"\"\n            }, this.type = \"MeshPhysicalMaterial\", this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new yt(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, \"reflectivity\", {\n                get: function() {\n                    return ut(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n                },\n                set: function(t) {\n                    this.ior = (1 + .4 * t) / (1 - .4 * t);\n                }\n            }), this.sheenColor = new rn(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = .01, this.thicknessMap = null, this.attenuationDistance = 0, this.attenuationColor = new rn(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new rn(1, 1, 1), this.specularColorMap = null, this._sheen = 0, this._clearcoat = 0, this._transmission = 0, this.setValues(t);\n        }\n        get sheen() {\n            return this._sheen;\n        }\n        set sheen(t) {\n            this._sheen > 0 != t > 0 && this.version++, this._sheen = t;\n        }\n        get clearcoat() {\n            return this._clearcoat;\n        }\n        set clearcoat(t) {\n            this._clearcoat > 0 != t > 0 && this.version++, this._clearcoat = t;\n        }\n        get transmission() {\n            return this._transmission;\n        }\n        set transmission(t) {\n            this._transmission > 0 != t > 0 && this.version++, this._transmission = t;\n        }\n        copy(t) {\n            return super.copy(t), this.defines = {\n                STANDARD: \"\",\n                PHYSICAL: \"\"\n            }, this.clearcoat = t.clearcoat, this.clearcoatMap = t.clearcoatMap, this.clearcoatRoughness = t.clearcoatRoughness, this.clearcoatRoughnessMap = t.clearcoatRoughnessMap, this.clearcoatNormalMap = t.clearcoatNormalMap, this.clearcoatNormalScale.copy(t.clearcoatNormalScale), this.ior = t.ior, this.sheen = t.sheen, this.sheenColor.copy(t.sheenColor), this.sheenColorMap = t.sheenColorMap, this.sheenRoughness = t.sheenRoughness, this.sheenRoughnessMap = t.sheenRoughnessMap, this.transmission = t.transmission, this.transmissionMap = t.transmissionMap, this.thickness = t.thickness, this.thicknessMap = t.thicknessMap, this.attenuationDistance = t.attenuationDistance, this.attenuationColor.copy(t.attenuationColor), this.specularIntensity = t.specularIntensity, this.specularIntensityMap = t.specularIntensityMap, this.specularColor.copy(t.specularColor), this.specularColorMap = t.specularColorMap, this;\n        }\n    }\n    Nl.prototype.isMeshPhysicalMaterial = !0;\n    class zl extends Ze {\n        constructor(t){\n            super(), this.type = \"MeshPhongMaterial\", this.color = new rn(16777215), this.specular = new rn(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new rn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new yt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.flatShading = !1, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.specular.copy(t.specular), this.shininess = t.shininess, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.flatShading = t.flatShading, this;\n        }\n    }\n    zl.prototype.isMeshPhongMaterial = !0;\n    class Bl extends Ze {\n        constructor(t){\n            super(), this.defines = {\n                TOON: \"\"\n            }, this.type = \"MeshToonMaterial\", this.color = new rn(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new rn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new yt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.map = t.map, this.gradientMap = t.gradientMap, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.alphaMap = t.alphaMap, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this;\n        }\n    }\n    Bl.prototype.isMeshToonMaterial = !0;\n    class Fl extends Ze {\n        constructor(t){\n            super(), this.type = \"MeshNormalMaterial\", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new yt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.flatShading = !1, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.flatShading = t.flatShading, this;\n        }\n    }\n    Fl.prototype.isMeshNormalMaterial = !0;\n    class Ol extends Ze {\n        constructor(t){\n            super(), this.type = \"MeshLambertMaterial\", this.color = new rn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new rn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this;\n        }\n    }\n    Ol.prototype.isMeshLambertMaterial = !0;\n    class Ul extends Ze {\n        constructor(t){\n            super(), this.defines = {\n                MATCAP: \"\"\n            }, this.type = \"MeshMatcapMaterial\", this.color = new rn(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new yt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.defines = {\n                MATCAP: \"\"\n            }, this.color.copy(t.color), this.matcap = t.matcap, this.map = t.map, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.alphaMap = t.alphaMap, this.flatShading = t.flatShading, this;\n        }\n    }\n    Ul.prototype.isMeshMatcapMaterial = !0;\n    class Hl extends Ga {\n        constructor(t){\n            super(), this.type = \"LineDashedMaterial\", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(t);\n        }\n        copy(t) {\n            return super.copy(t), this.scale = t.scale, this.dashSize = t.dashSize, this.gapSize = t.gapSize, this;\n        }\n    }\n    Hl.prototype.isLineDashedMaterial = !0;\n    var Gl = Object.freeze({\n        __proto__: null,\n        ShadowMaterial: Il,\n        SpriteMaterial: sa,\n        RawShaderMaterial: wi,\n        ShaderMaterial: Zn,\n        PointsMaterial: Ka,\n        MeshPhysicalMaterial: Nl,\n        MeshStandardMaterial: Dl,\n        MeshPhongMaterial: zl,\n        MeshToonMaterial: Bl,\n        MeshNormalMaterial: Fl,\n        MeshLambertMaterial: Ol,\n        MeshDepthMaterial: Us,\n        MeshDistanceMaterial: Hs,\n        MeshBasicMaterial: sn,\n        MeshMatcapMaterial: Ul,\n        LineDashedMaterial: Hl,\n        LineBasicMaterial: Ga,\n        Material: Ze\n    });\n    const kl = {\n        arraySlice: function(t, e, n) {\n            return kl.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== n ? n : t.length)) : t.slice(e, n);\n        },\n        convertArray: function(t, e, n) {\n            return !t || !n && t.constructor === e ? t : \"number\" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t);\n        },\n        isTypedArray: function(t) {\n            return ArrayBuffer.isView(t) && !(t instanceof DataView);\n        },\n        getKeyframeOrder: function(t) {\n            const e = t.length, n = new Array(e);\n            for(let t = 0; t !== e; ++t)n[t] = t;\n            return n.sort(function(e, n) {\n                return t[e] - t[n];\n            }), n;\n        },\n        sortedArray: function(t, e, n) {\n            const i = t.length, r = new t.constructor(i);\n            for(let s = 0, a = 0; a !== i; ++s){\n                const i = n[s] * e;\n                for(let n = 0; n !== e; ++n)r[a++] = t[i + n];\n            }\n            return r;\n        },\n        flattenJSON: function(t, e, n, i) {\n            let r = 1, s = t[0];\n            for(; void 0 !== s && void 0 === s[i];)s = t[r++];\n            if (void 0 === s) return;\n            let a = s[i];\n            if (void 0 !== a) {\n                if (Array.isArray(a)) do a = s[i], void 0 !== a && (e.push(s.time), n.push.apply(n, a)), s = t[r++];\n                while (void 0 !== s);\n                else if (void 0 !== a.toArray) do a = s[i], void 0 !== a && (e.push(s.time), a.toArray(n, n.length)), s = t[r++];\n                while (void 0 !== s);\n                else do a = s[i], void 0 !== a && (e.push(s.time), n.push(a)), s = t[r++];\n                while (void 0 !== s);\n            }\n        },\n        subclip: function(t, e, n, i, r = 30) {\n            const s = t.clone();\n            s.name = e;\n            const a = [];\n            for(let t = 0; t < s.tracks.length; ++t){\n                const e = s.tracks[t], o = e.getValueSize(), l = [], c = [];\n                for(let t = 0; t < e.times.length; ++t){\n                    const s = e.times[t] * r;\n                    if (!(s < n || s >= i)) {\n                        l.push(e.times[t]);\n                        for(let n = 0; n < o; ++n)c.push(e.values[t * o + n]);\n                    }\n                }\n                0 !== l.length && (e.times = kl.convertArray(l, e.times.constructor), e.values = kl.convertArray(c, e.values.constructor), a.push(e));\n            }\n            s.tracks = a;\n            let o = 1 / 0;\n            for(let t = 0; t < s.tracks.length; ++t)o > s.tracks[t].times[0] && (o = s.tracks[t].times[0]);\n            for(let t = 0; t < s.tracks.length; ++t)s.tracks[t].shift(-1 * o);\n            return s.resetDuration(), s;\n        },\n        makeClipAdditive: function(t, e = 0, n = t, i = 30) {\n            i <= 0 && (i = 30);\n            const r = n.tracks.length, s = e / i;\n            for(let e = 0; e < r; ++e){\n                const i = n.tracks[e], r = i.ValueTypeName;\n                if (\"bool\" === r || \"string\" === r) continue;\n                const a = t.tracks.find(function(t) {\n                    return t.name === i.name && t.ValueTypeName === r;\n                });\n                if (void 0 === a) continue;\n                let o = 0;\n                const l = i.getValueSize();\n                i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (o = l / 3);\n                let c = 0;\n                const h = a.getValueSize();\n                a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (c = h / 3);\n                const u = i.times.length - 1;\n                let d;\n                if (s <= i.times[0]) {\n                    const t = o, e = l - o;\n                    d = kl.arraySlice(i.values, t, e);\n                } else if (s >= i.times[u]) {\n                    const t = u * l + o, e = t + l - o;\n                    d = kl.arraySlice(i.values, t, e);\n                } else {\n                    const t = i.createInterpolant(), e = o, n = l - o;\n                    t.evaluate(s), d = kl.arraySlice(t.resultBuffer, e, n);\n                }\n                if (\"quaternion\" === r) (new Nt).fromArray(d).normalize().conjugate().toArray(d);\n                const p = a.times.length;\n                for(let t = 0; t < p; ++t){\n                    const e = t * h + c;\n                    if (\"quaternion\" === r) Nt.multiplyQuaternionsFlat(a.values, e, d, 0, a.values, e);\n                    else {\n                        const t = h - 2 * c;\n                        for(let n = 0; n < t; ++n)a.values[e + n] -= d[n];\n                    }\n                }\n            }\n            return t.blendMode = q, t;\n        }\n    };\n    class Vl {\n        constructor(t, e, n, i){\n            this.parameterPositions = t, this._cachedIndex = 0, this.resultBuffer = void 0 !== i ? i : new e.constructor(n), this.sampleValues = e, this.valueSize = n, this.settings = null, this.DefaultSettings_ = {};\n        }\n        evaluate(t) {\n            const e = this.parameterPositions;\n            let n = this._cachedIndex, i = e[n], r = e[n - 1];\n            t: {\n                e: {\n                    let s;\n                    n: {\n                        i: if (!(t < i)) {\n                            for(let s = n + 2;;){\n                                if (void 0 === i) {\n                                    if (t < r) break i;\n                                    return n = e.length, this._cachedIndex = n, this.afterEnd_(n - 1, t, r);\n                                }\n                                if (n === s) break;\n                                if (r = i, i = e[++n], t < i) break e;\n                            }\n                            s = e.length;\n                            break n;\n                        }\n                        if (t >= r) break t;\n                        {\n                            const a = e[1];\n                            t < a && (n = 2, r = a);\n                            for(let s = n - 2;;){\n                                if (void 0 === r) return this._cachedIndex = 0, this.beforeStart_(0, t, i);\n                                if (n === s) break;\n                                if (i = r, r = e[--n - 1], t >= r) break e;\n                            }\n                            s = n, n = 0;\n                        }\n                    }\n                    for(; n < s;){\n                        const i = n + s >>> 1;\n                        t < e[i] ? s = i : n = i + 1;\n                    }\n                    if (i = e[n], r = e[n - 1], void 0 === r) return this._cachedIndex = 0, this.beforeStart_(0, t, i);\n                    if (void 0 === i) return n = e.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, t);\n                }\n                this._cachedIndex = n, this.intervalChanged_(n, r, i);\n            }\n            return this.interpolate_(n, r, t, i);\n        }\n        getSettings_() {\n            return this.settings || this.DefaultSettings_;\n        }\n        copySampleValue_(t) {\n            const e = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = t * i;\n            for(let t = 0; t !== i; ++t)e[t] = n[r + t];\n            return e;\n        }\n        interpolate_() {\n            throw new Error(\"call to abstract method\");\n        }\n        intervalChanged_() {}\n    }\n    Vl.prototype.beforeStart_ = Vl.prototype.copySampleValue_, Vl.prototype.afterEnd_ = Vl.prototype.copySampleValue_;\n    class Wl extends Vl {\n        constructor(t, e, n, i){\n            super(t, e, n, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {\n                endingStart: k,\n                endingEnd: k\n            };\n        }\n        intervalChanged_(t, e, n) {\n            const i = this.parameterPositions;\n            let r = t - 2, s = t + 1, a = i[r], o = i[s];\n            if (void 0 === a) switch(this.getSettings_().endingStart){\n                case V:\n                    r = t, a = 2 * e - n;\n                    break;\n                case W:\n                    r = i.length - 2, a = e + i[r] - i[r + 1];\n                    break;\n                default:\n                    r = t, a = n;\n            }\n            if (void 0 === o) switch(this.getSettings_().endingEnd){\n                case V:\n                    s = t, o = 2 * n - e;\n                    break;\n                case W:\n                    s = 1, o = n + i[1] - i[0];\n                    break;\n                default:\n                    s = t - 1, o = e;\n            }\n            const l = .5 * (n - e), c = this.valueSize;\n            this._weightPrev = l / (e - a), this._weightNext = l / (o - n), this._offsetPrev = r * c, this._offsetNext = s * c;\n        }\n        interpolate_(t, e, n, i) {\n            const r = this.resultBuffer, s = this.sampleValues, a = this.valueSize, o = t * a, l = o - a, c = this._offsetPrev, h = this._offsetNext, u = this._weightPrev, d = this._weightNext, p = (n - e) / (i - e), m = p * p, f = m * p, g = -u * f + 2 * u * m - u * p, v = (1 + u) * f + (-1.5 - 2 * u) * m + (-0.5 + u) * p + 1, y = (-1 - d) * f + (1.5 + d) * m + .5 * p, x = d * f - d * m;\n            for(let t = 0; t !== a; ++t)r[t] = g * s[c + t] + v * s[l + t] + y * s[o + t] + x * s[h + t];\n            return r;\n        }\n    }\n    class jl extends Vl {\n        constructor(t, e, n, i){\n            super(t, e, n, i);\n        }\n        interpolate_(t, e, n, i) {\n            const r = this.resultBuffer, s = this.sampleValues, a = this.valueSize, o = t * a, l = o - a, c = (n - e) / (i - e), h = 1 - c;\n            for(let t = 0; t !== a; ++t)r[t] = s[l + t] * h + s[o + t] * c;\n            return r;\n        }\n    }\n    class ql extends Vl {\n        constructor(t, e, n, i){\n            super(t, e, n, i);\n        }\n        interpolate_(t) {\n            return this.copySampleValue_(t - 1);\n        }\n    }\n    class Xl {\n        constructor(t, e, n, i){\n            if (void 0 === t) throw new Error(\"THREE.KeyframeTrack: track name is undefined\");\n            if (void 0 === e || 0 === e.length) throw new Error(\"THREE.KeyframeTrack: no keyframes in track named \" + t);\n            this.name = t, this.times = kl.convertArray(e, this.TimeBufferType), this.values = kl.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);\n        }\n        static toJSON(t) {\n            const e = t.constructor;\n            let n;\n            if (e.toJSON !== this.toJSON) n = e.toJSON(t);\n            else {\n                n = {\n                    name: t.name,\n                    times: kl.convertArray(t.times, Array),\n                    values: kl.convertArray(t.values, Array)\n                };\n                const e = t.getInterpolation();\n                e !== t.DefaultInterpolation && (n.interpolation = e);\n            }\n            return n.type = t.ValueTypeName, n;\n        }\n        InterpolantFactoryMethodDiscrete(t) {\n            return new ql(this.times, this.values, this.getValueSize(), t);\n        }\n        InterpolantFactoryMethodLinear(t) {\n            return new jl(this.times, this.values, this.getValueSize(), t);\n        }\n        InterpolantFactoryMethodSmooth(t) {\n            return new Wl(this.times, this.values, this.getValueSize(), t);\n        }\n        setInterpolation(t) {\n            let e;\n            switch(t){\n                case U:\n                    e = this.InterpolantFactoryMethodDiscrete;\n                    break;\n                case H:\n                    e = this.InterpolantFactoryMethodLinear;\n                    break;\n                case G:\n                    e = this.InterpolantFactoryMethodSmooth;\n            }\n            if (void 0 === e) {\n                const e = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n                if (void 0 === this.createInterpolant) {\n                    if (t === this.DefaultInterpolation) throw new Error(e);\n                    this.setInterpolation(this.DefaultInterpolation);\n                }\n                return console.warn(\"THREE.KeyframeTrack:\", e), this;\n            }\n            return this.createInterpolant = e, this;\n        }\n        getInterpolation() {\n            switch(this.createInterpolant){\n                case this.InterpolantFactoryMethodDiscrete:\n                    return U;\n                case this.InterpolantFactoryMethodLinear:\n                    return H;\n                case this.InterpolantFactoryMethodSmooth:\n                    return G;\n            }\n        }\n        getValueSize() {\n            return this.values.length / this.times.length;\n        }\n        shift(t) {\n            if (0 !== t) {\n                const e = this.times;\n                for(let n = 0, i = e.length; n !== i; ++n)e[n] += t;\n            }\n            return this;\n        }\n        scale(t) {\n            if (1 !== t) {\n                const e = this.times;\n                for(let n = 0, i = e.length; n !== i; ++n)e[n] *= t;\n            }\n            return this;\n        }\n        trim(t, e) {\n            const n = this.times, i = n.length;\n            let r = 0, s = i - 1;\n            for(; r !== i && n[r] < t;)++r;\n            for(; -1 !== s && n[s] > e;)--s;\n            if (++s, 0 !== r || s !== i) {\n                r >= s && (s = Math.max(s, 1), r = s - 1);\n                const t = this.getValueSize();\n                this.times = kl.arraySlice(n, r, s), this.values = kl.arraySlice(this.values, r * t, s * t);\n            }\n            return this;\n        }\n        validate() {\n            let t = !0;\n            const e = this.getValueSize();\n            e - Math.floor(e) != 0 && (console.error(\"THREE.KeyframeTrack: Invalid value size in track.\", this), t = !1);\n            const n = this.times, i = this.values, r = n.length;\n            0 === r && (console.error(\"THREE.KeyframeTrack: Track is empty.\", this), t = !1);\n            let s = null;\n            for(let e = 0; e !== r; e++){\n                const i = n[e];\n                if (\"number\" == typeof i && isNaN(i)) {\n                    console.error(\"THREE.KeyframeTrack: Time is not a valid number.\", this, e, i), t = !1;\n                    break;\n                }\n                if (null !== s && s > i) {\n                    console.error(\"THREE.KeyframeTrack: Out of order keys.\", this, e, i, s), t = !1;\n                    break;\n                }\n                s = i;\n            }\n            if (void 0 !== i && kl.isTypedArray(i)) for(let e = 0, n = i.length; e !== n; ++e){\n                const n = i[e];\n                if (isNaN(n)) {\n                    console.error(\"THREE.KeyframeTrack: Value is not a valid number.\", this, e, n), t = !1;\n                    break;\n                }\n            }\n            return t;\n        }\n        optimize() {\n            const t = kl.arraySlice(this.times), e = kl.arraySlice(this.values), n = this.getValueSize(), i = this.getInterpolation() === G, r = t.length - 1;\n            let s = 1;\n            for(let a = 1; a < r; ++a){\n                let r = !1;\n                const o = t[a];\n                if (o !== t[a + 1] && (1 !== a || o !== t[0])) {\n                    if (i) r = !0;\n                    else {\n                        const t = a * n, i = t - n, s = t + n;\n                        for(let a = 0; a !== n; ++a){\n                            const n = e[t + a];\n                            if (n !== e[i + a] || n !== e[s + a]) {\n                                r = !0;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (r) {\n                    if (a !== s) {\n                        t[s] = t[a];\n                        const i = a * n, r = s * n;\n                        for(let t = 0; t !== n; ++t)e[r + t] = e[i + t];\n                    }\n                    ++s;\n                }\n            }\n            if (r > 0) {\n                t[s] = t[r];\n                for(let t = r * n, i = s * n, a = 0; a !== n; ++a)e[i + a] = e[t + a];\n                ++s;\n            }\n            return s !== t.length ? (this.times = kl.arraySlice(t, 0, s), this.values = kl.arraySlice(e, 0, s * n)) : (this.times = t, this.values = e), this;\n        }\n        clone() {\n            const t = kl.arraySlice(this.times, 0), e = kl.arraySlice(this.values, 0), n = new this.constructor(this.name, t, e);\n            return n.createInterpolant = this.createInterpolant, n;\n        }\n    }\n    Xl.prototype.TimeBufferType = Float32Array, Xl.prototype.ValueBufferType = Float32Array, Xl.prototype.DefaultInterpolation = H;\n    class Yl extends Xl {\n    }\n    Yl.prototype.ValueTypeName = \"bool\", Yl.prototype.ValueBufferType = Array, Yl.prototype.DefaultInterpolation = U, Yl.prototype.InterpolantFactoryMethodLinear = void 0, Yl.prototype.InterpolantFactoryMethodSmooth = void 0;\n    class Jl extends Xl {\n    }\n    Jl.prototype.ValueTypeName = \"color\";\n    class Zl extends Xl {\n    }\n    Zl.prototype.ValueTypeName = \"number\";\n    class Ql extends Vl {\n        constructor(t, e, n, i){\n            super(t, e, n, i);\n        }\n        interpolate_(t, e, n, i) {\n            const r = this.resultBuffer, s = this.sampleValues, a = this.valueSize, o = (n - e) / (i - e);\n            let l = t * a;\n            for(let t = l + a; l !== t; l += 4)Nt.slerpFlat(r, 0, s, l - a, s, l, o);\n            return r;\n        }\n    }\n    class Kl extends Xl {\n        InterpolantFactoryMethodLinear(t) {\n            return new Ql(this.times, this.values, this.getValueSize(), t);\n        }\n    }\n    Kl.prototype.ValueTypeName = \"quaternion\", Kl.prototype.DefaultInterpolation = H, Kl.prototype.InterpolantFactoryMethodSmooth = void 0;\n    class $l extends Xl {\n    }\n    $l.prototype.ValueTypeName = \"string\", $l.prototype.ValueBufferType = Array, $l.prototype.DefaultInterpolation = U, $l.prototype.InterpolantFactoryMethodLinear = void 0, $l.prototype.InterpolantFactoryMethodSmooth = void 0;\n    class tc extends Xl {\n    }\n    tc.prototype.ValueTypeName = \"vector\";\n    class ec {\n        constructor(t, e = -1, n, i = 2500){\n            this.name = t, this.tracks = n, this.duration = e, this.blendMode = i, this.uuid = ht(), this.duration < 0 && this.resetDuration();\n        }\n        static parse(t) {\n            const e = [], n = t.tracks, i = 1 / (t.fps || 1);\n            for(let t = 0, r = n.length; t !== r; ++t)e.push(nc(n[t]).scale(i));\n            const r = new this(t.name, t.duration, e, t.blendMode);\n            return r.uuid = t.uuid, r;\n        }\n        static toJSON(t) {\n            const e = [], n = t.tracks, i = {\n                name: t.name,\n                duration: t.duration,\n                tracks: e,\n                uuid: t.uuid,\n                blendMode: t.blendMode\n            };\n            for(let t = 0, i = n.length; t !== i; ++t)e.push(Xl.toJSON(n[t]));\n            return i;\n        }\n        static CreateFromMorphTargetSequence(t, e, n, i) {\n            const r = e.length, s = [];\n            for(let t = 0; t < r; t++){\n                let a = [], o = [];\n                a.push((t + r - 1) % r, t, (t + 1) % r), o.push(0, 1, 0);\n                const l = kl.getKeyframeOrder(a);\n                a = kl.sortedArray(a, 1, l), o = kl.sortedArray(o, 1, l), i || 0 !== a[0] || (a.push(r), o.push(o[0])), s.push(new Zl(\".morphTargetInfluences[\" + e[t].name + \"]\", a, o).scale(1 / n));\n            }\n            return new this(t, -1, s);\n        }\n        static findByName(t, e) {\n            let n = t;\n            if (!Array.isArray(t)) {\n                const e = t;\n                n = e.geometry && e.geometry.animations || e.animations;\n            }\n            for(let t = 0; t < n.length; t++)if (n[t].name === e) return n[t];\n            return null;\n        }\n        static CreateClipsFromMorphTargetSequences(t, e, n) {\n            const i = {}, r = /^([\\w-]*?)([\\d]+)$/;\n            for(let e = 0, n = t.length; e < n; e++){\n                const n = t[e], s = n.name.match(r);\n                if (s && s.length > 1) {\n                    const t = s[1];\n                    let e = i[t];\n                    e || (i[t] = e = []), e.push(n);\n                }\n            }\n            const s = [];\n            for(const t in i)s.push(this.CreateFromMorphTargetSequence(t, i[t], e, n));\n            return s;\n        }\n        static parseAnimation(t, e) {\n            if (!t) return console.error(\"THREE.AnimationClip: No animation in JSONLoader data.\"), null;\n            const n = function(t, e, n, i, r) {\n                if (0 !== n.length) {\n                    const s = [], a = [];\n                    kl.flattenJSON(n, s, a, i), 0 !== s.length && r.push(new t(e, s, a));\n                }\n            }, i = [], r = t.name || \"default\", s = t.fps || 30, a = t.blendMode;\n            let o = t.length || -1;\n            const l = t.hierarchy || [];\n            for(let t = 0; t < l.length; t++){\n                const r = l[t].keys;\n                if (r && 0 !== r.length) {\n                    if (r[0].morphTargets) {\n                        const t = {};\n                        let e;\n                        for(e = 0; e < r.length; e++)if (r[e].morphTargets) for(let n = 0; n < r[e].morphTargets.length; n++)t[r[e].morphTargets[n]] = -1;\n                        for(const n in t){\n                            const t = [], s = [];\n                            for(let i = 0; i !== r[e].morphTargets.length; ++i){\n                                const i = r[e];\n                                t.push(i.time), s.push(i.morphTarget === n ? 1 : 0);\n                            }\n                            i.push(new Zl(\".morphTargetInfluence[\" + n + \"]\", t, s));\n                        }\n                        o = t.length * (s || 1);\n                    } else {\n                        const s = \".bones[\" + e[t].name + \"]\";\n                        n(tc, s + \".position\", r, \"pos\", i), n(Kl, s + \".quaternion\", r, \"rot\", i), n(tc, s + \".scale\", r, \"scl\", i);\n                    }\n                }\n            }\n            if (0 === i.length) return null;\n            return new this(r, o, i, a);\n        }\n        resetDuration() {\n            let t = 0;\n            for(let e = 0, n = this.tracks.length; e !== n; ++e){\n                const n = this.tracks[e];\n                t = Math.max(t, n.times[n.times.length - 1]);\n            }\n            return this.duration = t, this;\n        }\n        trim() {\n            for(let t = 0; t < this.tracks.length; t++)this.tracks[t].trim(0, this.duration);\n            return this;\n        }\n        validate() {\n            let t = !0;\n            for(let e = 0; e < this.tracks.length; e++)t = t && this.tracks[e].validate();\n            return t;\n        }\n        optimize() {\n            for(let t = 0; t < this.tracks.length; t++)this.tracks[t].optimize();\n            return this;\n        }\n        clone() {\n            const t = [];\n            for(let e = 0; e < this.tracks.length; e++)t.push(this.tracks[e].clone());\n            return new this.constructor(this.name, this.duration, t, this.blendMode);\n        }\n        toJSON() {\n            return this.constructor.toJSON(this);\n        }\n    }\n    function nc(t) {\n        if (void 0 === t.type) throw new Error(\"THREE.KeyframeTrack: track type undefined, can not parse\");\n        const e = function(t) {\n            switch(t.toLowerCase()){\n                case \"scalar\":\n                case \"double\":\n                case \"float\":\n                case \"number\":\n                case \"integer\":\n                    return Zl;\n                case \"vector\":\n                case \"vector2\":\n                case \"vector3\":\n                case \"vector4\":\n                    return tc;\n                case \"color\":\n                    return Jl;\n                case \"quaternion\":\n                    return Kl;\n                case \"bool\":\n                case \"boolean\":\n                    return Yl;\n                case \"string\":\n                    return $l;\n            }\n            throw new Error(\"THREE.KeyframeTrack: Unsupported typeName: \" + t);\n        }(t.type);\n        if (void 0 === t.times) {\n            const e = [], n = [];\n            kl.flattenJSON(t.keys, e, n, \"value\"), t.times = e, t.values = n;\n        }\n        return void 0 !== e.parse ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation);\n    }\n    const ic = {\n        enabled: !1,\n        files: {},\n        add: function(t, e) {\n            !1 !== this.enabled && (this.files[t] = e);\n        },\n        get: function(t) {\n            if (!1 !== this.enabled) return this.files[t];\n        },\n        remove: function(t) {\n            delete this.files[t];\n        },\n        clear: function() {\n            this.files = {};\n        }\n    };\n    class rc {\n        constructor(t, e, n){\n            const i = this;\n            let r, s = !1, a = 0, o = 0;\n            const l = [];\n            this.onStart = void 0, this.onLoad = t, this.onProgress = e, this.onError = n, this.itemStart = function(t) {\n                o++, !1 === s && void 0 !== i.onStart && i.onStart(t, a, o), s = !0;\n            }, this.itemEnd = function(t) {\n                a++, void 0 !== i.onProgress && i.onProgress(t, a, o), a === o && (s = !1, void 0 !== i.onLoad && i.onLoad());\n            }, this.itemError = function(t) {\n                void 0 !== i.onError && i.onError(t);\n            }, this.resolveURL = function(t) {\n                return r ? r(t) : t;\n            }, this.setURLModifier = function(t) {\n                return r = t, this;\n            }, this.addHandler = function(t, e) {\n                return l.push(t, e), this;\n            }, this.removeHandler = function(t) {\n                const e = l.indexOf(t);\n                return -1 !== e && l.splice(e, 2), this;\n            }, this.getHandler = function(t) {\n                for(let e = 0, n = l.length; e < n; e += 2){\n                    const n = l[e], i = l[e + 1];\n                    if (n.global && (n.lastIndex = 0), n.test(t)) return i;\n                }\n                return null;\n            };\n        }\n    }\n    const sc = new rc;\n    class ac {\n        constructor(t){\n            this.manager = void 0 !== t ? t : sc, this.crossOrigin = \"anonymous\", this.withCredentials = !1, this.path = \"\", this.resourcePath = \"\", this.requestHeader = {};\n        }\n        load() {}\n        loadAsync(t, e) {\n            const n = this;\n            return new Promise(function(i, r) {\n                n.load(t, i, e, r);\n            });\n        }\n        parse() {}\n        setCrossOrigin(t) {\n            return this.crossOrigin = t, this;\n        }\n        setWithCredentials(t) {\n            return this.withCredentials = t, this;\n        }\n        setPath(t) {\n            return this.path = t, this;\n        }\n        setResourcePath(t) {\n            return this.resourcePath = t, this;\n        }\n        setRequestHeader(t) {\n            return this.requestHeader = t, this;\n        }\n    }\n    const oc = {};\n    class lc extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            void 0 === t && (t = \"\"), void 0 !== this.path && (t = this.path + t), t = this.manager.resolveURL(t);\n            const r = ic.get(t);\n            if (void 0 !== r) return this.manager.itemStart(t), setTimeout(()=>{\n                e && e(r), this.manager.itemEnd(t);\n            }, 0), r;\n            if (void 0 !== oc[t]) return void oc[t].push({\n                onLoad: e,\n                onProgress: n,\n                onError: i\n            });\n            oc[t] = [], oc[t].push({\n                onLoad: e,\n                onProgress: n,\n                onError: i\n            });\n            const s = new Request(t, {\n                headers: new Headers(this.requestHeader),\n                credentials: this.withCredentials ? \"include\" : \"same-origin\"\n            });\n            fetch(s).then((e)=>{\n                if (200 === e.status || 0 === e.status) {\n                    0 === e.status && console.warn(\"THREE.FileLoader: HTTP Status 0 received.\");\n                    const n = oc[t], i = e.body.getReader(), r = e.headers.get(\"Content-Length\"), s = r ? parseInt(r) : 0, a = 0 !== s;\n                    let o = 0;\n                    return new ReadableStream({\n                        start (t) {\n                            !function e() {\n                                i.read().then(({ done: i, value: r })=>{\n                                    if (i) t.close();\n                                    else {\n                                        o += r.byteLength;\n                                        const i = new ProgressEvent(\"progress\", {\n                                            lengthComputable: a,\n                                            loaded: o,\n                                            total: s\n                                        });\n                                        for(let t = 0, e = n.length; t < e; t++){\n                                            const e = n[t];\n                                            e.onProgress && e.onProgress(i);\n                                        }\n                                        t.enqueue(r), e();\n                                    }\n                                });\n                            }();\n                        }\n                    });\n                }\n                throw Error(`fetch for \"${e.url}\" responded with ${e.status}: ${e.statusText}`);\n            }).then((t)=>{\n                const e = new Response(t);\n                switch(this.responseType){\n                    case \"arraybuffer\":\n                        return e.arrayBuffer();\n                    case \"blob\":\n                        return e.blob();\n                    case \"document\":\n                        return e.text().then((t)=>(new DOMParser).parseFromString(t, this.mimeType));\n                    case \"json\":\n                        return e.json();\n                    default:\n                        return e.text();\n                }\n            }).then((e)=>{\n                ic.add(t, e);\n                const n = oc[t];\n                delete oc[t];\n                for(let t = 0, i = n.length; t < i; t++){\n                    const i = n[t];\n                    i.onLoad && i.onLoad(e);\n                }\n                this.manager.itemEnd(t);\n            }).catch((e)=>{\n                const n = oc[t];\n                delete oc[t];\n                for(let t = 0, i = n.length; t < i; t++){\n                    const i = n[t];\n                    i.onError && i.onError(e);\n                }\n                this.manager.itemError(t), this.manager.itemEnd(t);\n            }), this.manager.itemStart(t);\n        }\n        setResponseType(t) {\n            return this.responseType = t, this;\n        }\n        setMimeType(t) {\n            return this.mimeType = t, this;\n        }\n    }\n    class cc extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            void 0 !== this.path && (t = this.path + t), t = this.manager.resolveURL(t);\n            const r = this, s = ic.get(t);\n            if (void 0 !== s) return r.manager.itemStart(t), setTimeout(function() {\n                e && e(s), r.manager.itemEnd(t);\n            }, 0), s;\n            const a = wt(\"img\");\n            function o() {\n                c(), ic.add(t, this), e && e(this), r.manager.itemEnd(t);\n            }\n            function l(e) {\n                c(), i && i(e), r.manager.itemError(t), r.manager.itemEnd(t);\n            }\n            function c() {\n                a.removeEventListener(\"load\", o, !1), a.removeEventListener(\"error\", l, !1);\n            }\n            return a.addEventListener(\"load\", o, !1), a.addEventListener(\"error\", l, !1), \"data:\" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin), r.manager.itemStart(t), a.src = t, a;\n        }\n    }\n    class hc extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = new ei, s = new cc(this.manager);\n            s.setCrossOrigin(this.crossOrigin), s.setPath(this.path);\n            let a = 0;\n            function o(n) {\n                s.load(t[n], function(t) {\n                    r.images[n] = t, a++, 6 === a && (r.needsUpdate = !0, e && e(r));\n                }, void 0, i);\n            }\n            for(let e = 0; e < t.length; ++e)o(e);\n            return r;\n        }\n    }\n    class uc extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = this, s = new Pa, a = new lc(this.manager);\n            return a.setResponseType(\"arraybuffer\"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(r.withCredentials), a.load(t, function(t) {\n                const n = r.parse(t);\n                n && (void 0 !== n.image ? s.image = n.image : void 0 !== n.data && (s.image.width = n.width, s.image.height = n.height, s.image.data = n.data), s.wrapS = void 0 !== n.wrapS ? n.wrapS : u, s.wrapT = void 0 !== n.wrapT ? n.wrapT : u, s.magFilter = void 0 !== n.magFilter ? n.magFilter : g, s.minFilter = void 0 !== n.minFilter ? n.minFilter : g, s.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, void 0 !== n.encoding && (s.encoding = n.encoding), void 0 !== n.flipY && (s.flipY = n.flipY), void 0 !== n.format && (s.format = n.format), void 0 !== n.type && (s.type = n.type), void 0 !== n.mipmaps && (s.mipmaps = n.mipmaps, s.minFilter = y), 1 === n.mipmapCount && (s.minFilter = g), void 0 !== n.generateMipmaps && (s.generateMipmaps = n.generateMipmaps), s.needsUpdate = !0, e && e(s, n));\n            }, n, i), s;\n        }\n    }\n    class dc extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = new Lt, s = new cc(this.manager);\n            return s.setCrossOrigin(this.crossOrigin), s.setPath(this.path), s.load(t, function(t) {\n                r.image = t, r.needsUpdate = !0, void 0 !== e && e(r);\n            }, n, i), r;\n        }\n    }\n    class pc extends Fe {\n        constructor(t, e = 1){\n            super(), this.type = \"Light\", this.color = new rn(t), this.intensity = e;\n        }\n        dispose() {}\n        copy(t) {\n            return super.copy(t), this.color.copy(t.color), this.intensity = t.intensity, this;\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            return e.object.color = this.color.getHex(), e.object.intensity = this.intensity, void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (e.object.distance = this.distance), void 0 !== this.angle && (e.object.angle = this.angle), void 0 !== this.decay && (e.object.decay = this.decay), void 0 !== this.penumbra && (e.object.penumbra = this.penumbra), void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()), e;\n        }\n    }\n    pc.prototype.isLight = !0;\n    class mc extends pc {\n        constructor(t, e, n){\n            super(t, n), this.type = \"HemisphereLight\", this.position.copy(Fe.DefaultUp), this.updateMatrix(), this.groundColor = new rn(e);\n        }\n        copy(t) {\n            return pc.prototype.copy.call(this, t), this.groundColor.copy(t.groundColor), this;\n        }\n    }\n    mc.prototype.isHemisphereLight = !0;\n    const fc = new de, gc = new zt, vc = new zt;\n    class yc {\n        constructor(t){\n            this.camera = t, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new yt(512, 512), this.map = null, this.mapPass = null, this.matrix = new de, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new ci, this._frameExtents = new yt(1, 1), this._viewportCount = 1, this._viewports = [\n                new Ct(0, 0, 1, 1)\n            ];\n        }\n        getViewportCount() {\n            return this._viewportCount;\n        }\n        getFrustum() {\n            return this._frustum;\n        }\n        updateMatrices(t) {\n            const e = this.camera, n = this.matrix;\n            gc.setFromMatrixPosition(t.matrixWorld), e.position.copy(gc), vc.setFromMatrixPosition(t.target.matrixWorld), e.lookAt(vc), e.updateMatrixWorld(), fc.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse), this._frustum.setFromProjectionMatrix(fc), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(e.projectionMatrix), n.multiply(e.matrixWorldInverse);\n        }\n        getViewport(t) {\n            return this._viewports[t];\n        }\n        getFrameExtents() {\n            return this._frameExtents;\n        }\n        dispose() {\n            this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();\n        }\n        copy(t) {\n            return this.camera = t.camera.clone(), this.bias = t.bias, this.radius = t.radius, this.mapSize.copy(t.mapSize), this;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        toJSON() {\n            const t = {};\n            return 0 !== this.bias && (t.bias = this.bias), 0 !== this.normalBias && (t.normalBias = this.normalBias), 1 !== this.radius && (t.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()), t.camera = this.camera.toJSON(!1).object, delete t.camera.matrix, t;\n        }\n    }\n    class xc extends yc {\n        constructor(){\n            super(new Kn(50, 1, .5, 500)), this.focus = 1;\n        }\n        updateMatrices(t) {\n            const e = this.camera, n = 2 * ot * t.angle * this.focus, i = this.mapSize.width / this.mapSize.height, r = t.distance || e.far;\n            n === e.fov && i === e.aspect && r === e.far || (e.fov = n, e.aspect = i, e.far = r, e.updateProjectionMatrix()), super.updateMatrices(t);\n        }\n        copy(t) {\n            return super.copy(t), this.focus = t.focus, this;\n        }\n    }\n    xc.prototype.isSpotLightShadow = !0;\n    class _c extends pc {\n        constructor(t, e, n = 0, i = Math.PI / 3, r = 0, s = 1){\n            super(t, e), this.type = \"SpotLight\", this.position.copy(Fe.DefaultUp), this.updateMatrix(), this.target = new Fe, this.distance = n, this.angle = i, this.penumbra = r, this.decay = s, this.shadow = new xc;\n        }\n        get power() {\n            return this.intensity * Math.PI;\n        }\n        set power(t) {\n            this.intensity = t / Math.PI;\n        }\n        dispose() {\n            this.shadow.dispose();\n        }\n        copy(t) {\n            return super.copy(t), this.distance = t.distance, this.angle = t.angle, this.penumbra = t.penumbra, this.decay = t.decay, this.target = t.target.clone(), this.shadow = t.shadow.clone(), this;\n        }\n    }\n    _c.prototype.isSpotLight = !0;\n    const Mc = new de, bc = new zt, wc = new zt;\n    class Sc extends yc {\n        constructor(){\n            super(new Kn(90, 1, .5, 500)), this._frameExtents = new yt(4, 2), this._viewportCount = 6, this._viewports = [\n                new Ct(2, 1, 1, 1),\n                new Ct(0, 1, 1, 1),\n                new Ct(3, 1, 1, 1),\n                new Ct(1, 1, 1, 1),\n                new Ct(3, 0, 1, 1),\n                new Ct(1, 0, 1, 1)\n            ], this._cubeDirections = [\n                new zt(1, 0, 0),\n                new zt(-1, 0, 0),\n                new zt(0, 0, 1),\n                new zt(0, 0, -1),\n                new zt(0, 1, 0),\n                new zt(0, -1, 0)\n            ], this._cubeUps = [\n                new zt(0, 1, 0),\n                new zt(0, 1, 0),\n                new zt(0, 1, 0),\n                new zt(0, 1, 0),\n                new zt(0, 0, 1),\n                new zt(0, 0, -1)\n            ];\n        }\n        updateMatrices(t, e = 0) {\n            const n = this.camera, i = this.matrix, r = t.distance || n.far;\n            r !== n.far && (n.far = r, n.updateProjectionMatrix()), bc.setFromMatrixPosition(t.matrixWorld), n.position.copy(bc), wc.copy(n.position), wc.add(this._cubeDirections[e]), n.up.copy(this._cubeUps[e]), n.lookAt(wc), n.updateMatrixWorld(), i.makeTranslation(-bc.x, -bc.y, -bc.z), Mc.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(Mc);\n        }\n    }\n    Sc.prototype.isPointLightShadow = !0;\n    class Tc extends pc {\n        constructor(t, e, n = 0, i = 1){\n            super(t, e), this.type = \"PointLight\", this.distance = n, this.decay = i, this.shadow = new Sc;\n        }\n        get power() {\n            return 4 * this.intensity * Math.PI;\n        }\n        set power(t) {\n            this.intensity = t / (4 * Math.PI);\n        }\n        dispose() {\n            this.shadow.dispose();\n        }\n        copy(t) {\n            return super.copy(t), this.distance = t.distance, this.decay = t.decay, this.shadow = t.shadow.clone(), this;\n        }\n    }\n    Tc.prototype.isPointLight = !0;\n    class Ec extends yc {\n        constructor(){\n            super(new bi(-5, 5, 5, -5, .5, 500));\n        }\n    }\n    Ec.prototype.isDirectionalLightShadow = !0;\n    class Ac extends pc {\n        constructor(t, e){\n            super(t, e), this.type = \"DirectionalLight\", this.position.copy(Fe.DefaultUp), this.updateMatrix(), this.target = new Fe, this.shadow = new Ec;\n        }\n        dispose() {\n            this.shadow.dispose();\n        }\n        copy(t) {\n            return super.copy(t), this.target = t.target.clone(), this.shadow = t.shadow.clone(), this;\n        }\n    }\n    Ac.prototype.isDirectionalLight = !0;\n    class Lc extends pc {\n        constructor(t, e){\n            super(t, e), this.type = \"AmbientLight\";\n        }\n    }\n    Lc.prototype.isAmbientLight = !0;\n    class Rc extends pc {\n        constructor(t, e, n = 10, i = 10){\n            super(t, e), this.type = \"RectAreaLight\", this.width = n, this.height = i;\n        }\n        get power() {\n            return this.intensity * this.width * this.height * Math.PI;\n        }\n        set power(t) {\n            this.intensity = t / (this.width * this.height * Math.PI);\n        }\n        copy(t) {\n            return super.copy(t), this.width = t.width, this.height = t.height, this;\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            return e.object.width = this.width, e.object.height = this.height, e;\n        }\n    }\n    Rc.prototype.isRectAreaLight = !0;\n    class Cc {\n        constructor(){\n            this.coefficients = [];\n            for(let t = 0; t < 9; t++)this.coefficients.push(new zt);\n        }\n        set(t) {\n            for(let e = 0; e < 9; e++)this.coefficients[e].copy(t[e]);\n            return this;\n        }\n        zero() {\n            for(let t = 0; t < 9; t++)this.coefficients[t].set(0, 0, 0);\n            return this;\n        }\n        getAt(t, e) {\n            const n = t.x, i = t.y, r = t.z, s = this.coefficients;\n            return e.copy(s[0]).multiplyScalar(.282095), e.addScaledVector(s[1], .488603 * i), e.addScaledVector(s[2], .488603 * r), e.addScaledVector(s[3], .488603 * n), e.addScaledVector(s[4], n * i * 1.092548), e.addScaledVector(s[5], i * r * 1.092548), e.addScaledVector(s[6], .315392 * (3 * r * r - 1)), e.addScaledVector(s[7], n * r * 1.092548), e.addScaledVector(s[8], .546274 * (n * n - i * i)), e;\n        }\n        getIrradianceAt(t, e) {\n            const n = t.x, i = t.y, r = t.z, s = this.coefficients;\n            return e.copy(s[0]).multiplyScalar(.886227), e.addScaledVector(s[1], 1.023328 * i), e.addScaledVector(s[2], 1.023328 * r), e.addScaledVector(s[3], 1.023328 * n), e.addScaledVector(s[4], .858086 * n * i), e.addScaledVector(s[5], .858086 * i * r), e.addScaledVector(s[6], .743125 * r * r - .247708), e.addScaledVector(s[7], .858086 * n * r), e.addScaledVector(s[8], .429043 * (n * n - i * i)), e;\n        }\n        add(t) {\n            for(let e = 0; e < 9; e++)this.coefficients[e].add(t.coefficients[e]);\n            return this;\n        }\n        addScaledSH(t, e) {\n            for(let n = 0; n < 9; n++)this.coefficients[n].addScaledVector(t.coefficients[n], e);\n            return this;\n        }\n        scale(t) {\n            for(let e = 0; e < 9; e++)this.coefficients[e].multiplyScalar(t);\n            return this;\n        }\n        lerp(t, e) {\n            for(let n = 0; n < 9; n++)this.coefficients[n].lerp(t.coefficients[n], e);\n            return this;\n        }\n        equals(t) {\n            for(let e = 0; e < 9; e++)if (!this.coefficients[e].equals(t.coefficients[e])) return !1;\n            return !0;\n        }\n        copy(t) {\n            return this.set(t.coefficients);\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        fromArray(t, e = 0) {\n            const n = this.coefficients;\n            for(let i = 0; i < 9; i++)n[i].fromArray(t, e + 3 * i);\n            return this;\n        }\n        toArray(t = [], e = 0) {\n            const n = this.coefficients;\n            for(let i = 0; i < 9; i++)n[i].toArray(t, e + 3 * i);\n            return t;\n        }\n        static getBasisAt(t, e) {\n            const n = t.x, i = t.y, r = t.z;\n            e[0] = .282095, e[1] = .488603 * i, e[2] = .488603 * r, e[3] = .488603 * n, e[4] = 1.092548 * n * i, e[5] = 1.092548 * i * r, e[6] = .315392 * (3 * r * r - 1), e[7] = 1.092548 * n * r, e[8] = .546274 * (n * n - i * i);\n        }\n    }\n    Cc.prototype.isSphericalHarmonics3 = !0;\n    class Pc extends pc {\n        constructor(t = new Cc, e = 1){\n            super(void 0, e), this.sh = t;\n        }\n        copy(t) {\n            return super.copy(t), this.sh.copy(t.sh), this;\n        }\n        fromJSON(t) {\n            return this.intensity = t.intensity, this.sh.fromArray(t.sh), this;\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            return e.object.sh = this.sh.toArray(), e;\n        }\n    }\n    Pc.prototype.isLightProbe = !0;\n    class Ic extends ac {\n        constructor(t){\n            super(t), this.textures = {};\n        }\n        load(t, e, n, i) {\n            const r = this, s = new lc(r.manager);\n            s.setPath(r.path), s.setRequestHeader(r.requestHeader), s.setWithCredentials(r.withCredentials), s.load(t, function(n) {\n                try {\n                    e(r.parse(JSON.parse(n)));\n                } catch (e) {\n                    i ? i(e) : console.error(e), r.manager.itemError(t);\n                }\n            }, n, i);\n        }\n        parse(t) {\n            const e = this.textures;\n            function n(t) {\n                return void 0 === e[t] && console.warn(\"THREE.MaterialLoader: Undefined texture\", t), e[t];\n            }\n            const i = new Gl[t.type];\n            if (void 0 !== t.uuid && (i.uuid = t.uuid), void 0 !== t.name && (i.name = t.name), void 0 !== t.color && void 0 !== i.color && i.color.setHex(t.color), void 0 !== t.roughness && (i.roughness = t.roughness), void 0 !== t.metalness && (i.metalness = t.metalness), void 0 !== t.sheen && (i.sheen = t.sheen), void 0 !== t.sheenColor && (i.sheenColor = (new rn).setHex(t.sheenColor)), void 0 !== t.sheenRoughness && (i.sheenRoughness = t.sheenRoughness), void 0 !== t.emissive && void 0 !== i.emissive && i.emissive.setHex(t.emissive), void 0 !== t.specular && void 0 !== i.specular && i.specular.setHex(t.specular), void 0 !== t.specularIntensity && (i.specularIntensity = t.specularIntensity), void 0 !== t.specularColor && void 0 !== i.specularColor && i.specularColor.setHex(t.specularColor), void 0 !== t.shininess && (i.shininess = t.shininess), void 0 !== t.clearcoat && (i.clearcoat = t.clearcoat), void 0 !== t.clearcoatRoughness && (i.clearcoatRoughness = t.clearcoatRoughness), void 0 !== t.transmission && (i.transmission = t.transmission), void 0 !== t.thickness && (i.thickness = t.thickness), void 0 !== t.attenuationDistance && (i.attenuationDistance = t.attenuationDistance), void 0 !== t.attenuationColor && void 0 !== i.attenuationColor && i.attenuationColor.setHex(t.attenuationColor), void 0 !== t.fog && (i.fog = t.fog), void 0 !== t.flatShading && (i.flatShading = t.flatShading), void 0 !== t.blending && (i.blending = t.blending), void 0 !== t.combine && (i.combine = t.combine), void 0 !== t.side && (i.side = t.side), void 0 !== t.shadowSide && (i.shadowSide = t.shadowSide), void 0 !== t.opacity && (i.opacity = t.opacity), void 0 !== t.format && (i.format = t.format), void 0 !== t.transparent && (i.transparent = t.transparent), void 0 !== t.alphaTest && (i.alphaTest = t.alphaTest), void 0 !== t.depthTest && (i.depthTest = t.depthTest), void 0 !== t.depthWrite && (i.depthWrite = t.depthWrite), void 0 !== t.colorWrite && (i.colorWrite = t.colorWrite), void 0 !== t.stencilWrite && (i.stencilWrite = t.stencilWrite), void 0 !== t.stencilWriteMask && (i.stencilWriteMask = t.stencilWriteMask), void 0 !== t.stencilFunc && (i.stencilFunc = t.stencilFunc), void 0 !== t.stencilRef && (i.stencilRef = t.stencilRef), void 0 !== t.stencilFuncMask && (i.stencilFuncMask = t.stencilFuncMask), void 0 !== t.stencilFail && (i.stencilFail = t.stencilFail), void 0 !== t.stencilZFail && (i.stencilZFail = t.stencilZFail), void 0 !== t.stencilZPass && (i.stencilZPass = t.stencilZPass), void 0 !== t.wireframe && (i.wireframe = t.wireframe), void 0 !== t.wireframeLinewidth && (i.wireframeLinewidth = t.wireframeLinewidth), void 0 !== t.wireframeLinecap && (i.wireframeLinecap = t.wireframeLinecap), void 0 !== t.wireframeLinejoin && (i.wireframeLinejoin = t.wireframeLinejoin), void 0 !== t.rotation && (i.rotation = t.rotation), 1 !== t.linewidth && (i.linewidth = t.linewidth), void 0 !== t.dashSize && (i.dashSize = t.dashSize), void 0 !== t.gapSize && (i.gapSize = t.gapSize), void 0 !== t.scale && (i.scale = t.scale), void 0 !== t.polygonOffset && (i.polygonOffset = t.polygonOffset), void 0 !== t.polygonOffsetFactor && (i.polygonOffsetFactor = t.polygonOffsetFactor), void 0 !== t.polygonOffsetUnits && (i.polygonOffsetUnits = t.polygonOffsetUnits), void 0 !== t.dithering && (i.dithering = t.dithering), void 0 !== t.alphaToCoverage && (i.alphaToCoverage = t.alphaToCoverage), void 0 !== t.premultipliedAlpha && (i.premultipliedAlpha = t.premultipliedAlpha), void 0 !== t.visible && (i.visible = t.visible), void 0 !== t.toneMapped && (i.toneMapped = t.toneMapped), void 0 !== t.userData && (i.userData = t.userData), void 0 !== t.vertexColors && (\"number\" == typeof t.vertexColors ? i.vertexColors = t.vertexColors > 0 : i.vertexColors = t.vertexColors), void 0 !== t.uniforms) for(const e in t.uniforms){\n                const r = t.uniforms[e];\n                switch(i.uniforms[e] = {}, r.type){\n                    case \"t\":\n                        i.uniforms[e].value = n(r.value);\n                        break;\n                    case \"c\":\n                        i.uniforms[e].value = (new rn).setHex(r.value);\n                        break;\n                    case \"v2\":\n                        i.uniforms[e].value = (new yt).fromArray(r.value);\n                        break;\n                    case \"v3\":\n                        i.uniforms[e].value = (new zt).fromArray(r.value);\n                        break;\n                    case \"v4\":\n                        i.uniforms[e].value = (new Ct).fromArray(r.value);\n                        break;\n                    case \"m3\":\n                        i.uniforms[e].value = (new xt).fromArray(r.value);\n                        break;\n                    case \"m4\":\n                        i.uniforms[e].value = (new de).fromArray(r.value);\n                        break;\n                    default:\n                        i.uniforms[e].value = r.value;\n                }\n            }\n            if (void 0 !== t.defines && (i.defines = t.defines), void 0 !== t.vertexShader && (i.vertexShader = t.vertexShader), void 0 !== t.fragmentShader && (i.fragmentShader = t.fragmentShader), void 0 !== t.extensions) for(const e in t.extensions)i.extensions[e] = t.extensions[e];\n            if (void 0 !== t.shading && (i.flatShading = 1 === t.shading), void 0 !== t.size && (i.size = t.size), void 0 !== t.sizeAttenuation && (i.sizeAttenuation = t.sizeAttenuation), void 0 !== t.map && (i.map = n(t.map)), void 0 !== t.matcap && (i.matcap = n(t.matcap)), void 0 !== t.alphaMap && (i.alphaMap = n(t.alphaMap)), void 0 !== t.bumpMap && (i.bumpMap = n(t.bumpMap)), void 0 !== t.bumpScale && (i.bumpScale = t.bumpScale), void 0 !== t.normalMap && (i.normalMap = n(t.normalMap)), void 0 !== t.normalMapType && (i.normalMapType = t.normalMapType), void 0 !== t.normalScale) {\n                let e = t.normalScale;\n                !1 === Array.isArray(e) && (e = [\n                    e,\n                    e\n                ]), i.normalScale = (new yt).fromArray(e);\n            }\n            return void 0 !== t.displacementMap && (i.displacementMap = n(t.displacementMap)), void 0 !== t.displacementScale && (i.displacementScale = t.displacementScale), void 0 !== t.displacementBias && (i.displacementBias = t.displacementBias), void 0 !== t.roughnessMap && (i.roughnessMap = n(t.roughnessMap)), void 0 !== t.metalnessMap && (i.metalnessMap = n(t.metalnessMap)), void 0 !== t.emissiveMap && (i.emissiveMap = n(t.emissiveMap)), void 0 !== t.emissiveIntensity && (i.emissiveIntensity = t.emissiveIntensity), void 0 !== t.specularMap && (i.specularMap = n(t.specularMap)), void 0 !== t.specularIntensityMap && (i.specularIntensityMap = n(t.specularIntensityMap)), void 0 !== t.specularColorMap && (i.specularColorMap = n(t.specularColorMap)), void 0 !== t.envMap && (i.envMap = n(t.envMap)), void 0 !== t.envMapIntensity && (i.envMapIntensity = t.envMapIntensity), void 0 !== t.reflectivity && (i.reflectivity = t.reflectivity), void 0 !== t.refractionRatio && (i.refractionRatio = t.refractionRatio), void 0 !== t.lightMap && (i.lightMap = n(t.lightMap)), void 0 !== t.lightMapIntensity && (i.lightMapIntensity = t.lightMapIntensity), void 0 !== t.aoMap && (i.aoMap = n(t.aoMap)), void 0 !== t.aoMapIntensity && (i.aoMapIntensity = t.aoMapIntensity), void 0 !== t.gradientMap && (i.gradientMap = n(t.gradientMap)), void 0 !== t.clearcoatMap && (i.clearcoatMap = n(t.clearcoatMap)), void 0 !== t.clearcoatRoughnessMap && (i.clearcoatRoughnessMap = n(t.clearcoatRoughnessMap)), void 0 !== t.clearcoatNormalMap && (i.clearcoatNormalMap = n(t.clearcoatNormalMap)), void 0 !== t.clearcoatNormalScale && (i.clearcoatNormalScale = (new yt).fromArray(t.clearcoatNormalScale)), void 0 !== t.transmissionMap && (i.transmissionMap = n(t.transmissionMap)), void 0 !== t.thicknessMap && (i.thicknessMap = n(t.thicknessMap)), void 0 !== t.sheenColorMap && (i.sheenColorMap = n(t.sheenColorMap)), void 0 !== t.sheenRoughnessMap && (i.sheenRoughnessMap = n(t.sheenRoughnessMap)), i;\n        }\n        setTextures(t) {\n            return this.textures = t, this;\n        }\n    }\n    class Dc {\n        static decodeText(t) {\n            if (\"undefined\" != typeof TextDecoder) return (new TextDecoder).decode(t);\n            let e = \"\";\n            for(let n = 0, i = t.length; n < i; n++)e += String.fromCharCode(t[n]);\n            try {\n                return decodeURIComponent(escape(e));\n            } catch (t) {\n                return e;\n            }\n        }\n        static extractUrlBase(t) {\n            const e = t.lastIndexOf(\"/\");\n            return -1 === e ? \"./\" : t.substr(0, e + 1);\n        }\n        static resolveURL(t, e) {\n            return \"string\" != typeof t || \"\" === t ? \"\" : (/^https?:\\/\\//i.test(e) && /^\\//.test(t) && (e = e.replace(/(^https?:\\/\\/[^\\/]+).*/i, \"$1\")), /^(https?:)?\\/\\//i.test(t) || /^data:.*,.*$/i.test(t) || /^blob:.*$/i.test(t) ? t : e + t);\n        }\n    }\n    class Nc extends En {\n        constructor(){\n            super(), this.type = \"InstancedBufferGeometry\", this.instanceCount = 1 / 0;\n        }\n        copy(t) {\n            return super.copy(t), this.instanceCount = t.instanceCount, this;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        toJSON() {\n            const t = super.toJSON(this);\n            return t.instanceCount = this.instanceCount, t.isInstancedBufferGeometry = !0, t;\n        }\n    }\n    Nc.prototype.isInstancedBufferGeometry = !0;\n    class zc extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = this, s = new lc(r.manager);\n            s.setPath(r.path), s.setRequestHeader(r.requestHeader), s.setWithCredentials(r.withCredentials), s.load(t, function(n) {\n                try {\n                    e(r.parse(JSON.parse(n)));\n                } catch (e) {\n                    i ? i(e) : console.error(e), r.manager.itemError(t);\n                }\n            }, n, i);\n        }\n        parse(t) {\n            const e = {}, n = {};\n            function i(t, i) {\n                if (void 0 !== e[i]) return e[i];\n                const r = t.interleavedBuffers[i], s = function(t, e) {\n                    if (void 0 !== n[e]) return n[e];\n                    const i = t.arrayBuffers[e], r = new Uint32Array(i).buffer;\n                    return n[e] = r, r;\n                }(t, r.buffer), a = bt(r.type, s), o = new na(a, r.stride);\n                return o.uuid = r.uuid, e[i] = o, o;\n            }\n            const r = t.isInstancedBufferGeometry ? new Nc : new En, s = t.data.index;\n            if (void 0 !== s) {\n                const t = bt(s.type, s.array);\n                r.setIndex(new ln(t, 1));\n            }\n            const a = t.data.attributes;\n            for(const e in a){\n                const n = a[e];\n                let s;\n                if (n.isInterleavedBufferAttribute) {\n                    const e = i(t.data, n.data);\n                    s = new ra(e, n.itemSize, n.offset, n.normalized);\n                } else {\n                    const t = bt(n.type, n.array);\n                    s = new (n.isInstancedBufferAttribute ? za : ln)(t, n.itemSize, n.normalized);\n                }\n                void 0 !== n.name && (s.name = n.name), void 0 !== n.usage && s.setUsage(n.usage), void 0 !== n.updateRange && (s.updateRange.offset = n.updateRange.offset, s.updateRange.count = n.updateRange.count), r.setAttribute(e, s);\n            }\n            const o = t.data.morphAttributes;\n            if (o) for(const e in o){\n                const n = o[e], s = [];\n                for(let e = 0, r = n.length; e < r; e++){\n                    const r = n[e];\n                    let a;\n                    if (r.isInterleavedBufferAttribute) {\n                        const e = i(t.data, r.data);\n                        a = new ra(e, r.itemSize, r.offset, r.normalized);\n                    } else {\n                        const t = bt(r.type, r.array);\n                        a = new ln(t, r.itemSize, r.normalized);\n                    }\n                    void 0 !== r.name && (a.name = r.name), s.push(a);\n                }\n                r.morphAttributes[e] = s;\n            }\n            t.data.morphTargetsRelative && (r.morphTargetsRelative = !0);\n            const l = t.data.groups || t.data.drawcalls || t.data.offsets;\n            if (void 0 !== l) for(let t = 0, e = l.length; t !== e; ++t){\n                const e = l[t];\n                r.addGroup(e.start, e.count, e.materialIndex);\n            }\n            const c = t.data.boundingSphere;\n            if (void 0 !== c) {\n                const t = new zt;\n                void 0 !== c.center && t.fromArray(c.center), r.boundingSphere = new ie(t, c.radius);\n            }\n            return t.name && (r.name = t.name), t.userData && (r.userData = t.userData), r;\n        }\n    }\n    const Bc = {\n        UVMapping: i,\n        CubeReflectionMapping: r,\n        CubeRefractionMapping: s,\n        EquirectangularReflectionMapping: a,\n        EquirectangularRefractionMapping: o,\n        CubeUVReflectionMapping: l,\n        CubeUVRefractionMapping: c\n    }, Fc = {\n        RepeatWrapping: h,\n        ClampToEdgeWrapping: u,\n        MirroredRepeatWrapping: d\n    }, Oc = {\n        NearestFilter: p,\n        NearestMipmapNearestFilter: m,\n        NearestMipmapLinearFilter: f,\n        LinearFilter: g,\n        LinearMipmapNearestFilter: v,\n        LinearMipmapLinearFilter: y\n    };\n    class Uc extends ac {\n        constructor(t){\n            super(t), \"undefined\" == typeof createImageBitmap && console.warn(\"THREE.ImageBitmapLoader: createImageBitmap() not supported.\"), \"undefined\" == typeof fetch && console.warn(\"THREE.ImageBitmapLoader: fetch() not supported.\"), this.options = {\n                premultiplyAlpha: \"none\"\n            };\n        }\n        setOptions(t) {\n            return this.options = t, this;\n        }\n        load(t, e, n, i) {\n            void 0 === t && (t = \"\"), void 0 !== this.path && (t = this.path + t), t = this.manager.resolveURL(t);\n            const r = this, s = ic.get(t);\n            if (void 0 !== s) return r.manager.itemStart(t), setTimeout(function() {\n                e && e(s), r.manager.itemEnd(t);\n            }, 0), s;\n            const a = {};\n            a.credentials = \"anonymous\" === this.crossOrigin ? \"same-origin\" : \"include\", a.headers = this.requestHeader, fetch(t, a).then(function(t) {\n                return t.blob();\n            }).then(function(t) {\n                return createImageBitmap(t, Object.assign(r.options, {\n                    colorSpaceConversion: \"none\"\n                }));\n            }).then(function(n) {\n                ic.add(t, n), e && e(n), r.manager.itemEnd(t);\n            }).catch(function(e) {\n                i && i(e), r.manager.itemError(t), r.manager.itemEnd(t);\n            }), r.manager.itemStart(t);\n        }\n    }\n    let Hc;\n    Uc.prototype.isImageBitmapLoader = !0;\n    const Gc = {\n        getContext: function() {\n            return void 0 === Hc && (Hc = new (window.AudioContext || window.webkitAudioContext)), Hc;\n        },\n        setContext: function(t) {\n            Hc = t;\n        }\n    };\n    class kc extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = this, s = new lc(this.manager);\n            s.setResponseType(\"arraybuffer\"), s.setPath(this.path), s.setRequestHeader(this.requestHeader), s.setWithCredentials(this.withCredentials), s.load(t, function(n) {\n                try {\n                    const t = n.slice(0);\n                    Gc.getContext().decodeAudioData(t, function(t) {\n                        e(t);\n                    });\n                } catch (e) {\n                    i ? i(e) : console.error(e), r.manager.itemError(t);\n                }\n            }, n, i);\n        }\n    }\n    class Vc extends Pc {\n        constructor(t, e, n = 1){\n            super(void 0, n);\n            const i = (new rn).set(t), r = (new rn).set(e), s = new zt(i.r, i.g, i.b), a = new zt(r.r, r.g, r.b), o = Math.sqrt(Math.PI), l = o * Math.sqrt(.75);\n            this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o), this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l);\n        }\n    }\n    Vc.prototype.isHemisphereLightProbe = !0;\n    class Wc extends Pc {\n        constructor(t, e = 1){\n            super(void 0, e);\n            const n = (new rn).set(t);\n            this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n        }\n    }\n    Wc.prototype.isAmbientLightProbe = !0;\n    const jc = new de, qc = new de;\n    class Xc {\n        constructor(t = !0){\n            this.autoStart = t, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;\n        }\n        start() {\n            this.startTime = Yc(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;\n        }\n        stop() {\n            this.getElapsedTime(), this.running = !1, this.autoStart = !1;\n        }\n        getElapsedTime() {\n            return this.getDelta(), this.elapsedTime;\n        }\n        getDelta() {\n            let t = 0;\n            if (this.autoStart && !this.running) return this.start(), 0;\n            if (this.running) {\n                const e = Yc();\n                t = (e - this.oldTime) / 1e3, this.oldTime = e, this.elapsedTime += t;\n            }\n            return t;\n        }\n    }\n    function Yc() {\n        return (\"undefined\" == typeof performance ? Date : performance).now();\n    }\n    const Jc = new zt, Zc = new Nt, Qc = new zt, Kc = new zt;\n    class $c extends Fe {\n        constructor(t){\n            super(), this.type = \"Audio\", this.listener = t, this.context = t.context, this.gain = this.context.createGain(), this.gain.connect(t.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = \"empty\", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];\n        }\n        getOutput() {\n            return this.gain;\n        }\n        setNodeSource(t) {\n            return this.hasPlaybackControl = !1, this.sourceType = \"audioNode\", this.source = t, this.connect(), this;\n        }\n        setMediaElementSource(t) {\n            return this.hasPlaybackControl = !1, this.sourceType = \"mediaNode\", this.source = this.context.createMediaElementSource(t), this.connect(), this;\n        }\n        setMediaStreamSource(t) {\n            return this.hasPlaybackControl = !1, this.sourceType = \"mediaStreamNode\", this.source = this.context.createMediaStreamSource(t), this.connect(), this;\n        }\n        setBuffer(t) {\n            return this.buffer = t, this.sourceType = \"buffer\", this.autoplay && this.play(), this;\n        }\n        play(t = 0) {\n            if (!0 === this.isPlaying) return void console.warn(\"THREE.Audio: Audio is already playing.\");\n            if (!1 === this.hasPlaybackControl) return void console.warn(\"THREE.Audio: this Audio has no playback control.\");\n            this._startedAt = this.context.currentTime + t;\n            const e = this.context.createBufferSource();\n            return e.buffer = this.buffer, e.loop = this.loop, e.loopStart = this.loopStart, e.loopEnd = this.loopEnd, e.onended = this.onEnded.bind(this), e.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = e, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();\n        }\n        pause() {\n            if (!1 !== this.hasPlaybackControl) return !0 === this.isPlaying && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, !0 === this.loop && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;\n            console.warn(\"THREE.Audio: this Audio has no playback control.\");\n        }\n        stop() {\n            if (!1 !== this.hasPlaybackControl) return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;\n            console.warn(\"THREE.Audio: this Audio has no playback control.\");\n        }\n        connect() {\n            if (this.filters.length > 0) {\n                this.source.connect(this.filters[0]);\n                for(let t = 1, e = this.filters.length; t < e; t++)this.filters[t - 1].connect(this.filters[t]);\n                this.filters[this.filters.length - 1].connect(this.getOutput());\n            } else this.source.connect(this.getOutput());\n            return this._connected = !0, this;\n        }\n        disconnect() {\n            if (this.filters.length > 0) {\n                this.source.disconnect(this.filters[0]);\n                for(let t = 1, e = this.filters.length; t < e; t++)this.filters[t - 1].disconnect(this.filters[t]);\n                this.filters[this.filters.length - 1].disconnect(this.getOutput());\n            } else this.source.disconnect(this.getOutput());\n            return this._connected = !1, this;\n        }\n        getFilters() {\n            return this.filters;\n        }\n        setFilters(t) {\n            return t || (t = []), !0 === this._connected ? (this.disconnect(), this.filters = t.slice(), this.connect()) : this.filters = t.slice(), this;\n        }\n        setDetune(t) {\n            if (this.detune = t, void 0 !== this.source.detune) return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;\n        }\n        getDetune() {\n            return this.detune;\n        }\n        getFilter() {\n            return this.getFilters()[0];\n        }\n        setFilter(t) {\n            return this.setFilters(t ? [\n                t\n            ] : []);\n        }\n        setPlaybackRate(t) {\n            if (!1 !== this.hasPlaybackControl) return this.playbackRate = t, !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;\n            console.warn(\"THREE.Audio: this Audio has no playback control.\");\n        }\n        getPlaybackRate() {\n            return this.playbackRate;\n        }\n        onEnded() {\n            this.isPlaying = !1;\n        }\n        getLoop() {\n            return !1 === this.hasPlaybackControl ? (console.warn(\"THREE.Audio: this Audio has no playback control.\"), !1) : this.loop;\n        }\n        setLoop(t) {\n            if (!1 !== this.hasPlaybackControl) return this.loop = t, !0 === this.isPlaying && (this.source.loop = this.loop), this;\n            console.warn(\"THREE.Audio: this Audio has no playback control.\");\n        }\n        setLoopStart(t) {\n            return this.loopStart = t, this;\n        }\n        setLoopEnd(t) {\n            return this.loopEnd = t, this;\n        }\n        getVolume() {\n            return this.gain.gain.value;\n        }\n        setVolume(t) {\n            return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01), this;\n        }\n    }\n    const th = new zt, eh = new Nt, nh = new zt, ih = new zt;\n    class rh {\n        constructor(t, e = 2048){\n            this.analyser = t.context.createAnalyser(), this.analyser.fftSize = e, this.data = new Uint8Array(this.analyser.frequencyBinCount), t.getOutput().connect(this.analyser);\n        }\n        getFrequencyData() {\n            return this.analyser.getByteFrequencyData(this.data), this.data;\n        }\n        getAverageFrequency() {\n            let t = 0;\n            const e = this.getFrequencyData();\n            for(let n = 0; n < e.length; n++)t += e[n];\n            return t / e.length;\n        }\n    }\n    class sh {\n        constructor(t, e, n){\n            let i, r, s;\n            switch(this.binding = t, this.valueSize = n, e){\n                case \"quaternion\":\n                    i = this._slerp, r = this._slerpAdditive, s = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(6 * n), this._workIndex = 5;\n                    break;\n                case \"string\":\n                case \"bool\":\n                    i = this._select, r = this._select, s = this._setAdditiveIdentityOther, this.buffer = new Array(5 * n);\n                    break;\n                default:\n                    i = this._lerp, r = this._lerpAdditive, s = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(5 * n);\n            }\n            this._mixBufferRegion = i, this._mixBufferRegionAdditive = r, this._setIdentity = s, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;\n        }\n        accumulate(t, e) {\n            const n = this.buffer, i = this.valueSize, r = t * i + i;\n            let s = this.cumulativeWeight;\n            if (0 === s) {\n                for(let t = 0; t !== i; ++t)n[r + t] = n[t];\n                s = e;\n            } else {\n                s += e;\n                const t = e / s;\n                this._mixBufferRegion(n, r, 0, t, i);\n            }\n            this.cumulativeWeight = s;\n        }\n        accumulateAdditive(t) {\n            const e = this.buffer, n = this.valueSize, i = n * this._addIndex;\n            0 === this.cumulativeWeightAdditive && this._setIdentity(), this._mixBufferRegionAdditive(e, i, 0, t, n), this.cumulativeWeightAdditive += t;\n        }\n        apply(t) {\n            const e = this.valueSize, n = this.buffer, i = t * e + e, r = this.cumulativeWeight, s = this.cumulativeWeightAdditive, a = this.binding;\n            if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, r < 1) {\n                const t = e * this._origIndex;\n                this._mixBufferRegion(n, i, t, 1 - r, e);\n            }\n            s > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * e, 1, e);\n            for(let t = e, r = e + e; t !== r; ++t)if (n[t] !== n[t + e]) {\n                a.setValue(n, i);\n                break;\n            }\n        }\n        saveOriginalState() {\n            const t = this.binding, e = this.buffer, n = this.valueSize, i = n * this._origIndex;\n            t.getValue(e, i);\n            for(let t = n, r = i; t !== r; ++t)e[t] = e[i + t % n];\n            this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;\n        }\n        restoreOriginalState() {\n            const t = 3 * this.valueSize;\n            this.binding.setValue(this.buffer, t);\n        }\n        _setAdditiveIdentityNumeric() {\n            const t = this._addIndex * this.valueSize, e = t + this.valueSize;\n            for(let n = t; n < e; n++)this.buffer[n] = 0;\n        }\n        _setAdditiveIdentityQuaternion() {\n            this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;\n        }\n        _setAdditiveIdentityOther() {\n            const t = this._origIndex * this.valueSize, e = this._addIndex * this.valueSize;\n            for(let n = 0; n < this.valueSize; n++)this.buffer[e + n] = this.buffer[t + n];\n        }\n        _select(t, e, n, i, r) {\n            if (i >= .5) for(let i = 0; i !== r; ++i)t[e + i] = t[n + i];\n        }\n        _slerp(t, e, n, i) {\n            Nt.slerpFlat(t, e, t, e, t, n, i);\n        }\n        _slerpAdditive(t, e, n, i, r) {\n            const s = this._workIndex * r;\n            Nt.multiplyQuaternionsFlat(t, s, t, e, t, n), Nt.slerpFlat(t, e, t, e, t, s, i);\n        }\n        _lerp(t, e, n, i, r) {\n            const s = 1 - i;\n            for(let a = 0; a !== r; ++a){\n                const r = e + a;\n                t[r] = t[r] * s + t[n + a] * i;\n            }\n        }\n        _lerpAdditive(t, e, n, i, r) {\n            for(let s = 0; s !== r; ++s){\n                const r = e + s;\n                t[r] = t[r] + t[n + s] * i;\n            }\n        }\n    }\n    const ah = \"\\\\[\\\\]\\\\.:\\\\/\", oh = new RegExp(\"[\\\\[\\\\]\\\\.:\\\\/]\", \"g\"), lh = \"[^\\\\[\\\\]\\\\.:\\\\/]\", ch = \"[^\" + ah.replace(\"\\\\.\", \"\") + \"]\", hh = /((?:WC+[\\/:])*)/.source.replace(\"WC\", lh), uh = /(WCOD+)?/.source.replace(\"WCOD\", ch), dh = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace(\"WC\", lh), ph = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace(\"WC\", lh), mh = new RegExp(\"^\" + hh + uh + dh + ph + \"$\"), fh = [\n        \"material\",\n        \"materials\",\n        \"bones\"\n    ];\n    class gh {\n        constructor(t, e, n){\n            this.path = e, this.parsedPath = n || gh.parseTrackName(e), this.node = gh.findNode(t, this.parsedPath.nodeName) || t, this.rootNode = t, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;\n        }\n        static create(t, e, n) {\n            return t && t.isAnimationObjectGroup ? new gh.Composite(t, e, n) : new gh(t, e, n);\n        }\n        static sanitizeNodeName(t) {\n            return t.replace(/\\s/g, \"_\").replace(oh, \"\");\n        }\n        static parseTrackName(t) {\n            const e = mh.exec(t);\n            if (!e) throw new Error(\"PropertyBinding: Cannot parse trackName: \" + t);\n            const n = {\n                nodeName: e[2],\n                objectName: e[3],\n                objectIndex: e[4],\n                propertyName: e[5],\n                propertyIndex: e[6]\n            }, i = n.nodeName && n.nodeName.lastIndexOf(\".\");\n            if (void 0 !== i && -1 !== i) {\n                const t = n.nodeName.substring(i + 1);\n                -1 !== fh.indexOf(t) && (n.nodeName = n.nodeName.substring(0, i), n.objectName = t);\n            }\n            if (null === n.propertyName || 0 === n.propertyName.length) throw new Error(\"PropertyBinding: can not parse propertyName from trackName: \" + t);\n            return n;\n        }\n        static findNode(t, e) {\n            if (!e || \"\" === e || \".\" === e || -1 === e || e === t.name || e === t.uuid) return t;\n            if (t.skeleton) {\n                const n = t.skeleton.getBoneByName(e);\n                if (void 0 !== n) return n;\n            }\n            if (t.children) {\n                const n = function(t) {\n                    for(let i = 0; i < t.length; i++){\n                        const r = t[i];\n                        if (r.name === e || r.uuid === e) return r;\n                        const s = n(r.children);\n                        if (s) return s;\n                    }\n                    return null;\n                }, i = n(t.children);\n                if (i) return i;\n            }\n            return null;\n        }\n        _getValue_unavailable() {}\n        _setValue_unavailable() {}\n        _getValue_direct(t, e) {\n            t[e] = this.targetObject[this.propertyName];\n        }\n        _getValue_array(t, e) {\n            const n = this.resolvedProperty;\n            for(let i = 0, r = n.length; i !== r; ++i)t[e++] = n[i];\n        }\n        _getValue_arrayElement(t, e) {\n            t[e] = this.resolvedProperty[this.propertyIndex];\n        }\n        _getValue_toArray(t, e) {\n            this.resolvedProperty.toArray(t, e);\n        }\n        _setValue_direct(t, e) {\n            this.targetObject[this.propertyName] = t[e];\n        }\n        _setValue_direct_setNeedsUpdate(t, e) {\n            this.targetObject[this.propertyName] = t[e], this.targetObject.needsUpdate = !0;\n        }\n        _setValue_direct_setMatrixWorldNeedsUpdate(t, e) {\n            this.targetObject[this.propertyName] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0;\n        }\n        _setValue_array(t, e) {\n            const n = this.resolvedProperty;\n            for(let i = 0, r = n.length; i !== r; ++i)n[i] = t[e++];\n        }\n        _setValue_array_setNeedsUpdate(t, e) {\n            const n = this.resolvedProperty;\n            for(let i = 0, r = n.length; i !== r; ++i)n[i] = t[e++];\n            this.targetObject.needsUpdate = !0;\n        }\n        _setValue_array_setMatrixWorldNeedsUpdate(t, e) {\n            const n = this.resolvedProperty;\n            for(let i = 0, r = n.length; i !== r; ++i)n[i] = t[e++];\n            this.targetObject.matrixWorldNeedsUpdate = !0;\n        }\n        _setValue_arrayElement(t, e) {\n            this.resolvedProperty[this.propertyIndex] = t[e];\n        }\n        _setValue_arrayElement_setNeedsUpdate(t, e) {\n            this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.needsUpdate = !0;\n        }\n        _setValue_arrayElement_setMatrixWorldNeedsUpdate(t, e) {\n            this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0;\n        }\n        _setValue_fromArray(t, e) {\n            this.resolvedProperty.fromArray(t, e);\n        }\n        _setValue_fromArray_setNeedsUpdate(t, e) {\n            this.resolvedProperty.fromArray(t, e), this.targetObject.needsUpdate = !0;\n        }\n        _setValue_fromArray_setMatrixWorldNeedsUpdate(t, e) {\n            this.resolvedProperty.fromArray(t, e), this.targetObject.matrixWorldNeedsUpdate = !0;\n        }\n        _getValue_unbound(t, e) {\n            this.bind(), this.getValue(t, e);\n        }\n        _setValue_unbound(t, e) {\n            this.bind(), this.setValue(t, e);\n        }\n        bind() {\n            let t = this.node;\n            const e = this.parsedPath, n = e.objectName, i = e.propertyName;\n            let r = e.propertyIndex;\n            if (t || (t = gh.findNode(this.rootNode, e.nodeName) || this.rootNode, this.node = t), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !t) return void console.error(\"THREE.PropertyBinding: Trying to update node for track: \" + this.path + \" but it wasn't found.\");\n            if (n) {\n                let i = e.objectIndex;\n                switch(n){\n                    case \"materials\":\n                        if (!t.material) return void console.error(\"THREE.PropertyBinding: Can not bind to material as node does not have a material.\", this);\n                        if (!t.material.materials) return void console.error(\"THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.\", this);\n                        t = t.material.materials;\n                        break;\n                    case \"bones\":\n                        if (!t.skeleton) return void console.error(\"THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.\", this);\n                        t = t.skeleton.bones;\n                        for(let e = 0; e < t.length; e++)if (t[e].name === i) {\n                            i = e;\n                            break;\n                        }\n                        break;\n                    default:\n                        if (void 0 === t[n]) return void console.error(\"THREE.PropertyBinding: Can not bind to objectName of node undefined.\", this);\n                        t = t[n];\n                }\n                if (void 0 !== i) {\n                    if (void 0 === t[i]) return void console.error(\"THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.\", this, t);\n                    t = t[i];\n                }\n            }\n            const s = t[i];\n            if (void 0 === s) {\n                const n = e.nodeName;\n                return void console.error(\"THREE.PropertyBinding: Trying to update property for track: \" + n + \".\" + i + \" but it wasn't found.\", t);\n            }\n            let a = this.Versioning.None;\n            this.targetObject = t, void 0 !== t.needsUpdate ? a = this.Versioning.NeedsUpdate : void 0 !== t.matrixWorldNeedsUpdate && (a = this.Versioning.MatrixWorldNeedsUpdate);\n            let o = this.BindingType.Direct;\n            if (void 0 !== r) {\n                if (\"morphTargetInfluences\" === i) {\n                    if (!t.geometry) return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.\", this);\n                    if (!t.geometry.isBufferGeometry) return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.\", this);\n                    if (!t.geometry.morphAttributes) return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.\", this);\n                    void 0 !== t.morphTargetDictionary[r] && (r = t.morphTargetDictionary[r]);\n                }\n                o = this.BindingType.ArrayElement, this.resolvedProperty = s, this.propertyIndex = r;\n            } else void 0 !== s.fromArray && void 0 !== s.toArray ? (o = this.BindingType.HasFromToArray, this.resolvedProperty = s) : Array.isArray(s) ? (o = this.BindingType.EntireArray, this.resolvedProperty = s) : this.propertyName = i;\n            this.getValue = this.GetterByBindingType[o], this.setValue = this.SetterByBindingTypeAndVersioning[o][a];\n        }\n        unbind() {\n            this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;\n        }\n    }\n    gh.Composite = class {\n        constructor(t, e, n){\n            const i = n || gh.parseTrackName(e);\n            this._targetGroup = t, this._bindings = t.subscribe_(e, i);\n        }\n        getValue(t, e) {\n            this.bind();\n            const n = this._targetGroup.nCachedObjects_, i = this._bindings[n];\n            void 0 !== i && i.getValue(t, e);\n        }\n        setValue(t, e) {\n            const n = this._bindings;\n            for(let i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)n[i].setValue(t, e);\n        }\n        bind() {\n            const t = this._bindings;\n            for(let e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)t[e].bind();\n        }\n        unbind() {\n            const t = this._bindings;\n            for(let e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)t[e].unbind();\n        }\n    }, gh.prototype.BindingType = {\n        Direct: 0,\n        EntireArray: 1,\n        ArrayElement: 2,\n        HasFromToArray: 3\n    }, gh.prototype.Versioning = {\n        None: 0,\n        NeedsUpdate: 1,\n        MatrixWorldNeedsUpdate: 2\n    }, gh.prototype.GetterByBindingType = [\n        gh.prototype._getValue_direct,\n        gh.prototype._getValue_array,\n        gh.prototype._getValue_arrayElement,\n        gh.prototype._getValue_toArray\n    ], gh.prototype.SetterByBindingTypeAndVersioning = [\n        [\n            gh.prototype._setValue_direct,\n            gh.prototype._setValue_direct_setNeedsUpdate,\n            gh.prototype._setValue_direct_setMatrixWorldNeedsUpdate\n        ],\n        [\n            gh.prototype._setValue_array,\n            gh.prototype._setValue_array_setNeedsUpdate,\n            gh.prototype._setValue_array_setMatrixWorldNeedsUpdate\n        ],\n        [\n            gh.prototype._setValue_arrayElement,\n            gh.prototype._setValue_arrayElement_setNeedsUpdate,\n            gh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate\n        ],\n        [\n            gh.prototype._setValue_fromArray,\n            gh.prototype._setValue_fromArray_setNeedsUpdate,\n            gh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate\n        ]\n    ];\n    class vh {\n        constructor(){\n            this.uuid = ht(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;\n            const t = {};\n            this._indicesByUUID = t;\n            for(let e = 0, n = arguments.length; e !== n; ++e)t[arguments[e].uuid] = e;\n            this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};\n            const e = this;\n            this.stats = {\n                objects: {\n                    get total () {\n                        return e._objects.length;\n                    },\n                    get inUse () {\n                        return this.total - e.nCachedObjects_;\n                    }\n                },\n                get bindingsPerObject () {\n                    return e._bindings.length;\n                }\n            };\n        }\n        add() {\n            const t = this._objects, e = this._indicesByUUID, n = this._paths, i = this._parsedPaths, r = this._bindings, s = r.length;\n            let a, o = t.length, l = this.nCachedObjects_;\n            for(let c = 0, h = arguments.length; c !== h; ++c){\n                const h = arguments[c], u = h.uuid;\n                let d = e[u];\n                if (void 0 === d) {\n                    d = o++, e[u] = d, t.push(h);\n                    for(let t = 0, e = s; t !== e; ++t)r[t].push(new gh(h, n[t], i[t]));\n                } else if (d < l) {\n                    a = t[d];\n                    const o = --l, c = t[o];\n                    e[c.uuid] = d, t[d] = c, e[u] = o, t[o] = h;\n                    for(let t = 0, e = s; t !== e; ++t){\n                        const e = r[t], s = e[o];\n                        let a = e[d];\n                        e[d] = s, void 0 === a && (a = new gh(h, n[t], i[t])), e[o] = a;\n                    }\n                } else t[d] !== a && console.error(\"THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.\");\n            }\n            this.nCachedObjects_ = l;\n        }\n        remove() {\n            const t = this._objects, e = this._indicesByUUID, n = this._bindings, i = n.length;\n            let r = this.nCachedObjects_;\n            for(let s = 0, a = arguments.length; s !== a; ++s){\n                const a = arguments[s], o = a.uuid, l = e[o];\n                if (void 0 !== l && l >= r) {\n                    const s = r++, c = t[s];\n                    e[c.uuid] = l, t[l] = c, e[o] = s, t[s] = a;\n                    for(let t = 0, e = i; t !== e; ++t){\n                        const e = n[t], i = e[s], r = e[l];\n                        e[l] = i, e[s] = r;\n                    }\n                }\n            }\n            this.nCachedObjects_ = r;\n        }\n        uncache() {\n            const t = this._objects, e = this._indicesByUUID, n = this._bindings, i = n.length;\n            let r = this.nCachedObjects_, s = t.length;\n            for(let a = 0, o = arguments.length; a !== o; ++a){\n                const o = arguments[a].uuid, l = e[o];\n                if (void 0 !== l) {\n                    if (delete e[o], l < r) {\n                        const a = --r, o = t[a], c = --s, h = t[c];\n                        e[o.uuid] = l, t[l] = o, e[h.uuid] = a, t[a] = h, t.pop();\n                        for(let t = 0, e = i; t !== e; ++t){\n                            const e = n[t], i = e[a], r = e[c];\n                            e[l] = i, e[a] = r, e.pop();\n                        }\n                    } else {\n                        const r = --s, a = t[r];\n                        r > 0 && (e[a.uuid] = l), t[l] = a, t.pop();\n                        for(let t = 0, e = i; t !== e; ++t){\n                            const e = n[t];\n                            e[l] = e[r], e.pop();\n                        }\n                    }\n                }\n            }\n            this.nCachedObjects_ = r;\n        }\n        subscribe_(t, e) {\n            const n = this._bindingsIndicesByPath;\n            let i = n[t];\n            const r = this._bindings;\n            if (void 0 !== i) return r[i];\n            const s = this._paths, a = this._parsedPaths, o = this._objects, l = o.length, c = this.nCachedObjects_, h = new Array(l);\n            i = r.length, n[t] = i, s.push(t), a.push(e), r.push(h);\n            for(let n = c, i = o.length; n !== i; ++n){\n                const i = o[n];\n                h[n] = new gh(i, t, e);\n            }\n            return h;\n        }\n        unsubscribe_(t) {\n            const e = this._bindingsIndicesByPath, n = e[t];\n            if (void 0 !== n) {\n                const i = this._paths, r = this._parsedPaths, s = this._bindings, a = s.length - 1, o = s[a];\n                e[t[a]] = n, s[n] = o, s.pop(), r[n] = r[a], r.pop(), i[n] = i[a], i.pop();\n            }\n        }\n    }\n    vh.prototype.isAnimationObjectGroup = !0;\n    class yh {\n        constructor(t, e, n = null, i = e.blendMode){\n            this._mixer = t, this._clip = e, this._localRoot = n, this.blendMode = i;\n            const r = e.tracks, s = r.length, a = new Array(s), o = {\n                endingStart: k,\n                endingEnd: k\n            };\n            for(let t = 0; t !== s; ++t){\n                const e = r[t].createInterpolant(null);\n                a[t] = e, e.settings = o;\n            }\n            this._interpolantSettings = o, this._interpolants = a, this._propertyBindings = new Array(s), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = 2201, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;\n        }\n        play() {\n            return this._mixer._activateAction(this), this;\n        }\n        stop() {\n            return this._mixer._deactivateAction(this), this.reset();\n        }\n        reset() {\n            return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();\n        }\n        isRunning() {\n            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this);\n        }\n        isScheduled() {\n            return this._mixer._isActiveAction(this);\n        }\n        startAt(t) {\n            return this._startTime = t, this;\n        }\n        setLoop(t, e) {\n            return this.loop = t, this.repetitions = e, this;\n        }\n        setEffectiveWeight(t) {\n            return this.weight = t, this._effectiveWeight = this.enabled ? t : 0, this.stopFading();\n        }\n        getEffectiveWeight() {\n            return this._effectiveWeight;\n        }\n        fadeIn(t) {\n            return this._scheduleFading(t, 0, 1);\n        }\n        fadeOut(t) {\n            return this._scheduleFading(t, 1, 0);\n        }\n        crossFadeFrom(t, e, n) {\n            if (t.fadeOut(e), this.fadeIn(e), n) {\n                const n = this._clip.duration, i = t._clip.duration, r = i / n, s = n / i;\n                t.warp(1, r, e), this.warp(s, 1, e);\n            }\n            return this;\n        }\n        crossFadeTo(t, e, n) {\n            return t.crossFadeFrom(this, e, n);\n        }\n        stopFading() {\n            const t = this._weightInterpolant;\n            return null !== t && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this;\n        }\n        setEffectiveTimeScale(t) {\n            return this.timeScale = t, this._effectiveTimeScale = this.paused ? 0 : t, this.stopWarping();\n        }\n        getEffectiveTimeScale() {\n            return this._effectiveTimeScale;\n        }\n        setDuration(t) {\n            return this.timeScale = this._clip.duration / t, this.stopWarping();\n        }\n        syncWith(t) {\n            return this.time = t.time, this.timeScale = t.timeScale, this.stopWarping();\n        }\n        halt(t) {\n            return this.warp(this._effectiveTimeScale, 0, t);\n        }\n        warp(t, e, n) {\n            const i = this._mixer, r = i.time, s = this.timeScale;\n            let a = this._timeScaleInterpolant;\n            null === a && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);\n            const o = a.parameterPositions, l = a.sampleValues;\n            return o[0] = r, o[1] = r + n, l[0] = t / s, l[1] = e / s, this;\n        }\n        stopWarping() {\n            const t = this._timeScaleInterpolant;\n            return null !== t && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this;\n        }\n        getMixer() {\n            return this._mixer;\n        }\n        getClip() {\n            return this._clip;\n        }\n        getRoot() {\n            return this._localRoot || this._mixer._root;\n        }\n        _update(t, e, n, i) {\n            if (!this.enabled) return void this._updateWeight(t);\n            const r = this._startTime;\n            if (null !== r) {\n                const i = (t - r) * n;\n                if (i < 0 || 0 === n) return;\n                this._startTime = null, e = n * i;\n            }\n            e *= this._updateTimeScale(t);\n            const s = this._updateTime(e), a = this._updateWeight(t);\n            if (a > 0) {\n                const t = this._interpolants, e = this._propertyBindings;\n                if (this.blendMode === q) for(let n = 0, i = t.length; n !== i; ++n)t[n].evaluate(s), e[n].accumulateAdditive(a);\n                else for(let n = 0, r = t.length; n !== r; ++n)t[n].evaluate(s), e[n].accumulate(i, a);\n            }\n        }\n        _updateWeight(t) {\n            let e = 0;\n            if (this.enabled) {\n                e = this.weight;\n                const n = this._weightInterpolant;\n                if (null !== n) {\n                    const i = n.evaluate(t)[0];\n                    e *= i, t > n.parameterPositions[1] && (this.stopFading(), 0 === i && (this.enabled = !1));\n                }\n            }\n            return this._effectiveWeight = e, e;\n        }\n        _updateTimeScale(t) {\n            let e = 0;\n            if (!this.paused) {\n                e = this.timeScale;\n                const n = this._timeScaleInterpolant;\n                if (null !== n) e *= n.evaluate(t)[0], t > n.parameterPositions[1] && (this.stopWarping(), 0 === e ? this.paused = !0 : this.timeScale = e);\n            }\n            return this._effectiveTimeScale = e, e;\n        }\n        _updateTime(t) {\n            const e = this._clip.duration, n = this.loop;\n            let i = this.time + t, r = this._loopCount;\n            const s = 2202 === n;\n            if (0 === t) return -1 === r ? i : s && 1 == (1 & r) ? e - i : i;\n            if (2200 === n) {\n                -1 === r && (this._loopCount = 0, this._setEndings(!0, !0, !1));\n                t: {\n                    if (i >= e) i = e;\n                    else {\n                        if (!(i < 0)) {\n                            this.time = i;\n                            break t;\n                        }\n                        i = 0;\n                    }\n                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({\n                        type: \"finished\",\n                        action: this,\n                        direction: t < 0 ? -1 : 1\n                    });\n                }\n            } else {\n                if (-1 === r && (t >= 0 ? (r = 0, this._setEndings(!0, 0 === this.repetitions, s)) : this._setEndings(0 === this.repetitions, !0, s)), i >= e || i < 0) {\n                    const n = Math.floor(i / e);\n                    i -= e * n, r += Math.abs(n);\n                    const a = this.repetitions - r;\n                    if (a <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = t > 0 ? e : 0, this.time = i, this._mixer.dispatchEvent({\n                        type: \"finished\",\n                        action: this,\n                        direction: t > 0 ? 1 : -1\n                    });\n                    else {\n                        if (1 === a) {\n                            const e = t < 0;\n                            this._setEndings(e, !e, s);\n                        } else this._setEndings(!1, !1, s);\n                        this._loopCount = r, this.time = i, this._mixer.dispatchEvent({\n                            type: \"loop\",\n                            action: this,\n                            loopDelta: n\n                        });\n                    }\n                } else this.time = i;\n                if (s && 1 == (1 & r)) return e - i;\n            }\n            return i;\n        }\n        _setEndings(t, e, n) {\n            const i = this._interpolantSettings;\n            n ? (i.endingStart = V, i.endingEnd = V) : (i.endingStart = t ? this.zeroSlopeAtStart ? V : k : W, i.endingEnd = e ? this.zeroSlopeAtEnd ? V : k : W);\n        }\n        _scheduleFading(t, e, n) {\n            const i = this._mixer, r = i.time;\n            let s = this._weightInterpolant;\n            null === s && (s = i._lendControlInterpolant(), this._weightInterpolant = s);\n            const a = s.parameterPositions, o = s.sampleValues;\n            return a[0] = r, o[0] = e, a[1] = r + t, o[1] = n, this;\n        }\n    }\n    class xh extends rt {\n        constructor(t){\n            super(), this._root = t, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;\n        }\n        _bindAction(t, e) {\n            const n = t._localRoot || this._root, i = t._clip.tracks, r = i.length, s = t._propertyBindings, a = t._interpolants, o = n.uuid, l = this._bindingsByRootAndName;\n            let c = l[o];\n            void 0 === c && (c = {}, l[o] = c);\n            for(let t = 0; t !== r; ++t){\n                const r = i[t], l = r.name;\n                let h = c[l];\n                if (void 0 !== h) s[t] = h;\n                else {\n                    if (h = s[t], void 0 !== h) {\n                        null === h._cacheIndex && (++h.referenceCount, this._addInactiveBinding(h, o, l));\n                        continue;\n                    }\n                    const i = e && e._propertyBindings[t].binding.parsedPath;\n                    h = new sh(gh.create(n, l, i), r.ValueTypeName, r.getValueSize()), ++h.referenceCount, this._addInactiveBinding(h, o, l), s[t] = h;\n                }\n                a[t].resultBuffer = h.buffer;\n            }\n        }\n        _activateAction(t) {\n            if (!this._isActiveAction(t)) {\n                if (null === t._cacheIndex) {\n                    const e = (t._localRoot || this._root).uuid, n = t._clip.uuid, i = this._actionsByClip[n];\n                    this._bindAction(t, i && i.knownActions[0]), this._addInactiveAction(t, n, e);\n                }\n                const e = t._propertyBindings;\n                for(let t = 0, n = e.length; t !== n; ++t){\n                    const n = e[t];\n                    0 == n.useCount++ && (this._lendBinding(n), n.saveOriginalState());\n                }\n                this._lendAction(t);\n            }\n        }\n        _deactivateAction(t) {\n            if (this._isActiveAction(t)) {\n                const e = t._propertyBindings;\n                for(let t = 0, n = e.length; t !== n; ++t){\n                    const n = e[t];\n                    0 == --n.useCount && (n.restoreOriginalState(), this._takeBackBinding(n));\n                }\n                this._takeBackAction(t);\n            }\n        }\n        _initMemoryManager() {\n            this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;\n            const t = this;\n            this.stats = {\n                actions: {\n                    get total () {\n                        return t._actions.length;\n                    },\n                    get inUse () {\n                        return t._nActiveActions;\n                    }\n                },\n                bindings: {\n                    get total () {\n                        return t._bindings.length;\n                    },\n                    get inUse () {\n                        return t._nActiveBindings;\n                    }\n                },\n                controlInterpolants: {\n                    get total () {\n                        return t._controlInterpolants.length;\n                    },\n                    get inUse () {\n                        return t._nActiveControlInterpolants;\n                    }\n                }\n            };\n        }\n        _isActiveAction(t) {\n            const e = t._cacheIndex;\n            return null !== e && e < this._nActiveActions;\n        }\n        _addInactiveAction(t, e, n) {\n            const i = this._actions, r = this._actionsByClip;\n            let s = r[e];\n            if (void 0 === s) s = {\n                knownActions: [\n                    t\n                ],\n                actionByRoot: {}\n            }, t._byClipCacheIndex = 0, r[e] = s;\n            else {\n                const e = s.knownActions;\n                t._byClipCacheIndex = e.length, e.push(t);\n            }\n            t._cacheIndex = i.length, i.push(t), s.actionByRoot[n] = t;\n        }\n        _removeInactiveAction(t) {\n            const e = this._actions, n = e[e.length - 1], i = t._cacheIndex;\n            n._cacheIndex = i, e[i] = n, e.pop(), t._cacheIndex = null;\n            const r = t._clip.uuid, s = this._actionsByClip, a = s[r], o = a.knownActions, l = o[o.length - 1], c = t._byClipCacheIndex;\n            l._byClipCacheIndex = c, o[c] = l, o.pop(), t._byClipCacheIndex = null;\n            delete a.actionByRoot[(t._localRoot || this._root).uuid], 0 === o.length && delete s[r], this._removeInactiveBindingsForAction(t);\n        }\n        _removeInactiveBindingsForAction(t) {\n            const e = t._propertyBindings;\n            for(let t = 0, n = e.length; t !== n; ++t){\n                const n = e[t];\n                0 == --n.referenceCount && this._removeInactiveBinding(n);\n            }\n        }\n        _lendAction(t) {\n            const e = this._actions, n = t._cacheIndex, i = this._nActiveActions++, r = e[i];\n            t._cacheIndex = i, e[i] = t, r._cacheIndex = n, e[n] = r;\n        }\n        _takeBackAction(t) {\n            const e = this._actions, n = t._cacheIndex, i = --this._nActiveActions, r = e[i];\n            t._cacheIndex = i, e[i] = t, r._cacheIndex = n, e[n] = r;\n        }\n        _addInactiveBinding(t, e, n) {\n            const i = this._bindingsByRootAndName, r = this._bindings;\n            let s = i[e];\n            void 0 === s && (s = {}, i[e] = s), s[n] = t, t._cacheIndex = r.length, r.push(t);\n        }\n        _removeInactiveBinding(t) {\n            const e = this._bindings, n = t.binding, i = n.rootNode.uuid, r = n.path, s = this._bindingsByRootAndName, a = s[i], o = e[e.length - 1], l = t._cacheIndex;\n            o._cacheIndex = l, e[l] = o, e.pop(), delete a[r], 0 === Object.keys(a).length && delete s[i];\n        }\n        _lendBinding(t) {\n            const e = this._bindings, n = t._cacheIndex, i = this._nActiveBindings++, r = e[i];\n            t._cacheIndex = i, e[i] = t, r._cacheIndex = n, e[n] = r;\n        }\n        _takeBackBinding(t) {\n            const e = this._bindings, n = t._cacheIndex, i = --this._nActiveBindings, r = e[i];\n            t._cacheIndex = i, e[i] = t, r._cacheIndex = n, e[n] = r;\n        }\n        _lendControlInterpolant() {\n            const t = this._controlInterpolants, e = this._nActiveControlInterpolants++;\n            let n = t[e];\n            return void 0 === n && (n = new jl(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), n.__cacheIndex = e, t[e] = n), n;\n        }\n        _takeBackControlInterpolant(t) {\n            const e = this._controlInterpolants, n = t.__cacheIndex, i = --this._nActiveControlInterpolants, r = e[i];\n            t.__cacheIndex = i, e[i] = t, r.__cacheIndex = n, e[n] = r;\n        }\n        clipAction(t, e, n) {\n            const i = e || this._root, r = i.uuid;\n            let s = \"string\" == typeof t ? ec.findByName(i, t) : t;\n            const a = null !== s ? s.uuid : t, o = this._actionsByClip[a];\n            let l = null;\n            if (void 0 === n && (n = null !== s ? s.blendMode : j), void 0 !== o) {\n                const t = o.actionByRoot[r];\n                if (void 0 !== t && t.blendMode === n) return t;\n                l = o.knownActions[0], null === s && (s = l._clip);\n            }\n            if (null === s) return null;\n            const c = new yh(this, s, e, n);\n            return this._bindAction(c, l), this._addInactiveAction(c, a, r), c;\n        }\n        existingAction(t, e) {\n            const n = e || this._root, i = n.uuid, r = \"string\" == typeof t ? ec.findByName(n, t) : t, s = r ? r.uuid : t, a = this._actionsByClip[s];\n            return void 0 !== a && a.actionByRoot[i] || null;\n        }\n        stopAllAction() {\n            const t = this._actions;\n            for(let e = this._nActiveActions - 1; e >= 0; --e)t[e].stop();\n            return this;\n        }\n        update(t) {\n            t *= this.timeScale;\n            const e = this._actions, n = this._nActiveActions, i = this.time += t, r = Math.sign(t), s = this._accuIndex ^= 1;\n            for(let a = 0; a !== n; ++a)e[a]._update(i, t, r, s);\n            const a = this._bindings, o = this._nActiveBindings;\n            for(let t = 0; t !== o; ++t)a[t].apply(s);\n            return this;\n        }\n        setTime(t) {\n            this.time = 0;\n            for(let t = 0; t < this._actions.length; t++)this._actions[t].time = 0;\n            return this.update(t);\n        }\n        getRoot() {\n            return this._root;\n        }\n        uncacheClip(t) {\n            const e = this._actions, n = t.uuid, i = this._actionsByClip, r = i[n];\n            if (void 0 !== r) {\n                const t = r.knownActions;\n                for(let n = 0, i = t.length; n !== i; ++n){\n                    const i = t[n];\n                    this._deactivateAction(i);\n                    const r = i._cacheIndex, s = e[e.length - 1];\n                    i._cacheIndex = null, i._byClipCacheIndex = null, s._cacheIndex = r, e[r] = s, e.pop(), this._removeInactiveBindingsForAction(i);\n                }\n                delete i[n];\n            }\n        }\n        uncacheRoot(t) {\n            const e = t.uuid, n = this._actionsByClip;\n            for(const t in n){\n                const i = n[t].actionByRoot[e];\n                void 0 !== i && (this._deactivateAction(i), this._removeInactiveAction(i));\n            }\n            const i = this._bindingsByRootAndName[e];\n            if (void 0 !== i) for(const t in i){\n                const e = i[t];\n                e.restoreOriginalState(), this._removeInactiveBinding(e);\n            }\n        }\n        uncacheAction(t, e) {\n            const n = this.existingAction(t, e);\n            null !== n && (this._deactivateAction(n), this._removeInactiveAction(n));\n        }\n    }\n    xh.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n    class _h {\n        constructor(t){\n            \"string\" == typeof t && (console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"), t = arguments[1]), this.value = t;\n        }\n        clone() {\n            return new _h(void 0 === this.value.clone ? this.value : this.value.clone());\n        }\n    }\n    class Mh extends na {\n        constructor(t, e, n = 1){\n            super(t, e), this.meshPerAttribute = n;\n        }\n        copy(t) {\n            return super.copy(t), this.meshPerAttribute = t.meshPerAttribute, this;\n        }\n        clone(t) {\n            const e = super.clone(t);\n            return e.meshPerAttribute = this.meshPerAttribute, e;\n        }\n        toJSON(t) {\n            const e = super.toJSON(t);\n            return e.isInstancedInterleavedBuffer = !0, e.meshPerAttribute = this.meshPerAttribute, e;\n        }\n    }\n    Mh.prototype.isInstancedInterleavedBuffer = !0;\n    class bh {\n        constructor(t, e, n, i, r){\n            this.buffer = t, this.type = e, this.itemSize = n, this.elementSize = i, this.count = r, this.version = 0;\n        }\n        set needsUpdate(t) {\n            !0 === t && this.version++;\n        }\n        setBuffer(t) {\n            return this.buffer = t, this;\n        }\n        setType(t, e) {\n            return this.type = t, this.elementSize = e, this;\n        }\n        setItemSize(t) {\n            return this.itemSize = t, this;\n        }\n        setCount(t) {\n            return this.count = t, this;\n        }\n    }\n    bh.prototype.isGLBufferAttribute = !0;\n    function wh(t, e) {\n        return t.distance - e.distance;\n    }\n    function Sh(t, e, n, i) {\n        if (t.layers.test(e.layers) && t.raycast(e, n), !0 === i) {\n            const i = t.children;\n            for(let t = 0, r = i.length; t < r; t++)Sh(i[t], e, n, !0);\n        }\n    }\n    const Th = new yt;\n    class Eh {\n        constructor(t = new yt(1 / 0, 1 / 0), e = new yt(-1 / 0, -1 / 0)){\n            this.min = t, this.max = e;\n        }\n        set(t, e) {\n            return this.min.copy(t), this.max.copy(e), this;\n        }\n        setFromPoints(t) {\n            this.makeEmpty();\n            for(let e = 0, n = t.length; e < n; e++)this.expandByPoint(t[e]);\n            return this;\n        }\n        setFromCenterAndSize(t, e) {\n            const n = Th.copy(e).multiplyScalar(.5);\n            return this.min.copy(t).sub(n), this.max.copy(t).add(n), this;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n        copy(t) {\n            return this.min.copy(t.min), this.max.copy(t.max), this;\n        }\n        makeEmpty() {\n            return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;\n        }\n        isEmpty() {\n            return this.max.x < this.min.x || this.max.y < this.min.y;\n        }\n        getCenter(t) {\n            return this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5);\n        }\n        getSize(t) {\n            return this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min);\n        }\n        expandByPoint(t) {\n            return this.min.min(t), this.max.max(t), this;\n        }\n        expandByVector(t) {\n            return this.min.sub(t), this.max.add(t), this;\n        }\n        expandByScalar(t) {\n            return this.min.addScalar(-t), this.max.addScalar(t), this;\n        }\n        containsPoint(t) {\n            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y);\n        }\n        containsBox(t) {\n            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y;\n        }\n        getParameter(t, e) {\n            return e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y));\n        }\n        intersectsBox(t) {\n            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y);\n        }\n        clampPoint(t, e) {\n            return e.copy(t).clamp(this.min, this.max);\n        }\n        distanceToPoint(t) {\n            return Th.copy(t).clamp(this.min, this.max).sub(t).length();\n        }\n        intersect(t) {\n            return this.min.max(t.min), this.max.min(t.max), this;\n        }\n        union(t) {\n            return this.min.min(t.min), this.max.max(t.max), this;\n        }\n        translate(t) {\n            return this.min.add(t), this.max.add(t), this;\n        }\n        equals(t) {\n            return t.min.equals(this.min) && t.max.equals(this.max);\n        }\n    }\n    Eh.prototype.isBox2 = !0;\n    const Ah = new zt, Lh = new zt;\n    class Rh {\n        constructor(t = new zt, e = new zt){\n            this.start = t, this.end = e;\n        }\n        set(t, e) {\n            return this.start.copy(t), this.end.copy(e), this;\n        }\n        copy(t) {\n            return this.start.copy(t.start), this.end.copy(t.end), this;\n        }\n        getCenter(t) {\n            return t.addVectors(this.start, this.end).multiplyScalar(.5);\n        }\n        delta(t) {\n            return t.subVectors(this.end, this.start);\n        }\n        distanceSq() {\n            return this.start.distanceToSquared(this.end);\n        }\n        distance() {\n            return this.start.distanceTo(this.end);\n        }\n        at(t, e) {\n            return this.delta(e).multiplyScalar(t).add(this.start);\n        }\n        closestPointToPointParameter(t, e) {\n            Ah.subVectors(t, this.start), Lh.subVectors(this.end, this.start);\n            const n = Lh.dot(Lh);\n            let i = Lh.dot(Ah) / n;\n            return e && (i = ut(i, 0, 1)), i;\n        }\n        closestPointToPoint(t, e, n) {\n            const i = this.closestPointToPointParameter(t, e);\n            return this.delta(n).multiplyScalar(i).add(this.start);\n        }\n        applyMatrix4(t) {\n            return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this;\n        }\n        equals(t) {\n            return t.start.equals(this.start) && t.end.equals(this.end);\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }\n    const Ch = new zt;\n    const Ph = new zt, Ih = new de, Dh = new de;\n    class Nh extends Za {\n        constructor(t){\n            const e = zh(t), n = new En, i = [], r = [], s = new rn(0, 0, 1), a = new rn(0, 1, 0);\n            for(let t = 0; t < e.length; t++){\n                const n = e[t];\n                n.parent && n.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(s.r, s.g, s.b), r.push(a.r, a.g, a.b));\n            }\n            n.setAttribute(\"position\", new vn(i, 3)), n.setAttribute(\"color\", new vn(r, 3));\n            super(n, new Ga({\n                vertexColors: !0,\n                depthTest: !1,\n                depthWrite: !1,\n                toneMapped: !1,\n                transparent: !0\n            })), this.type = \"SkeletonHelper\", this.isSkeletonHelper = !0, this.root = t, this.bones = e, this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1;\n        }\n        updateMatrixWorld(t) {\n            const e = this.bones, n = this.geometry, i = n.getAttribute(\"position\");\n            Dh.copy(this.root.matrixWorld).invert();\n            for(let t = 0, n = 0; t < e.length; t++){\n                const r = e[t];\n                r.parent && r.parent.isBone && (Ih.multiplyMatrices(Dh, r.matrixWorld), Ph.setFromMatrixPosition(Ih), i.setXYZ(n, Ph.x, Ph.y, Ph.z), Ih.multiplyMatrices(Dh, r.parent.matrixWorld), Ph.setFromMatrixPosition(Ih), i.setXYZ(n + 1, Ph.x, Ph.y, Ph.z), n += 2);\n            }\n            n.getAttribute(\"position\").needsUpdate = !0, super.updateMatrixWorld(t);\n        }\n    }\n    function zh(t) {\n        const e = [];\n        t && t.isBone && e.push(t);\n        for(let n = 0; n < t.children.length; n++)e.push.apply(e, zh(t.children[n]));\n        return e;\n    }\n    const Bh = new zt, Fh = new rn, Oh = new rn;\n    class Uh extends Za {\n        constructor(t = 10, e = 10, n = 4473924, i = 8947848){\n            n = new rn(n), i = new rn(i);\n            const r = e / 2, s = t / e, a = t / 2, o = [], l = [];\n            for(let t = 0, c = 0, h = -a; t <= e; t++, h += s){\n                o.push(-a, 0, h, a, 0, h), o.push(h, 0, -a, h, 0, a);\n                const e = t === r ? n : i;\n                e.toArray(l, c), c += 3, e.toArray(l, c), c += 3, e.toArray(l, c), c += 3, e.toArray(l, c), c += 3;\n            }\n            const c = new En;\n            c.setAttribute(\"position\", new vn(o, 3)), c.setAttribute(\"color\", new vn(l, 3));\n            super(c, new Ga({\n                vertexColors: !0,\n                toneMapped: !1\n            })), this.type = \"GridHelper\";\n        }\n    }\n    const Hh = new zt, Gh = new zt, kh = new zt;\n    const Vh = new zt, Wh = new Qn;\n    function jh(t, e, n, i, r, s, a) {\n        Vh.set(r, s, a).unproject(i);\n        const o = e[t];\n        if (void 0 !== o) {\n            const t = n.getAttribute(\"position\");\n            for(let e = 0, n = o.length; e < n; e++)t.setXYZ(o[e], Vh.x, Vh.y, Vh.z);\n        }\n    }\n    const qh = new Ot;\n    class Xh extends Za {\n        constructor(t, e = 16776960){\n            const n = new Uint16Array([\n                0,\n                1,\n                1,\n                2,\n                2,\n                3,\n                3,\n                0,\n                4,\n                5,\n                5,\n                6,\n                6,\n                7,\n                7,\n                4,\n                0,\n                4,\n                1,\n                5,\n                2,\n                6,\n                3,\n                7\n            ]), i = new Float32Array(24), r = new En;\n            r.setIndex(new ln(n, 1)), r.setAttribute(\"position\", new ln(i, 3)), super(r, new Ga({\n                color: e,\n                toneMapped: !1\n            })), this.object = t, this.type = \"BoxHelper\", this.matrixAutoUpdate = !1, this.update();\n        }\n        update(t) {\n            if (void 0 !== t && console.warn(\"THREE.BoxHelper: .update() has no longer arguments.\"), void 0 !== this.object && qh.setFromObject(this.object), qh.isEmpty()) return;\n            const e = qh.min, n = qh.max, i = this.geometry.attributes.position, r = i.array;\n            r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = e.x, r[4] = n.y, r[5] = n.z, r[6] = e.x, r[7] = e.y, r[8] = n.z, r[9] = n.x, r[10] = e.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = e.z, r[15] = e.x, r[16] = n.y, r[17] = e.z, r[18] = e.x, r[19] = e.y, r[20] = e.z, r[21] = n.x, r[22] = e.y, r[23] = e.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();\n        }\n        setFromObject(t) {\n            return this.object = t, this.update(), this;\n        }\n        copy(t) {\n            return Za.prototype.copy.call(this, t), this.object = t.object, this;\n        }\n    }\n    const Yh = new zt;\n    let Jh, Zh;\n    class Qh extends Za {\n        constructor(t = 1){\n            const e = [\n                0,\n                0,\n                0,\n                t,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                t,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                t\n            ], n = new En;\n            n.setAttribute(\"position\", new vn(e, 3)), n.setAttribute(\"color\", new vn([\n                1,\n                0,\n                0,\n                1,\n                .6,\n                0,\n                0,\n                1,\n                0,\n                .6,\n                1,\n                0,\n                0,\n                0,\n                1,\n                0,\n                .6,\n                1\n            ], 3));\n            super(n, new Ga({\n                vertexColors: !0,\n                toneMapped: !1\n            })), this.type = \"AxesHelper\";\n        }\n        setColors(t, e, n) {\n            const i = new rn, r = this.geometry.attributes.color.array;\n            return i.set(t), i.toArray(r, 0), i.toArray(r, 3), i.set(e), i.toArray(r, 6), i.toArray(r, 9), i.set(n), i.toArray(r, 12), i.toArray(r, 15), this.geometry.attributes.color.needsUpdate = !0, this;\n        }\n        dispose() {\n            this.geometry.dispose(), this.material.dispose();\n        }\n    }\n    const Kh = new Float32Array(1), $h = new Int32Array(Kh.buffer);\n    _o.create = function(t, e) {\n        return console.log(\"THREE.Curve.create() has been deprecated\"), t.prototype = Object.create(_o.prototype), t.prototype.constructor = t, t.prototype.getPoint = e, t;\n    }, Go.prototype.fromPoints = function(t) {\n        return console.warn(\"THREE.Path: .fromPoints() has been renamed to .setFromPoints().\"), this.setFromPoints(t);\n    }, Uh.prototype.setColors = function() {\n        console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\");\n    }, Nh.prototype.update = function() {\n        console.error(\"THREE.SkeletonHelper: update() no longer needs to be called.\");\n    }, ac.prototype.extractUrlBase = function(t) {\n        return console.warn(\"THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.\"), Dc.extractUrlBase(t);\n    }, ac.Handlers = {\n        add: function() {\n            console.error(\"THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.\");\n        },\n        get: function() {\n            console.error(\"THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.\");\n        }\n    }, Eh.prototype.center = function(t) {\n        return console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\"), this.getCenter(t);\n    }, Eh.prototype.empty = function() {\n        return console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\"), this.isEmpty();\n    }, Eh.prototype.isIntersectionBox = function(t) {\n        return console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\"), this.intersectsBox(t);\n    }, Eh.prototype.size = function(t) {\n        return console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\"), this.getSize(t);\n    }, Ot.prototype.center = function(t) {\n        return console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\"), this.getCenter(t);\n    }, Ot.prototype.empty = function() {\n        return console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\"), this.isEmpty();\n    }, Ot.prototype.isIntersectionBox = function(t) {\n        return console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\"), this.intersectsBox(t);\n    }, Ot.prototype.isIntersectionSphere = function(t) {\n        return console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\"), this.intersectsSphere(t);\n    }, Ot.prototype.size = function(t) {\n        return console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\"), this.getSize(t);\n    }, ie.prototype.empty = function() {\n        return console.warn(\"THREE.Sphere: .empty() has been renamed to .isEmpty().\"), this.isEmpty();\n    }, ci.prototype.setFromMatrix = function(t) {\n        return console.warn(\"THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().\"), this.setFromProjectionMatrix(t);\n    }, Rh.prototype.center = function(t) {\n        return console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\"), this.getCenter(t);\n    }, xt.prototype.flattenToArrayOffset = function(t, e) {\n        return console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"), this.toArray(t, e);\n    }, xt.prototype.multiplyVector3 = function(t) {\n        return console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\"), t.applyMatrix3(this);\n    }, xt.prototype.multiplyVector3Array = function() {\n        console.error(\"THREE.Matrix3: .multiplyVector3Array() has been removed.\");\n    }, xt.prototype.applyToBufferAttribute = function(t) {\n        return console.warn(\"THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.\"), t.applyMatrix3(this);\n    }, xt.prototype.applyToVector3Array = function() {\n        console.error(\"THREE.Matrix3: .applyToVector3Array() has been removed.\");\n    }, xt.prototype.getInverse = function(t) {\n        return console.warn(\"THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.\"), this.copy(t).invert();\n    }, de.prototype.extractPosition = function(t) {\n        return console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\"), this.copyPosition(t);\n    }, de.prototype.flattenToArrayOffset = function(t, e) {\n        return console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"), this.toArray(t, e);\n    }, de.prototype.getPosition = function() {\n        return console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\"), (new zt).setFromMatrixColumn(this, 3);\n    }, de.prototype.setRotationFromQuaternion = function(t) {\n        return console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\"), this.makeRotationFromQuaternion(t);\n    }, de.prototype.multiplyToArray = function() {\n        console.warn(\"THREE.Matrix4: .multiplyToArray() has been removed.\");\n    }, de.prototype.multiplyVector3 = function(t) {\n        return console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.\"), t.applyMatrix4(this);\n    }, de.prototype.multiplyVector4 = function(t) {\n        return console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\"), t.applyMatrix4(this);\n    }, de.prototype.multiplyVector3Array = function() {\n        console.error(\"THREE.Matrix4: .multiplyVector3Array() has been removed.\");\n    }, de.prototype.rotateAxis = function(t) {\n        console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\"), t.transformDirection(this);\n    }, de.prototype.crossVector = function(t) {\n        return console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\"), t.applyMatrix4(this);\n    }, de.prototype.translate = function() {\n        console.error(\"THREE.Matrix4: .translate() has been removed.\");\n    }, de.prototype.rotateX = function() {\n        console.error(\"THREE.Matrix4: .rotateX() has been removed.\");\n    }, de.prototype.rotateY = function() {\n        console.error(\"THREE.Matrix4: .rotateY() has been removed.\");\n    }, de.prototype.rotateZ = function() {\n        console.error(\"THREE.Matrix4: .rotateZ() has been removed.\");\n    }, de.prototype.rotateByAxis = function() {\n        console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\");\n    }, de.prototype.applyToBufferAttribute = function(t) {\n        return console.warn(\"THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.\"), t.applyMatrix4(this);\n    }, de.prototype.applyToVector3Array = function() {\n        console.error(\"THREE.Matrix4: .applyToVector3Array() has been removed.\");\n    }, de.prototype.makeFrustum = function(t, e, n, i, r, s) {\n        return console.warn(\"THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.\"), this.makePerspective(t, e, i, n, r, s);\n    }, de.prototype.getInverse = function(t) {\n        return console.warn(\"THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.\"), this.copy(t).invert();\n    }, ai.prototype.isIntersectionLine = function(t) {\n        return console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\"), this.intersectsLine(t);\n    }, Nt.prototype.multiplyVector3 = function(t) {\n        return console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\"), t.applyQuaternion(this);\n    }, Nt.prototype.inverse = function() {\n        return console.warn(\"THREE.Quaternion: .inverse() has been renamed to invert().\"), this.invert();\n    }, ue.prototype.isIntersectionBox = function(t) {\n        return console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\"), this.intersectsBox(t);\n    }, ue.prototype.isIntersectionPlane = function(t) {\n        return console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\"), this.intersectsPlane(t);\n    }, ue.prototype.isIntersectionSphere = function(t) {\n        return console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\"), this.intersectsSphere(t);\n    }, Ye.prototype.area = function() {\n        return console.warn(\"THREE.Triangle: .area() has been renamed to .getArea().\"), this.getArea();\n    }, Ye.prototype.barycoordFromPoint = function(t, e) {\n        return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"), this.getBarycoord(t, e);\n    }, Ye.prototype.midpoint = function(t) {\n        return console.warn(\"THREE.Triangle: .midpoint() has been renamed to .getMidpoint().\"), this.getMidpoint(t);\n    }, Ye.prototypenormal = function(t) {\n        return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"), this.getNormal(t);\n    }, Ye.prototype.plane = function(t) {\n        return console.warn(\"THREE.Triangle: .plane() has been renamed to .getPlane().\"), this.getPlane(t);\n    }, Ye.barycoordFromPoint = function(t, e, n, i, r) {\n        return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"), Ye.getBarycoord(t, e, n, i, r);\n    }, Ye.normal = function(t, e, n, i) {\n        return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"), Ye.getNormal(t, e, n, i);\n    }, ko.prototype.extractAllPoints = function(t) {\n        return console.warn(\"THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.\"), this.extractPoints(t);\n    }, ko.prototype.extrude = function(t) {\n        return console.warn(\"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\"), new vl(this, t);\n    }, ko.prototype.makeGeometry = function(t) {\n        return console.warn(\"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\"), new wl(this, t);\n    }, yt.prototype.fromAttribute = function(t, e, n) {\n        return console.warn(\"THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().\"), this.fromBufferAttribute(t, e, n);\n    }, yt.prototype.distanceToManhattan = function(t) {\n        return console.warn(\"THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"), this.manhattanDistanceTo(t);\n    }, yt.prototype.lengthManhattan = function() {\n        return console.warn(\"THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().\"), this.manhattanLength();\n    }, zt.prototype.setEulerFromRotationMatrix = function() {\n        console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\");\n    }, zt.prototype.setEulerFromQuaternion = function() {\n        console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\");\n    }, zt.prototype.getPositionFromMatrix = function(t) {\n        return console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\"), this.setFromMatrixPosition(t);\n    }, zt.prototype.getScaleFromMatrix = function(t) {\n        return console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\"), this.setFromMatrixScale(t);\n    }, zt.prototype.getColumnFromMatrix = function(t, e) {\n        return console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\"), this.setFromMatrixColumn(e, t);\n    }, zt.prototype.applyProjection = function(t) {\n        return console.warn(\"THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.\"), this.applyMatrix4(t);\n    }, zt.prototype.fromAttribute = function(t, e, n) {\n        return console.warn(\"THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().\"), this.fromBufferAttribute(t, e, n);\n    }, zt.prototype.distanceToManhattan = function(t) {\n        return console.warn(\"THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"), this.manhattanDistanceTo(t);\n    }, zt.prototype.lengthManhattan = function() {\n        return console.warn(\"THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().\"), this.manhattanLength();\n    }, Ct.prototype.fromAttribute = function(t, e, n) {\n        return console.warn(\"THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().\"), this.fromBufferAttribute(t, e, n);\n    }, Ct.prototype.lengthManhattan = function() {\n        return console.warn(\"THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().\"), this.manhattanLength();\n    }, Fe.prototype.getChildByName = function(t) {\n        return console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\"), this.getObjectByName(t);\n    }, Fe.prototype.renderDepth = function() {\n        console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\");\n    }, Fe.prototype.translate = function(t, e) {\n        return console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\"), this.translateOnAxis(e, t);\n    }, Fe.prototype.getWorldRotation = function() {\n        console.error(\"THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.\");\n    }, Fe.prototype.applyMatrix = function(t) {\n        return console.warn(\"THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().\"), this.applyMatrix4(t);\n    }, Object.defineProperties(Fe.prototype, {\n        eulerOrder: {\n            get: function() {\n                return console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"), this.rotation.order;\n            },\n            set: function(t) {\n                console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"), this.rotation.order = t;\n            }\n        },\n        useQuaternion: {\n            get: function() {\n                console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n            },\n            set: function() {\n                console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n            }\n        }\n    }), Wn.prototype.setDrawMode = function() {\n        console.error(\"THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.\");\n    }, Object.defineProperties(Wn.prototype, {\n        drawMode: {\n            get: function() {\n                return console.error(\"THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.\"), 0;\n            },\n            set: function() {\n                console.error(\"THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.\");\n            }\n        }\n    }), Ra.prototype.initBones = function() {\n        console.error(\"THREE.SkinnedMesh: initBones() has been removed.\");\n    }, Kn.prototype.setLens = function(t, e) {\n        console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\"), void 0 !== e && (this.filmGauge = e), this.setFocalLength(t);\n    }, Object.defineProperties(pc.prototype, {\n        onlyShadow: {\n            set: function() {\n                console.warn(\"THREE.Light: .onlyShadow has been removed.\");\n            }\n        },\n        shadowCameraFov: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\"), this.shadow.camera.fov = t;\n            }\n        },\n        shadowCameraLeft: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\"), this.shadow.camera.left = t;\n            }\n        },\n        shadowCameraRight: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\"), this.shadow.camera.right = t;\n            }\n        },\n        shadowCameraTop: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\"), this.shadow.camera.top = t;\n            }\n        },\n        shadowCameraBottom: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\"), this.shadow.camera.bottom = t;\n            }\n        },\n        shadowCameraNear: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\"), this.shadow.camera.near = t;\n            }\n        },\n        shadowCameraFar: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\"), this.shadow.camera.far = t;\n            }\n        },\n        shadowCameraVisible: {\n            set: function() {\n                console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\");\n            }\n        },\n        shadowBias: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\"), this.shadow.bias = t;\n            }\n        },\n        shadowDarkness: {\n            set: function() {\n                console.warn(\"THREE.Light: .shadowDarkness has been removed.\");\n            }\n        },\n        shadowMapWidth: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\"), this.shadow.mapSize.width = t;\n            }\n        },\n        shadowMapHeight: {\n            set: function(t) {\n                console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\"), this.shadow.mapSize.height = t;\n            }\n        }\n    }), Object.defineProperties(ln.prototype, {\n        length: {\n            get: function() {\n                return console.warn(\"THREE.BufferAttribute: .length has been deprecated. Use .count instead.\"), this.array.length;\n            }\n        },\n        dynamic: {\n            get: function() {\n                return console.warn(\"THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.\"), this.usage === nt;\n            },\n            set: function() {\n                console.warn(\"THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.\"), this.setUsage(nt);\n            }\n        }\n    }), ln.prototype.setDynamic = function(t) {\n        return console.warn(\"THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.\"), this.setUsage(!0 === t ? nt : et), this;\n    }, ln.prototype.copyIndicesArray = function() {\n        console.error(\"THREE.BufferAttribute: .copyIndicesArray() has been removed.\");\n    }, ln.prototype.setArray = function() {\n        console.error(\"THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers\");\n    }, En.prototype.addIndex = function(t) {\n        console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\"), this.setIndex(t);\n    }, En.prototype.addAttribute = function(t, e) {\n        return console.warn(\"THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().\"), e && e.isBufferAttribute || e && e.isInterleavedBufferAttribute ? \"index\" === t ? (console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"), this.setIndex(e), this) : this.setAttribute(t, e) : (console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"), this.setAttribute(t, new ln(arguments[1], arguments[2])));\n    }, En.prototype.addDrawCall = function(t, e, n) {\n        void 0 !== n && console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\"), console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\"), this.addGroup(t, e);\n    }, En.prototype.clearDrawCalls = function() {\n        console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\"), this.clearGroups();\n    }, En.prototype.computeOffsets = function() {\n        console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\");\n    }, En.prototype.removeAttribute = function(t) {\n        return console.warn(\"THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().\"), this.deleteAttribute(t);\n    }, En.prototype.applyMatrix = function(t) {\n        return console.warn(\"THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().\"), this.applyMatrix4(t);\n    }, Object.defineProperties(En.prototype, {\n        drawcalls: {\n            get: function() {\n                return console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\"), this.groups;\n            }\n        },\n        offsets: {\n            get: function() {\n                return console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\"), this.groups;\n            }\n        }\n    }), na.prototype.setDynamic = function(t) {\n        return console.warn(\"THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.\"), this.setUsage(!0 === t ? nt : et), this;\n    }, na.prototype.setArray = function() {\n        console.error(\"THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers\");\n    }, vl.prototype.getArrays = function() {\n        console.error(\"THREE.ExtrudeGeometry: .getArrays() has been removed.\");\n    }, vl.prototype.addShapeList = function() {\n        console.error(\"THREE.ExtrudeGeometry: .addShapeList() has been removed.\");\n    }, vl.prototype.addShape = function() {\n        console.error(\"THREE.ExtrudeGeometry: .addShape() has been removed.\");\n    }, ea.prototype.dispose = function() {\n        console.error(\"THREE.Scene: .dispose() has been removed.\");\n    }, _h.prototype.onUpdate = function() {\n        return console.warn(\"THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.\"), this;\n    }, Object.defineProperties(Ze.prototype, {\n        wrapAround: {\n            get: function() {\n                console.warn(\"THREE.Material: .wrapAround has been removed.\");\n            },\n            set: function() {\n                console.warn(\"THREE.Material: .wrapAround has been removed.\");\n            }\n        },\n        overdraw: {\n            get: function() {\n                console.warn(\"THREE.Material: .overdraw has been removed.\");\n            },\n            set: function() {\n                console.warn(\"THREE.Material: .overdraw has been removed.\");\n            }\n        },\n        wrapRGB: {\n            get: function() {\n                return console.warn(\"THREE.Material: .wrapRGB has been removed.\"), new rn;\n            }\n        },\n        shading: {\n            get: function() {\n                console.error(\"THREE.\" + this.type + \": .shading has been removed. Use the boolean .flatShading instead.\");\n            },\n            set: function(t) {\n                console.warn(\"THREE.\" + this.type + \": .shading has been removed. Use the boolean .flatShading instead.\"), this.flatShading = 1 === t;\n            }\n        },\n        stencilMask: {\n            get: function() {\n                return console.warn(\"THREE.\" + this.type + \": .stencilMask has been removed. Use .stencilFuncMask instead.\"), this.stencilFuncMask;\n            },\n            set: function(t) {\n                console.warn(\"THREE.\" + this.type + \": .stencilMask has been removed. Use .stencilFuncMask instead.\"), this.stencilFuncMask = t;\n            }\n        },\n        vertexTangents: {\n            get: function() {\n                console.warn(\"THREE.\" + this.type + \": .vertexTangents has been removed.\");\n            },\n            set: function() {\n                console.warn(\"THREE.\" + this.type + \": .vertexTangents has been removed.\");\n            }\n        }\n    }), Object.defineProperties(Zn.prototype, {\n        derivatives: {\n            get: function() {\n                return console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"), this.extensions.derivatives;\n            },\n            set: function(t) {\n                console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"), this.extensions.derivatives = t;\n            }\n        }\n    }), Qs.prototype.clearTarget = function(t, e, n, i) {\n        console.warn(\"THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.\"), this.setRenderTarget(t), this.clear(e, n, i);\n    }, Qs.prototype.animate = function(t) {\n        console.warn(\"THREE.WebGLRenderer: .animate() is now .setAnimationLoop().\"), this.setAnimationLoop(t);\n    }, Qs.prototype.getCurrentRenderTarget = function() {\n        return console.warn(\"THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().\"), this.getRenderTarget();\n    }, Qs.prototype.getMaxAnisotropy = function() {\n        return console.warn(\"THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().\"), this.capabilities.getMaxAnisotropy();\n    }, Qs.prototype.getPrecision = function() {\n        return console.warn(\"THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.\"), this.capabilities.precision;\n    }, Qs.prototype.resetGLState = function() {\n        return console.warn(\"THREE.WebGLRenderer: .resetGLState() is now .state.reset().\"), this.state.reset();\n    }, Qs.prototype.supportsFloatTextures = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\"), this.extensions.get(\"OES_texture_float\");\n    }, Qs.prototype.supportsHalfFloatTextures = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\"), this.extensions.get(\"OES_texture_half_float\");\n    }, Qs.prototype.supportsStandardDerivatives = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\"), this.extensions.get(\"OES_standard_derivatives\");\n    }, Qs.prototype.supportsCompressedTextureS3TC = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\"), this.extensions.get(\"WEBGL_compressed_texture_s3tc\");\n    }, Qs.prototype.supportsCompressedTexturePVRTC = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\"), this.extensions.get(\"WEBGL_compressed_texture_pvrtc\");\n    }, Qs.prototype.supportsBlendMinMax = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\"), this.extensions.get(\"EXT_blend_minmax\");\n    }, Qs.prototype.supportsVertexTextures = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.\"), this.capabilities.vertexTextures;\n    }, Qs.prototype.supportsInstancedArrays = function() {\n        return console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\"), this.extensions.get(\"ANGLE_instanced_arrays\");\n    }, Qs.prototype.enableScissorTest = function(t) {\n        console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\"), this.setScissorTest(t);\n    }, Qs.prototype.initMaterial = function() {\n        console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\");\n    }, Qs.prototype.addPrePlugin = function() {\n        console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\");\n    }, Qs.prototype.addPostPlugin = function() {\n        console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\");\n    }, Qs.prototype.updateShadowMap = function() {\n        console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\");\n    }, Qs.prototype.setFaceCulling = function() {\n        console.warn(\"THREE.WebGLRenderer: .setFaceCulling() has been removed.\");\n    }, Qs.prototype.allocTextureUnit = function() {\n        console.warn(\"THREE.WebGLRenderer: .allocTextureUnit() has been removed.\");\n    }, Qs.prototype.setTexture = function() {\n        console.warn(\"THREE.WebGLRenderer: .setTexture() has been removed.\");\n    }, Qs.prototype.setTexture2D = function() {\n        console.warn(\"THREE.WebGLRenderer: .setTexture2D() has been removed.\");\n    }, Qs.prototype.setTextureCube = function() {\n        console.warn(\"THREE.WebGLRenderer: .setTextureCube() has been removed.\");\n    }, Qs.prototype.getActiveMipMapLevel = function() {\n        return console.warn(\"THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().\"), this.getActiveMipmapLevel();\n    }, Object.defineProperties(Qs.prototype, {\n        shadowMapEnabled: {\n            get: function() {\n                return this.shadowMap.enabled;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\"), this.shadowMap.enabled = t;\n            }\n        },\n        shadowMapType: {\n            get: function() {\n                return this.shadowMap.type;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\"), this.shadowMap.type = t;\n            }\n        },\n        shadowMapCullFace: {\n            get: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\");\n            },\n            set: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\");\n            }\n        },\n        context: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.\"), this.getContext();\n            }\n        },\n        vr: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderer: .vr has been renamed to .xr\"), this.xr;\n            }\n        },\n        gammaInput: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.\"), !1;\n            },\n            set: function() {\n                console.warn(\"THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.\");\n            }\n        },\n        gammaOutput: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.\"), !1;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.\"), this.outputEncoding = !0 === t ? Y : X;\n            }\n        },\n        toneMappingWhitePoint: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.\"), 1;\n            },\n            set: function() {\n                console.warn(\"THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.\");\n            }\n        }\n    }), Object.defineProperties(Gs.prototype, {\n        cullFace: {\n            get: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\");\n            },\n            set: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\");\n            }\n        },\n        renderReverseSided: {\n            get: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\");\n            },\n            set: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\");\n            }\n        },\n        renderSingleSided: {\n            get: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\");\n            },\n            set: function() {\n                console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\");\n            }\n        }\n    }), Object.defineProperties(Pt.prototype, {\n        wrapS: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"), this.texture.wrapS;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"), this.texture.wrapS = t;\n            }\n        },\n        wrapT: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"), this.texture.wrapT;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"), this.texture.wrapT = t;\n            }\n        },\n        magFilter: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"), this.texture.magFilter;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"), this.texture.magFilter = t;\n            }\n        },\n        minFilter: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"), this.texture.minFilter;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"), this.texture.minFilter = t;\n            }\n        },\n        anisotropy: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"), this.texture.anisotropy;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"), this.texture.anisotropy = t;\n            }\n        },\n        offset: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"), this.texture.offset;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"), this.texture.offset = t;\n            }\n        },\n        repeat: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"), this.texture.repeat;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"), this.texture.repeat = t;\n            }\n        },\n        format: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"), this.texture.format;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"), this.texture.format = t;\n            }\n        },\n        type: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"), this.texture.type;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"), this.texture.type = t;\n            }\n        },\n        generateMipmaps: {\n            get: function() {\n                return console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"), this.texture.generateMipmaps;\n            },\n            set: function(t) {\n                console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"), this.texture.generateMipmaps = t;\n            }\n        }\n    }), $c.prototype.load = function(t) {\n        console.warn(\"THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.\");\n        const e = this;\n        return (new kc).load(t, function(t) {\n            e.setBuffer(t);\n        }), this;\n    }, rh.prototype.getData = function() {\n        return console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\"), this.getFrequencyData();\n    }, ti.prototype.updateCubeMap = function(t, e) {\n        return console.warn(\"THREE.CubeCamera: .updateCubeMap() is now .update().\"), this.update(t, e);\n    }, ti.prototype.clear = function(t, e, n, i) {\n        return console.warn(\"THREE.CubeCamera: .clear() is now .renderTarget.clear().\"), this.renderTarget.clear(t, e, n, i);\n    }, Et.crossOrigin = void 0, Et.loadTexture = function(t, e, n, i) {\n        console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");\n        const r = new dc;\n        r.setCrossOrigin(this.crossOrigin);\n        const s = r.load(t, n, void 0, i);\n        return e && (s.mapping = e), s;\n    }, Et.loadTextureCube = function(t, e, n, i) {\n        console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");\n        const r = new hc;\n        r.setCrossOrigin(this.crossOrigin);\n        const s = r.load(t, n, void 0, i);\n        return e && (s.mapping = e), s;\n    }, Et.loadCompressedTexture = function() {\n        console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\");\n    }, Et.loadCompressedTextureCube = function() {\n        console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\");\n    };\n    const tu = {\n        createMultiMaterialObject: function() {\n            console.error(\"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\");\n        },\n        detach: function() {\n            console.error(\"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\");\n        },\n        attach: function() {\n            console.error(\"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\");\n        }\n    };\n    \"undefined\" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent(\"register\", {\n        detail: {\n            revision: e\n        }\n    })), \"undefined\" != typeof window && (window.__THREE__ ? console.warn(\"WARNING: Multiple instances of Three.js being imported.\") : window.__THREE__ = e), t.ACESFilmicToneMapping = 4, t.AddEquation = n, t.AddOperation = 2, t.AdditiveAnimationBlendMode = q, t.AdditiveBlending = 2, t.AlphaFormat = 1021, t.AlwaysDepth = 1, t.AlwaysStencilFunc = 519, t.AmbientLight = Lc, t.AmbientLightProbe = Wc, t.AnimationClip = ec, t.AnimationLoader = class extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = this, s = new lc(this.manager);\n            s.setPath(this.path), s.setRequestHeader(this.requestHeader), s.setWithCredentials(this.withCredentials), s.load(t, function(n) {\n                try {\n                    e(r.parse(JSON.parse(n)));\n                } catch (e) {\n                    i ? i(e) : console.error(e), r.manager.itemError(t);\n                }\n            }, n, i);\n        }\n        parse(t) {\n            const e = [];\n            for(let n = 0; n < t.length; n++){\n                const i = ec.parse(t[n]);\n                e.push(i);\n            }\n            return e;\n        }\n    }, t.AnimationMixer = xh, t.AnimationObjectGroup = vh, t.AnimationUtils = kl, t.ArcCurve = bo, t.ArrayCamera = js, t.ArrowHelper = class extends Fe {\n        constructor(t = new zt(0, 0, 1), e = new zt(0, 0, 0), n = 1, i = 16776960, r = .2 * n, s = .2 * r){\n            super(), this.type = \"ArrowHelper\", void 0 === Jh && (Jh = new En, Jh.setAttribute(\"position\", new vn([\n                0,\n                0,\n                0,\n                0,\n                1,\n                0\n            ], 3)), Zh = new ho(0, .5, 1, 5, 1), Zh.translate(0, -0.5, 0)), this.position.copy(e), this.line = new Xa(Jh, new Ga({\n                color: i,\n                toneMapped: !1\n            })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Wn(Zh, new sn({\n                color: i,\n                toneMapped: !1\n            })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(t), this.setLength(n, r, s);\n        }\n        setDirection(t) {\n            if (t.y > .99999) this.quaternion.set(0, 0, 0, 1);\n            else if (t.y < -0.99999) this.quaternion.set(1, 0, 0, 0);\n            else {\n                Yh.set(t.z, 0, -t.x).normalize();\n                const e = Math.acos(t.y);\n                this.quaternion.setFromAxisAngle(Yh, e);\n            }\n        }\n        setLength(t, e = .2 * t, n = .2 * e) {\n            this.line.scale.set(1, Math.max(1e-4, t - e), 1), this.line.updateMatrix(), this.cone.scale.set(n, e, n), this.cone.position.y = t, this.cone.updateMatrix();\n        }\n        setColor(t) {\n            this.line.material.color.set(t), this.cone.material.color.set(t);\n        }\n        copy(t) {\n            return super.copy(t, !1), this.line.copy(t.line), this.cone.copy(t.cone), this;\n        }\n    }, t.Audio = $c, t.AudioAnalyser = rh, t.AudioContext = Gc, t.AudioListener = class extends Fe {\n        constructor(){\n            super(), this.type = \"AudioListener\", this.context = Gc.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Xc;\n        }\n        getInput() {\n            return this.gain;\n        }\n        removeFilter() {\n            return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;\n        }\n        getFilter() {\n            return this.filter;\n        }\n        setFilter(t) {\n            return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = t, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;\n        }\n        getMasterVolume() {\n            return this.gain.gain.value;\n        }\n        setMasterVolume(t) {\n            return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01), this;\n        }\n        updateMatrixWorld(t) {\n            super.updateMatrixWorld(t);\n            const e = this.context.listener, n = this.up;\n            if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Jc, Zc, Qc), Kc.set(0, 0, -1).applyQuaternion(Zc), e.positionX) {\n                const t = this.context.currentTime + this.timeDelta;\n                e.positionX.linearRampToValueAtTime(Jc.x, t), e.positionY.linearRampToValueAtTime(Jc.y, t), e.positionZ.linearRampToValueAtTime(Jc.z, t), e.forwardX.linearRampToValueAtTime(Kc.x, t), e.forwardY.linearRampToValueAtTime(Kc.y, t), e.forwardZ.linearRampToValueAtTime(Kc.z, t), e.upX.linearRampToValueAtTime(n.x, t), e.upY.linearRampToValueAtTime(n.y, t), e.upZ.linearRampToValueAtTime(n.z, t);\n            } else e.setPosition(Jc.x, Jc.y, Jc.z), e.setOrientation(Kc.x, Kc.y, Kc.z, n.x, n.y, n.z);\n        }\n    }, t.AudioLoader = kc, t.AxesHelper = Qh, t.AxisHelper = function(t) {\n        return console.warn(\"THREE.AxisHelper has been renamed to THREE.AxesHelper.\"), new Qh(t);\n    }, t.BackSide = 1, t.BasicDepthPacking = 3200, t.BasicShadowMap = 0, t.BinaryTextureLoader = function(t) {\n        return console.warn(\"THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.\"), new uc(t);\n    }, t.Bone = Ca, t.BooleanKeyframeTrack = Yl, t.BoundingBoxHelper = function(t, e) {\n        return console.warn(\"THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.\"), new Xh(t, e);\n    }, t.Box2 = Eh, t.Box3 = Ot, t.Box3Helper = class extends Za {\n        constructor(t, e = 16776960){\n            const n = new Uint16Array([\n                0,\n                1,\n                1,\n                2,\n                2,\n                3,\n                3,\n                0,\n                4,\n                5,\n                5,\n                6,\n                6,\n                7,\n                7,\n                4,\n                0,\n                4,\n                1,\n                5,\n                2,\n                6,\n                3,\n                7\n            ]), i = new En;\n            i.setIndex(new ln(n, 1)), i.setAttribute(\"position\", new vn([\n                1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                -1,\n                -1,\n                -1,\n                -1,\n                1,\n                -1,\n                -1\n            ], 3)), super(i, new Ga({\n                color: e,\n                toneMapped: !1\n            })), this.box = t, this.type = \"Box3Helper\", this.geometry.computeBoundingSphere();\n        }\n        updateMatrixWorld(t) {\n            const e = this.box;\n            e.isEmpty() || (e.getCenter(this.position), e.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(t));\n        }\n    }, t.BoxBufferGeometry = qn, t.BoxGeometry = qn, t.BoxHelper = Xh, t.BufferAttribute = ln, t.BufferGeometry = En, t.BufferGeometryLoader = zc, t.ByteType = 1010, t.Cache = ic, t.Camera = Qn, t.CameraHelper = class extends Za {\n        constructor(t){\n            const e = new En, n = new Ga({\n                color: 16777215,\n                vertexColors: !0,\n                toneMapped: !1\n            }), i = [], r = [], s = {}, a = new rn(16755200), o = new rn(16711680), l = new rn(43775), c = new rn(16777215), h = new rn(3355443);\n            function u(t, e, n) {\n                d(t, n), d(e, n);\n            }\n            function d(t, e) {\n                i.push(0, 0, 0), r.push(e.r, e.g, e.b), void 0 === s[t] && (s[t] = []), s[t].push(i.length / 3 - 1);\n            }\n            u(\"n1\", \"n2\", a), u(\"n2\", \"n4\", a), u(\"n4\", \"n3\", a), u(\"n3\", \"n1\", a), u(\"f1\", \"f2\", a), u(\"f2\", \"f4\", a), u(\"f4\", \"f3\", a), u(\"f3\", \"f1\", a), u(\"n1\", \"f1\", a), u(\"n2\", \"f2\", a), u(\"n3\", \"f3\", a), u(\"n4\", \"f4\", a), u(\"p\", \"n1\", o), u(\"p\", \"n2\", o), u(\"p\", \"n3\", o), u(\"p\", \"n4\", o), u(\"u1\", \"u2\", l), u(\"u2\", \"u3\", l), u(\"u3\", \"u1\", l), u(\"c\", \"t\", c), u(\"p\", \"c\", h), u(\"cn1\", \"cn2\", h), u(\"cn3\", \"cn4\", h), u(\"cf1\", \"cf2\", h), u(\"cf3\", \"cf4\", h), e.setAttribute(\"position\", new vn(i, 3)), e.setAttribute(\"color\", new vn(r, 3)), super(e, n), this.type = \"CameraHelper\", this.camera = t, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = s, this.update();\n        }\n        update() {\n            const t = this.geometry, e = this.pointMap;\n            Wh.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), jh(\"c\", e, t, Wh, 0, 0, -1), jh(\"t\", e, t, Wh, 0, 0, 1), jh(\"n1\", e, t, Wh, -1, -1, -1), jh(\"n2\", e, t, Wh, 1, -1, -1), jh(\"n3\", e, t, Wh, -1, 1, -1), jh(\"n4\", e, t, Wh, 1, 1, -1), jh(\"f1\", e, t, Wh, -1, -1, 1), jh(\"f2\", e, t, Wh, 1, -1, 1), jh(\"f3\", e, t, Wh, -1, 1, 1), jh(\"f4\", e, t, Wh, 1, 1, 1), jh(\"u1\", e, t, Wh, .7, 1.1, -1), jh(\"u2\", e, t, Wh, -0.7, 1.1, -1), jh(\"u3\", e, t, Wh, 0, 2, -1), jh(\"cf1\", e, t, Wh, -1, 0, 1), jh(\"cf2\", e, t, Wh, 1, 0, 1), jh(\"cf3\", e, t, Wh, 0, -1, 1), jh(\"cf4\", e, t, Wh, 0, 1, 1), jh(\"cn1\", e, t, Wh, -1, 0, -1), jh(\"cn2\", e, t, Wh, 1, 0, -1), jh(\"cn3\", e, t, Wh, 0, -1, -1), jh(\"cn4\", e, t, Wh, 0, 1, -1), t.getAttribute(\"position\").needsUpdate = !0;\n        }\n        dispose() {\n            this.geometry.dispose(), this.material.dispose();\n        }\n    }, t.CanvasRenderer = function() {\n        console.error(\"THREE.CanvasRenderer has been removed\");\n    }, t.CanvasTexture = oo, t.CatmullRomCurve3 = Lo, t.CineonToneMapping = 3, t.CircleBufferGeometry = co, t.CircleGeometry = co, t.ClampToEdgeWrapping = u, t.Clock = Xc, t.Color = rn, t.ColorKeyframeTrack = Jl, t.CompressedTexture = ao, t.CompressedTextureLoader = class extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = this, s = [], a = new ao, o = new lc(this.manager);\n            o.setPath(this.path), o.setResponseType(\"arraybuffer\"), o.setRequestHeader(this.requestHeader), o.setWithCredentials(r.withCredentials);\n            let l = 0;\n            function c(c) {\n                o.load(t[c], function(t) {\n                    const n = r.parse(t, !0);\n                    s[c] = {\n                        width: n.width,\n                        height: n.height,\n                        format: n.format,\n                        mipmaps: n.mipmaps\n                    }, l += 1, 6 === l && (1 === n.mipmapCount && (a.minFilter = g), a.image = s, a.format = n.format, a.needsUpdate = !0, e && e(a));\n                }, n, i);\n            }\n            if (Array.isArray(t)) for(let e = 0, n = t.length; e < n; ++e)c(e);\n            else o.load(t, function(t) {\n                const n = r.parse(t, !0);\n                if (n.isCubemap) {\n                    const t = n.mipmaps.length / n.mipmapCount;\n                    for(let e = 0; e < t; e++){\n                        s[e] = {\n                            mipmaps: []\n                        };\n                        for(let t = 0; t < n.mipmapCount; t++)s[e].mipmaps.push(n.mipmaps[e * n.mipmapCount + t]), s[e].format = n.format, s[e].width = n.width, s[e].height = n.height;\n                    }\n                    a.image = s;\n                } else a.image.width = n.width, a.image.height = n.height, a.mipmaps = n.mipmaps;\n                1 === n.mipmapCount && (a.minFilter = g), a.format = n.format, a.needsUpdate = !0, e && e(a);\n            }, n, i);\n            return a;\n        }\n    }, t.ConeBufferGeometry = uo, t.ConeGeometry = uo, t.CubeCamera = ti, t.CubeReflectionMapping = r, t.CubeRefractionMapping = s, t.CubeTexture = ei, t.CubeTextureLoader = hc, t.CubeUVReflectionMapping = l, t.CubeUVRefractionMapping = c, t.CubicBezierCurve = Io, t.CubicBezierCurve3 = Do, t.CubicInterpolant = Wl, t.CullFaceBack = 1, t.CullFaceFront = 2, t.CullFaceFrontBack = 3, t.CullFaceNone = 0, t.Curve = _o, t.CurvePath = Ho, t.CustomBlending = 5, t.CustomToneMapping = 5, t.CylinderBufferGeometry = ho, t.CylinderGeometry = ho, t.Cylindrical = class {\n        constructor(t = 1, e = 0, n = 0){\n            return this.radius = t, this.theta = e, this.y = n, this;\n        }\n        set(t, e, n) {\n            return this.radius = t, this.theta = e, this.y = n, this;\n        }\n        copy(t) {\n            return this.radius = t.radius, this.theta = t.theta, this.y = t.y, this;\n        }\n        setFromVector3(t) {\n            return this.setFromCartesianCoords(t.x, t.y, t.z);\n        }\n        setFromCartesianCoords(t, e, n) {\n            return this.radius = Math.sqrt(t * t + n * n), this.theta = Math.atan2(t, n), this.y = e, this;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }, t.DataTexture = Pa, t.DataTexture2DArray = Ki, t.DataTexture3D = rr, t.DataTextureLoader = uc, t.DataUtils = class {\n        static toHalfFloat(t) {\n            t > 65504 && (console.warn(\"THREE.DataUtils.toHalfFloat(): value exceeds 65504.\"), t = 65504), Kh[0] = t;\n            const e = $h[0];\n            let n = e >> 16 & 32768, i = e >> 12 & 2047;\n            const r = e >> 23 & 255;\n            return r < 103 ? n : r > 142 ? (n |= 31744, n |= (255 == r ? 0 : 1) && 8388607 & e, n) : r < 113 ? (i |= 2048, n |= (i >> 114 - r) + (i >> 113 - r & 1), n) : (n |= r - 112 << 10 | i >> 1, n += 1 & i, n);\n        }\n    }, t.DecrementStencilOp = 7683, t.DecrementWrapStencilOp = 34056, t.DefaultLoadingManager = sc, t.DepthFormat = A, t.DepthStencilFormat = L, t.DepthTexture = lo, t.DirectionalLight = Ac, t.DirectionalLightHelper = class extends Fe {\n        constructor(t, e, n){\n            super(), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, void 0 === e && (e = 1);\n            let i = new En;\n            i.setAttribute(\"position\", new vn([\n                -e,\n                e,\n                0,\n                e,\n                e,\n                0,\n                e,\n                -e,\n                0,\n                -e,\n                -e,\n                0,\n                -e,\n                e,\n                0\n            ], 3));\n            const r = new Ga({\n                fog: !1,\n                toneMapped: !1\n            });\n            this.lightPlane = new Xa(i, r), this.add(this.lightPlane), i = new En, i.setAttribute(\"position\", new vn([\n                0,\n                0,\n                0,\n                0,\n                0,\n                1\n            ], 3)), this.targetLine = new Xa(i, r), this.add(this.targetLine), this.update();\n        }\n        dispose() {\n            this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();\n        }\n        update() {\n            Hh.setFromMatrixPosition(this.light.matrixWorld), Gh.setFromMatrixPosition(this.light.target.matrixWorld), kh.subVectors(Gh, Hh), this.lightPlane.lookAt(Gh), void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(Gh), this.targetLine.scale.z = kh.length();\n        }\n    }, t.DiscreteInterpolant = ql, t.DodecahedronBufferGeometry = mo, t.DodecahedronGeometry = mo, t.DoubleSide = 2, t.DstAlphaFactor = 206, t.DstColorFactor = 208, t.DynamicBufferAttribute = function(t, e) {\n        return console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.\"), new ln(t, e).setUsage(nt);\n    }, t.DynamicCopyUsage = 35050, t.DynamicDrawUsage = nt, t.DynamicReadUsage = 35049, t.EdgesGeometry = xo, t.EdgesHelper = function(t, e) {\n        return console.warn(\"THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.\"), new Za(new xo(t.geometry), new Ga({\n            color: void 0 !== e ? e : 16777215\n        }));\n    }, t.EllipseCurve = Mo, t.EqualDepth = 4, t.EqualStencilFunc = 514, t.EquirectangularReflectionMapping = a, t.EquirectangularRefractionMapping = o, t.Euler = be, t.EventDispatcher = rt, t.ExtrudeBufferGeometry = vl, t.ExtrudeGeometry = vl, t.FaceColors = 1, t.FileLoader = lc, t.FlatShading = 1, t.Float16BufferAttribute = gn, t.Float32Attribute = function(t, e) {\n        return console.warn(\"THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.\"), new vn(t, e);\n    }, t.Float32BufferAttribute = vn, t.Float64Attribute = function(t, e) {\n        return console.warn(\"THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.\"), new yn(t, e);\n    }, t.Float64BufferAttribute = yn, t.FloatType = b, t.Fog = ta, t.FogExp2 = $s, t.Font = function() {\n        console.error(\"THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js\");\n    }, t.FontLoader = function() {\n        console.error(\"THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js\");\n    }, t.FrontSide = 0, t.Frustum = ci, t.GLBufferAttribute = bh, t.GLSL1 = \"100\", t.GLSL3 = it, t.GammaEncoding = J, t.GreaterDepth = 6, t.GreaterEqualDepth = 5, t.GreaterEqualStencilFunc = 518, t.GreaterStencilFunc = 516, t.GridHelper = Uh, t.Group = qs, t.HalfFloatType = w, t.HemisphereLight = mc, t.HemisphereLightHelper = class extends Fe {\n        constructor(t, e, n){\n            super(), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;\n            const i = new Ml(e);\n            i.rotateY(.5 * Math.PI), this.material = new sn({\n                wireframe: !0,\n                fog: !1,\n                toneMapped: !1\n            }), void 0 === this.color && (this.material.vertexColors = !0);\n            const r = i.getAttribute(\"position\"), s = new Float32Array(3 * r.count);\n            i.setAttribute(\"color\", new ln(s, 3)), this.add(new Wn(i, this.material)), this.update();\n        }\n        dispose() {\n            this.children[0].geometry.dispose(), this.children[0].material.dispose();\n        }\n        update() {\n            const t = this.children[0];\n            if (void 0 !== this.color) this.material.color.set(this.color);\n            else {\n                const e = t.geometry.getAttribute(\"color\");\n                Fh.copy(this.light.color), Oh.copy(this.light.groundColor);\n                for(let t = 0, n = e.count; t < n; t++){\n                    const i = t < n / 2 ? Fh : Oh;\n                    e.setXYZ(t, i.r, i.g, i.b);\n                }\n                e.needsUpdate = !0;\n            }\n            t.lookAt(Bh.setFromMatrixPosition(this.light.matrixWorld).negate());\n        }\n    }, t.HemisphereLightProbe = Vc, t.IcosahedronBufferGeometry = xl, t.IcosahedronGeometry = xl, t.ImageBitmapLoader = Uc, t.ImageLoader = cc, t.ImageUtils = Et, t.ImmediateRenderObject = function() {\n        console.error(\"THREE.ImmediateRenderObject has been removed.\");\n    }, t.IncrementStencilOp = 7682, t.IncrementWrapStencilOp = 34055, t.InstancedBufferAttribute = za, t.InstancedBufferGeometry = Nc, t.InstancedInterleavedBuffer = Mh, t.InstancedMesh = Ha, t.Int16Attribute = function(t, e) {\n        return console.warn(\"THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.\"), new dn(t, e);\n    }, t.Int16BufferAttribute = dn, t.Int32Attribute = function(t, e) {\n        return console.warn(\"THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.\"), new mn(t, e);\n    }, t.Int32BufferAttribute = mn, t.Int8Attribute = function(t, e) {\n        return console.warn(\"THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.\"), new cn(t, e);\n    }, t.Int8BufferAttribute = cn, t.IntType = 1013, t.InterleavedBuffer = na, t.InterleavedBufferAttribute = ra, t.Interpolant = Vl, t.InterpolateDiscrete = U, t.InterpolateLinear = H, t.InterpolateSmooth = G, t.InvertStencilOp = 5386, t.JSONLoader = function() {\n        console.error(\"THREE.JSONLoader has been removed.\");\n    }, t.KeepStencilOp = tt, t.KeyframeTrack = Xl, t.LOD = wa, t.LatheBufferGeometry = _l, t.LatheGeometry = _l, t.Layers = we, t.LensFlare = function() {\n        console.error(\"THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js\");\n    }, t.LessDepth = 2, t.LessEqualDepth = 3, t.LessEqualStencilFunc = 515, t.LessStencilFunc = 513, t.Light = pc, t.LightProbe = Pc, t.Line = Xa, t.Line3 = Rh, t.LineBasicMaterial = Ga, t.LineCurve = No, t.LineCurve3 = zo, t.LineDashedMaterial = Hl, t.LineLoop = Qa, t.LinePieces = 1, t.LineSegments = Za, t.LineStrip = 0, t.LinearEncoding = X, t.LinearFilter = g, t.LinearInterpolant = jl, t.LinearMipMapLinearFilter = 1008, t.LinearMipMapNearestFilter = 1007, t.LinearMipmapLinearFilter = y, t.LinearMipmapNearestFilter = v, t.LinearToneMapping = 1, t.Loader = ac, t.LoaderUtils = Dc, t.LoadingManager = rc, t.LogLuvEncoding = 3003, t.LoopOnce = 2200, t.LoopPingPong = 2202, t.LoopRepeat = 2201, t.LuminanceAlphaFormat = 1025, t.LuminanceFormat = 1024, t.MOUSE = {\n        LEFT: 0,\n        MIDDLE: 1,\n        RIGHT: 2,\n        ROTATE: 0,\n        DOLLY: 1,\n        PAN: 2\n    }, t.Material = Ze, t.MaterialLoader = Ic, t.Math = vt, t.MathUtils = vt, t.Matrix3 = xt, t.Matrix4 = de, t.MaxEquation = 104, t.Mesh = Wn, t.MeshBasicMaterial = sn, t.MeshDepthMaterial = Us, t.MeshDistanceMaterial = Hs, t.MeshFaceMaterial = function(t) {\n        return console.warn(\"THREE.MeshFaceMaterial has been removed. Use an Array instead.\"), t;\n    }, t.MeshLambertMaterial = Ol, t.MeshMatcapMaterial = Ul, t.MeshNormalMaterial = Fl, t.MeshPhongMaterial = zl, t.MeshPhysicalMaterial = Nl, t.MeshStandardMaterial = Dl, t.MeshToonMaterial = Bl, t.MinEquation = 103, t.MirroredRepeatWrapping = d, t.MixOperation = 1, t.MultiMaterial = function(t = []) {\n        return console.warn(\"THREE.MultiMaterial has been removed. Use an Array instead.\"), t.isMultiMaterial = !0, t.materials = t, t.clone = function() {\n            return t.slice();\n        }, t;\n    }, t.MultiplyBlending = 4, t.MultiplyOperation = 0, t.NearestFilter = p, t.NearestMipMapLinearFilter = 1005, t.NearestMipMapNearestFilter = 1004, t.NearestMipmapLinearFilter = f, t.NearestMipmapNearestFilter = m, t.NeverDepth = 0, t.NeverStencilFunc = 512, t.NoBlending = 0, t.NoColors = 0, t.NoToneMapping = 0, t.NormalAnimationBlendMode = j, t.NormalBlending = 1, t.NotEqualDepth = 7, t.NotEqualStencilFunc = 517, t.NumberKeyframeTrack = Zl, t.Object3D = Fe, t.ObjectLoader = class extends ac {\n        constructor(t){\n            super(t);\n        }\n        load(t, e, n, i) {\n            const r = this, s = \"\" === this.path ? Dc.extractUrlBase(t) : this.path;\n            this.resourcePath = this.resourcePath || s;\n            const a = new lc(this.manager);\n            a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(t, function(n) {\n                let s = null;\n                try {\n                    s = JSON.parse(n);\n                } catch (e) {\n                    return void 0 !== i && i(e), void console.error(\"THREE:ObjectLoader: Can't parse \" + t + \".\", e.message);\n                }\n                const a = s.metadata;\n                void 0 !== a && void 0 !== a.type && \"geometry\" !== a.type.toLowerCase() ? r.parse(s, e) : console.error(\"THREE.ObjectLoader: Can't load \" + t);\n            }, n, i);\n        }\n        async loadAsync(t, e) {\n            const n = \"\" === this.path ? Dc.extractUrlBase(t) : this.path;\n            this.resourcePath = this.resourcePath || n;\n            const i = new lc(this.manager);\n            i.setPath(this.path), i.setRequestHeader(this.requestHeader), i.setWithCredentials(this.withCredentials);\n            const r = await i.loadAsync(t, e), s = JSON.parse(r), a = s.metadata;\n            if (void 0 === a || void 0 === a.type || \"geometry\" === a.type.toLowerCase()) throw new Error(\"THREE.ObjectLoader: Can't load \" + t);\n            return await this.parseAsync(s);\n        }\n        parse(t, e) {\n            const n = this.parseAnimations(t.animations), i = this.parseShapes(t.shapes), r = this.parseGeometries(t.geometries, i), s = this.parseImages(t.images, function() {\n                void 0 !== e && e(l);\n            }), a = this.parseTextures(t.textures, s), o = this.parseMaterials(t.materials, a), l = this.parseObject(t.object, r, o, a, n), c = this.parseSkeletons(t.skeletons, l);\n            if (this.bindSkeletons(l, c), void 0 !== e) {\n                let t = !1;\n                for(const e in s)if (s[e] instanceof HTMLImageElement) {\n                    t = !0;\n                    break;\n                }\n                !1 === t && e(l);\n            }\n            return l;\n        }\n        async parseAsync(t) {\n            const e = this.parseAnimations(t.animations), n = this.parseShapes(t.shapes), i = this.parseGeometries(t.geometries, n), r = await this.parseImagesAsync(t.images), s = this.parseTextures(t.textures, r), a = this.parseMaterials(t.materials, s), o = this.parseObject(t.object, i, a, s, e), l = this.parseSkeletons(t.skeletons, o);\n            return this.bindSkeletons(o, l), o;\n        }\n        parseShapes(t) {\n            const e = {};\n            if (void 0 !== t) for(let n = 0, i = t.length; n < i; n++){\n                const i = (new ko).fromJSON(t[n]);\n                e[i.uuid] = i;\n            }\n            return e;\n        }\n        parseSkeletons(t, e) {\n            const n = {}, i = {};\n            if (e.traverse(function(t) {\n                t.isBone && (i[t.uuid] = t);\n            }), void 0 !== t) for(let e = 0, r = t.length; e < r; e++){\n                const r = (new Na).fromJSON(t[e], i);\n                n[r.uuid] = r;\n            }\n            return n;\n        }\n        parseGeometries(t, e) {\n            const n = {};\n            if (void 0 !== t) {\n                const i = new zc;\n                for(let r = 0, s = t.length; r < s; r++){\n                    let s;\n                    const a = t[r];\n                    switch(a.type){\n                        case \"BufferGeometry\":\n                        case \"InstancedBufferGeometry\":\n                            s = i.parse(a);\n                            break;\n                        case \"Geometry\":\n                            console.error(\"THREE.ObjectLoader: The legacy Geometry type is no longer supported.\");\n                            break;\n                        default:\n                            a.type in Pl ? s = Pl[a.type].fromJSON(a, e) : console.warn(`THREE.ObjectLoader: Unsupported geometry type \"${a.type}\"`);\n                    }\n                    s.uuid = a.uuid, void 0 !== a.name && (s.name = a.name), !0 === s.isBufferGeometry && void 0 !== a.userData && (s.userData = a.userData), n[a.uuid] = s;\n                }\n            }\n            return n;\n        }\n        parseMaterials(t, e) {\n            const n = {}, i = {};\n            if (void 0 !== t) {\n                const r = new Ic;\n                r.setTextures(e);\n                for(let e = 0, s = t.length; e < s; e++){\n                    const s = t[e];\n                    if (\"MultiMaterial\" === s.type) {\n                        const t = [];\n                        for(let e = 0; e < s.materials.length; e++){\n                            const i = s.materials[e];\n                            void 0 === n[i.uuid] && (n[i.uuid] = r.parse(i)), t.push(n[i.uuid]);\n                        }\n                        i[s.uuid] = t;\n                    } else void 0 === n[s.uuid] && (n[s.uuid] = r.parse(s)), i[s.uuid] = n[s.uuid];\n                }\n            }\n            return i;\n        }\n        parseAnimations(t) {\n            const e = {};\n            if (void 0 !== t) for(let n = 0; n < t.length; n++){\n                const i = t[n], r = ec.parse(i);\n                e[r.uuid] = r;\n            }\n            return e;\n        }\n        parseImages(t, e) {\n            const n = this, i = {};\n            let r;\n            function s(t) {\n                if (\"string\" == typeof t) {\n                    const e = t;\n                    return function(t) {\n                        return n.manager.itemStart(t), r.load(t, function() {\n                            n.manager.itemEnd(t);\n                        }, void 0, function() {\n                            n.manager.itemError(t), n.manager.itemEnd(t);\n                        });\n                    }(/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(e) ? e : n.resourcePath + e);\n                }\n                return t.data ? {\n                    data: bt(t.type, t.data),\n                    width: t.width,\n                    height: t.height\n                } : null;\n            }\n            if (void 0 !== t && t.length > 0) {\n                const n = new rc(e);\n                r = new cc(n), r.setCrossOrigin(this.crossOrigin);\n                for(let e = 0, n = t.length; e < n; e++){\n                    const n = t[e], r = n.url;\n                    if (Array.isArray(r)) {\n                        i[n.uuid] = [];\n                        for(let t = 0, e = r.length; t < e; t++){\n                            const e = s(r[t]);\n                            null !== e && (e instanceof HTMLImageElement ? i[n.uuid].push(e) : i[n.uuid].push(new Pa(e.data, e.width, e.height)));\n                        }\n                    } else {\n                        const t = s(n.url);\n                        null !== t && (i[n.uuid] = t);\n                    }\n                }\n            }\n            return i;\n        }\n        async parseImagesAsync(t) {\n            const e = this, n = {};\n            let i;\n            async function r(t) {\n                if (\"string\" == typeof t) {\n                    const n = t, r = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(n) ? n : e.resourcePath + n;\n                    return await i.loadAsync(r);\n                }\n                return t.data ? {\n                    data: bt(t.type, t.data),\n                    width: t.width,\n                    height: t.height\n                } : null;\n            }\n            if (void 0 !== t && t.length > 0) {\n                i = new cc(this.manager), i.setCrossOrigin(this.crossOrigin);\n                for(let e = 0, i = t.length; e < i; e++){\n                    const i = t[e], s = i.url;\n                    if (Array.isArray(s)) {\n                        n[i.uuid] = [];\n                        for(let t = 0, e = s.length; t < e; t++){\n                            const e = s[t], a = await r(e);\n                            null !== a && (a instanceof HTMLImageElement ? n[i.uuid].push(a) : n[i.uuid].push(new Pa(a.data, a.width, a.height)));\n                        }\n                    } else {\n                        const t = await r(i.url);\n                        null !== t && (n[i.uuid] = t);\n                    }\n                }\n            }\n            return n;\n        }\n        parseTextures(t, e) {\n            function n(t, e) {\n                return \"number\" == typeof t ? t : (console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\", t), e[t]);\n            }\n            const i = {};\n            if (void 0 !== t) for(let r = 0, s = t.length; r < s; r++){\n                const s = t[r];\n                let a;\n                void 0 === s.image && console.warn('THREE.ObjectLoader: No \"image\" specified for', s.uuid), void 0 === e[s.image] && console.warn(\"THREE.ObjectLoader: Undefined image\", s.image);\n                const o = e[s.image];\n                Array.isArray(o) ? (a = new ei(o), 6 === o.length && (a.needsUpdate = !0)) : (a = o && o.data ? new Pa(o.data, o.width, o.height) : new Lt(o), o && (a.needsUpdate = !0)), a.uuid = s.uuid, void 0 !== s.name && (a.name = s.name), void 0 !== s.mapping && (a.mapping = n(s.mapping, Bc)), void 0 !== s.offset && a.offset.fromArray(s.offset), void 0 !== s.repeat && a.repeat.fromArray(s.repeat), void 0 !== s.center && a.center.fromArray(s.center), void 0 !== s.rotation && (a.rotation = s.rotation), void 0 !== s.wrap && (a.wrapS = n(s.wrap[0], Fc), a.wrapT = n(s.wrap[1], Fc)), void 0 !== s.format && (a.format = s.format), void 0 !== s.type && (a.type = s.type), void 0 !== s.encoding && (a.encoding = s.encoding), void 0 !== s.minFilter && (a.minFilter = n(s.minFilter, Oc)), void 0 !== s.magFilter && (a.magFilter = n(s.magFilter, Oc)), void 0 !== s.anisotropy && (a.anisotropy = s.anisotropy), void 0 !== s.flipY && (a.flipY = s.flipY), void 0 !== s.premultiplyAlpha && (a.premultiplyAlpha = s.premultiplyAlpha), void 0 !== s.unpackAlignment && (a.unpackAlignment = s.unpackAlignment), void 0 !== s.userData && (a.userData = s.userData), i[s.uuid] = a;\n            }\n            return i;\n        }\n        parseObject(t, e, n, i, r) {\n            let s, a, o;\n            function l(t) {\n                return void 0 === e[t] && console.warn(\"THREE.ObjectLoader: Undefined geometry\", t), e[t];\n            }\n            function c(t) {\n                if (void 0 !== t) {\n                    if (Array.isArray(t)) {\n                        const e = [];\n                        for(let i = 0, r = t.length; i < r; i++){\n                            const r = t[i];\n                            void 0 === n[r] && console.warn(\"THREE.ObjectLoader: Undefined material\", r), e.push(n[r]);\n                        }\n                        return e;\n                    }\n                    return void 0 === n[t] && console.warn(\"THREE.ObjectLoader: Undefined material\", t), n[t];\n                }\n            }\n            function h(t) {\n                return void 0 === i[t] && console.warn(\"THREE.ObjectLoader: Undefined texture\", t), i[t];\n            }\n            switch(t.type){\n                case \"Scene\":\n                    s = new ea, void 0 !== t.background && (Number.isInteger(t.background) ? s.background = new rn(t.background) : s.background = h(t.background)), void 0 !== t.environment && (s.environment = h(t.environment)), void 0 !== t.fog && (\"Fog\" === t.fog.type ? s.fog = new ta(t.fog.color, t.fog.near, t.fog.far) : \"FogExp2\" === t.fog.type && (s.fog = new $s(t.fog.color, t.fog.density)));\n                    break;\n                case \"PerspectiveCamera\":\n                    s = new Kn(t.fov, t.aspect, t.near, t.far), void 0 !== t.focus && (s.focus = t.focus), void 0 !== t.zoom && (s.zoom = t.zoom), void 0 !== t.filmGauge && (s.filmGauge = t.filmGauge), void 0 !== t.filmOffset && (s.filmOffset = t.filmOffset), void 0 !== t.view && (s.view = Object.assign({}, t.view));\n                    break;\n                case \"OrthographicCamera\":\n                    s = new bi(t.left, t.right, t.top, t.bottom, t.near, t.far), void 0 !== t.zoom && (s.zoom = t.zoom), void 0 !== t.view && (s.view = Object.assign({}, t.view));\n                    break;\n                case \"AmbientLight\":\n                    s = new Lc(t.color, t.intensity);\n                    break;\n                case \"DirectionalLight\":\n                    s = new Ac(t.color, t.intensity);\n                    break;\n                case \"PointLight\":\n                    s = new Tc(t.color, t.intensity, t.distance, t.decay);\n                    break;\n                case \"RectAreaLight\":\n                    s = new Rc(t.color, t.intensity, t.width, t.height);\n                    break;\n                case \"SpotLight\":\n                    s = new _c(t.color, t.intensity, t.distance, t.angle, t.penumbra, t.decay);\n                    break;\n                case \"HemisphereLight\":\n                    s = new mc(t.color, t.groundColor, t.intensity);\n                    break;\n                case \"LightProbe\":\n                    s = (new Pc).fromJSON(t);\n                    break;\n                case \"SkinnedMesh\":\n                    a = l(t.geometry), o = c(t.material), s = new Ra(a, o), void 0 !== t.bindMode && (s.bindMode = t.bindMode), void 0 !== t.bindMatrix && s.bindMatrix.fromArray(t.bindMatrix), void 0 !== t.skeleton && (s.skeleton = t.skeleton);\n                    break;\n                case \"Mesh\":\n                    a = l(t.geometry), o = c(t.material), s = new Wn(a, o);\n                    break;\n                case \"InstancedMesh\":\n                    a = l(t.geometry), o = c(t.material);\n                    const e1 = t.count, n1 = t.instanceMatrix, i1 = t.instanceColor;\n                    s = new Ha(a, o, e1), s.instanceMatrix = new za(new Float32Array(n1.array), 16), void 0 !== i1 && (s.instanceColor = new za(new Float32Array(i1.array), i1.itemSize));\n                    break;\n                case \"LOD\":\n                    s = new wa;\n                    break;\n                case \"Line\":\n                    s = new Xa(l(t.geometry), c(t.material));\n                    break;\n                case \"LineLoop\":\n                    s = new Qa(l(t.geometry), c(t.material));\n                    break;\n                case \"LineSegments\":\n                    s = new Za(l(t.geometry), c(t.material));\n                    break;\n                case \"PointCloud\":\n                case \"Points\":\n                    s = new io(l(t.geometry), c(t.material));\n                    break;\n                case \"Sprite\":\n                    s = new xa(c(t.material));\n                    break;\n                case \"Group\":\n                    s = new qs;\n                    break;\n                case \"Bone\":\n                    s = new Ca;\n                    break;\n                default:\n                    s = new Fe;\n            }\n            if (s.uuid = t.uuid, void 0 !== t.name && (s.name = t.name), void 0 !== t.matrix ? (s.matrix.fromArray(t.matrix), void 0 !== t.matrixAutoUpdate && (s.matrixAutoUpdate = t.matrixAutoUpdate), s.matrixAutoUpdate && s.matrix.decompose(s.position, s.quaternion, s.scale)) : (void 0 !== t.position && s.position.fromArray(t.position), void 0 !== t.rotation && s.rotation.fromArray(t.rotation), void 0 !== t.quaternion && s.quaternion.fromArray(t.quaternion), void 0 !== t.scale && s.scale.fromArray(t.scale)), void 0 !== t.castShadow && (s.castShadow = t.castShadow), void 0 !== t.receiveShadow && (s.receiveShadow = t.receiveShadow), t.shadow && (void 0 !== t.shadow.bias && (s.shadow.bias = t.shadow.bias), void 0 !== t.shadow.normalBias && (s.shadow.normalBias = t.shadow.normalBias), void 0 !== t.shadow.radius && (s.shadow.radius = t.shadow.radius), void 0 !== t.shadow.mapSize && s.shadow.mapSize.fromArray(t.shadow.mapSize), void 0 !== t.shadow.camera && (s.shadow.camera = this.parseObject(t.shadow.camera))), void 0 !== t.visible && (s.visible = t.visible), void 0 !== t.frustumCulled && (s.frustumCulled = t.frustumCulled), void 0 !== t.renderOrder && (s.renderOrder = t.renderOrder), void 0 !== t.userData && (s.userData = t.userData), void 0 !== t.layers && (s.layers.mask = t.layers), void 0 !== t.children) {\n                const a = t.children;\n                for(let t = 0; t < a.length; t++)s.add(this.parseObject(a[t], e, n, i, r));\n            }\n            if (void 0 !== t.animations) {\n                const e = t.animations;\n                for(let t = 0; t < e.length; t++){\n                    const n = e[t];\n                    s.animations.push(r[n]);\n                }\n            }\n            if (\"LOD\" === t.type) {\n                void 0 !== t.autoUpdate && (s.autoUpdate = t.autoUpdate);\n                const e = t.levels;\n                for(let t = 0; t < e.length; t++){\n                    const n = e[t], i = s.getObjectByProperty(\"uuid\", n.object);\n                    void 0 !== i && s.addLevel(i, n.distance);\n                }\n            }\n            return s;\n        }\n        bindSkeletons(t, e) {\n            0 !== Object.keys(e).length && t.traverse(function(t) {\n                if (!0 === t.isSkinnedMesh && void 0 !== t.skeleton) {\n                    const n = e[t.skeleton];\n                    void 0 === n ? console.warn(\"THREE.ObjectLoader: No skeleton found with UUID:\", t.skeleton) : t.bind(n, t.bindMatrix);\n                }\n            });\n        }\n        setTexturePath(t) {\n            return console.warn(\"THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().\"), this.setResourcePath(t);\n        }\n    }, t.ObjectSpaceNormalMap = 1, t.OctahedronBufferGeometry = Ml, t.OctahedronGeometry = Ml, t.OneFactor = 201, t.OneMinusDstAlphaFactor = 207, t.OneMinusDstColorFactor = 209, t.OneMinusSrcAlphaFactor = 205, t.OneMinusSrcColorFactor = 203, t.OrthographicCamera = bi, t.PCFShadowMap = 1, t.PCFSoftShadowMap = 2, t.PMREMGenerator = Oi, t.ParametricGeometry = function() {\n        return console.error(\"THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js\"), new En;\n    }, t.Particle = function(t) {\n        return console.warn(\"THREE.Particle has been renamed to THREE.Sprite.\"), new xa(t);\n    }, t.ParticleBasicMaterial = function(t) {\n        return console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\"), new Ka(t);\n    }, t.ParticleSystem = function(t, e) {\n        return console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\"), new io(t, e);\n    }, t.ParticleSystemMaterial = function(t) {\n        return console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\"), new Ka(t);\n    }, t.Path = Go, t.PerspectiveCamera = Kn, t.Plane = ai, t.PlaneBufferGeometry = di, t.PlaneGeometry = di, t.PlaneHelper = class extends Xa {\n        constructor(t, e = 1, n = 16776960){\n            const i = n, r = new En;\n            r.setAttribute(\"position\", new vn([\n                1,\n                -1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                1,\n                1,\n                0,\n                0,\n                1,\n                0,\n                0,\n                0\n            ], 3)), r.computeBoundingSphere(), super(r, new Ga({\n                color: i,\n                toneMapped: !1\n            })), this.type = \"PlaneHelper\", this.plane = t, this.size = e;\n            const s = new En;\n            s.setAttribute(\"position\", new vn([\n                1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                1,\n                -1,\n                1\n            ], 3)), s.computeBoundingSphere(), this.add(new Wn(s, new sn({\n                color: i,\n                opacity: .2,\n                transparent: !0,\n                depthWrite: !1,\n                toneMapped: !1\n            })));\n        }\n        updateMatrixWorld(t) {\n            let e = -this.plane.constant;\n            Math.abs(e) < 1e-8 && (e = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, e), this.children[0].material.side = e < 0 ? 1 : 0, this.lookAt(this.plane.normal), super.updateMatrixWorld(t);\n        }\n    }, t.PointCloud = function(t, e) {\n        return console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\"), new io(t, e);\n    }, t.PointCloudMaterial = function(t) {\n        return console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\"), new Ka(t);\n    }, t.PointLight = Tc, t.PointLightHelper = class extends Wn {\n        constructor(t, e, n){\n            super(new Sl(e, 4, 2), new sn({\n                wireframe: !0,\n                fog: !1,\n                toneMapped: !1\n            })), this.light = t, this.light.updateMatrixWorld(), this.color = n, this.type = \"PointLightHelper\", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();\n        }\n        dispose() {\n            this.geometry.dispose(), this.material.dispose();\n        }\n        update() {\n            void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);\n        }\n    }, t.Points = io, t.PointsMaterial = Ka, t.PolarGridHelper = class extends Za {\n        constructor(t = 10, e = 16, n = 8, i = 64, r = 4473924, s = 8947848){\n            r = new rn(r), s = new rn(s);\n            const a = [], o = [];\n            for(let n = 0; n <= e; n++){\n                const i = n / e * (2 * Math.PI), l = Math.sin(i) * t, c = Math.cos(i) * t;\n                a.push(0, 0, 0), a.push(l, 0, c);\n                const h = 1 & n ? r : s;\n                o.push(h.r, h.g, h.b), o.push(h.r, h.g, h.b);\n            }\n            for(let e = 0; e <= n; e++){\n                const l = 1 & e ? r : s, c = t - t / n * e;\n                for(let t = 0; t < i; t++){\n                    let e = t / i * (2 * Math.PI), n = Math.sin(e) * c, r = Math.cos(e) * c;\n                    a.push(n, 0, r), o.push(l.r, l.g, l.b), e = (t + 1) / i * (2 * Math.PI), n = Math.sin(e) * c, r = Math.cos(e) * c, a.push(n, 0, r), o.push(l.r, l.g, l.b);\n                }\n            }\n            const l = new En;\n            l.setAttribute(\"position\", new vn(a, 3)), l.setAttribute(\"color\", new vn(o, 3));\n            super(l, new Ga({\n                vertexColors: !0,\n                toneMapped: !1\n            })), this.type = \"PolarGridHelper\";\n        }\n    }, t.PolyhedronBufferGeometry = po, t.PolyhedronGeometry = po, t.PositionalAudio = class extends $c {\n        constructor(t){\n            super(t), this.panner = this.context.createPanner(), this.panner.panningModel = \"HRTF\", this.panner.connect(this.gain);\n        }\n        getOutput() {\n            return this.panner;\n        }\n        getRefDistance() {\n            return this.panner.refDistance;\n        }\n        setRefDistance(t) {\n            return this.panner.refDistance = t, this;\n        }\n        getRolloffFactor() {\n            return this.panner.rolloffFactor;\n        }\n        setRolloffFactor(t) {\n            return this.panner.rolloffFactor = t, this;\n        }\n        getDistanceModel() {\n            return this.panner.distanceModel;\n        }\n        setDistanceModel(t) {\n            return this.panner.distanceModel = t, this;\n        }\n        getMaxDistance() {\n            return this.panner.maxDistance;\n        }\n        setMaxDistance(t) {\n            return this.panner.maxDistance = t, this;\n        }\n        setDirectionalCone(t, e, n) {\n            return this.panner.coneInnerAngle = t, this.panner.coneOuterAngle = e, this.panner.coneOuterGain = n, this;\n        }\n        updateMatrixWorld(t) {\n            if (super.updateMatrixWorld(t), !0 === this.hasPlaybackControl && !1 === this.isPlaying) return;\n            this.matrixWorld.decompose(th, eh, nh), ih.set(0, 0, 1).applyQuaternion(eh);\n            const e = this.panner;\n            if (e.positionX) {\n                const t = this.context.currentTime + this.listener.timeDelta;\n                e.positionX.linearRampToValueAtTime(th.x, t), e.positionY.linearRampToValueAtTime(th.y, t), e.positionZ.linearRampToValueAtTime(th.z, t), e.orientationX.linearRampToValueAtTime(ih.x, t), e.orientationY.linearRampToValueAtTime(ih.y, t), e.orientationZ.linearRampToValueAtTime(ih.z, t);\n            } else e.setPosition(th.x, th.y, th.z), e.setOrientation(ih.x, ih.y, ih.z);\n        }\n    }, t.PropertyBinding = gh, t.PropertyMixer = sh, t.QuadraticBezierCurve = Bo, t.QuadraticBezierCurve3 = Fo, t.Quaternion = Nt, t.QuaternionKeyframeTrack = Kl, t.QuaternionLinearInterpolant = Ql, t.REVISION = e, t.RGBADepthPacking = 3201, t.RGBAFormat = E, t.RGBAIntegerFormat = 1033, t.RGBA_ASTC_10x10_Format = 37819, t.RGBA_ASTC_10x5_Format = 37816, t.RGBA_ASTC_10x6_Format = 37817, t.RGBA_ASTC_10x8_Format = 37818, t.RGBA_ASTC_12x10_Format = 37820, t.RGBA_ASTC_12x12_Format = 37821, t.RGBA_ASTC_4x4_Format = 37808, t.RGBA_ASTC_5x4_Format = 37809, t.RGBA_ASTC_5x5_Format = 37810, t.RGBA_ASTC_6x5_Format = 37811, t.RGBA_ASTC_6x6_Format = 37812, t.RGBA_ASTC_8x5_Format = 37813, t.RGBA_ASTC_8x6_Format = 37814, t.RGBA_ASTC_8x8_Format = 37815, t.RGBA_BPTC_Format = 36492, t.RGBA_ETC2_EAC_Format = O, t.RGBA_PVRTC_2BPPV1_Format = B, t.RGBA_PVRTC_4BPPV1_Format = z, t.RGBA_S3TC_DXT1_Format = C, t.RGBA_S3TC_DXT3_Format = P, t.RGBA_S3TC_DXT5_Format = I, t.RGBDEncoding = $, t.RGBEEncoding = Z, t.RGBEFormat = 1023, t.RGBFormat = T, t.RGBIntegerFormat = 1032, t.RGBM16Encoding = K, t.RGBM7Encoding = Q, t.RGB_ETC1_Format = 36196, t.RGB_ETC2_Format = F, t.RGB_PVRTC_2BPPV1_Format = N, t.RGB_PVRTC_4BPPV1_Format = D, t.RGB_S3TC_DXT1_Format = R, t.RGFormat = 1030, t.RGIntegerFormat = 1031, t.RawShaderMaterial = wi, t.Ray = ue, t.Raycaster = class {\n        constructor(t, e, n = 0, i = 1 / 0){\n            this.ray = new ue(t, e), this.near = n, this.far = i, this.camera = null, this.layers = new we, this.params = {\n                Mesh: {},\n                Line: {\n                    threshold: 1\n                },\n                LOD: {},\n                Points: {\n                    threshold: 1\n                },\n                Sprite: {}\n            };\n        }\n        set(t, e) {\n            this.ray.set(t, e);\n        }\n        setFromCamera(t, e) {\n            e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld), this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize(), this.camera = e) : e && e.isOrthographicCamera ? (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e), this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld), this.camera = e) : console.error(\"THREE.Raycaster: Unsupported camera type: \" + e.type);\n        }\n        intersectObject(t, e = !0, n = []) {\n            return Sh(t, this, n, e), n.sort(wh), n;\n        }\n        intersectObjects(t, e = !0, n = []) {\n            for(let i = 0, r = t.length; i < r; i++)Sh(t[i], this, n, e);\n            return n.sort(wh), n;\n        }\n    }, t.RectAreaLight = Rc, t.RedFormat = 1028, t.RedIntegerFormat = 1029, t.ReinhardToneMapping = 2, t.RepeatWrapping = h, t.ReplaceStencilOp = 7681, t.ReverseSubtractEquation = 102, t.RingBufferGeometry = bl, t.RingGeometry = bl, t.SRGB8_ALPHA8_ASTC_10x10_Format = 37851, t.SRGB8_ALPHA8_ASTC_10x5_Format = 37848, t.SRGB8_ALPHA8_ASTC_10x6_Format = 37849, t.SRGB8_ALPHA8_ASTC_10x8_Format = 37850, t.SRGB8_ALPHA8_ASTC_12x10_Format = 37852, t.SRGB8_ALPHA8_ASTC_12x12_Format = 37853, t.SRGB8_ALPHA8_ASTC_4x4_Format = 37840, t.SRGB8_ALPHA8_ASTC_5x4_Format = 37841, t.SRGB8_ALPHA8_ASTC_5x5_Format = 37842, t.SRGB8_ALPHA8_ASTC_6x5_Format = 37843, t.SRGB8_ALPHA8_ASTC_6x6_Format = 37844, t.SRGB8_ALPHA8_ASTC_8x5_Format = 37845, t.SRGB8_ALPHA8_ASTC_8x6_Format = 37846, t.SRGB8_ALPHA8_ASTC_8x8_Format = 37847, t.Scene = ea, t.SceneUtils = tu, t.ShaderChunk = pi, t.ShaderLib = fi, t.ShaderMaterial = Zn, t.ShadowMaterial = Il, t.Shape = ko, t.ShapeBufferGeometry = wl, t.ShapeGeometry = wl, t.ShapePath = class {\n        constructor(){\n            this.type = \"ShapePath\", this.color = new rn, this.subPaths = [], this.currentPath = null;\n        }\n        moveTo(t, e) {\n            return this.currentPath = new Go, this.subPaths.push(this.currentPath), this.currentPath.moveTo(t, e), this;\n        }\n        lineTo(t, e) {\n            return this.currentPath.lineTo(t, e), this;\n        }\n        quadraticCurveTo(t, e, n, i) {\n            return this.currentPath.quadraticCurveTo(t, e, n, i), this;\n        }\n        bezierCurveTo(t, e, n, i, r, s) {\n            return this.currentPath.bezierCurveTo(t, e, n, i, r, s), this;\n        }\n        splineThru(t) {\n            return this.currentPath.splineThru(t), this;\n        }\n        toShapes(t, e) {\n            function n(t) {\n                const e = [];\n                for(let n = 0, i = t.length; n < i; n++){\n                    const i = t[n], r = new ko;\n                    r.curves = i.curves, e.push(r);\n                }\n                return e;\n            }\n            function i(t, e) {\n                const n = e.length;\n                let i = !1;\n                for(let r = n - 1, s = 0; s < n; r = s++){\n                    let n = e[r], a = e[s], o = a.x - n.x, l = a.y - n.y;\n                    if (Math.abs(l) > Number.EPSILON) {\n                        if (l < 0 && (n = e[s], o = -o, a = e[r], l = -l), t.y < n.y || t.y > a.y) continue;\n                        if (t.y === n.y) {\n                            if (t.x === n.x) return !0;\n                        } else {\n                            const e = l * (t.x - n.x) - o * (t.y - n.y);\n                            if (0 === e) return !0;\n                            if (e < 0) continue;\n                            i = !i;\n                        }\n                    } else {\n                        if (t.y !== n.y) continue;\n                        if (a.x <= t.x && t.x <= n.x || n.x <= t.x && t.x <= a.x) return !0;\n                    }\n                }\n                return i;\n            }\n            const r = ml.isClockWise, s = this.subPaths;\n            if (0 === s.length) return [];\n            if (!0 === e) return n(s);\n            let a, o, l;\n            const c = [];\n            if (1 === s.length) return o = s[0], l = new ko, l.curves = o.curves, c.push(l), c;\n            let h = !r(s[0].getPoints());\n            h = t ? !h : h;\n            const u = [], d = [];\n            let p, m, f = [], g = 0;\n            d[g] = void 0, f[g] = [];\n            for(let e = 0, n = s.length; e < n; e++)o = s[e], p = o.getPoints(), a = r(p), a = t ? !a : a, a ? (!h && d[g] && g++, d[g] = {\n                s: new ko,\n                p: p\n            }, d[g].s.curves = o.curves, h && g++, f[g] = []) : f[g].push({\n                h: o,\n                p: p[0]\n            });\n            if (!d[0]) return n(s);\n            if (d.length > 1) {\n                let t = !1;\n                const e = [];\n                for(let t = 0, e = d.length; t < e; t++)u[t] = [];\n                for(let n = 0, r = d.length; n < r; n++){\n                    const r = f[n];\n                    for(let s = 0; s < r.length; s++){\n                        const a = r[s];\n                        let o = !0;\n                        for(let r = 0; r < d.length; r++)i(a.p, d[r].p) && (n !== r && e.push({\n                            froms: n,\n                            tos: r,\n                            hole: s\n                        }), o ? (o = !1, u[r].push(a)) : t = !0);\n                        o && u[n].push(a);\n                    }\n                }\n                e.length > 0 && (t || (f = u));\n            }\n            for(let t = 0, e = d.length; t < e; t++){\n                l = d[t].s, c.push(l), m = f[t];\n                for(let t = 0, e = m.length; t < e; t++)l.holes.push(m[t].h);\n            }\n            return c;\n        }\n    }, t.ShapeUtils = ml, t.ShortType = 1011, t.Skeleton = Na, t.SkeletonHelper = Nh, t.SkinnedMesh = Ra, t.SmoothShading = 2, t.Sphere = ie, t.SphereBufferGeometry = Sl, t.SphereGeometry = Sl, t.Spherical = class {\n        constructor(t = 1, e = 0, n = 0){\n            return this.radius = t, this.phi = e, this.theta = n, this;\n        }\n        set(t, e, n) {\n            return this.radius = t, this.phi = e, this.theta = n, this;\n        }\n        copy(t) {\n            return this.radius = t.radius, this.phi = t.phi, this.theta = t.theta, this;\n        }\n        makeSafe() {\n            const t = 1e-6;\n            return this.phi = Math.max(t, Math.min(Math.PI - t, this.phi)), this;\n        }\n        setFromVector3(t) {\n            return this.setFromCartesianCoords(t.x, t.y, t.z);\n        }\n        setFromCartesianCoords(t, e, n) {\n            return this.radius = Math.sqrt(t * t + e * e + n * n), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(t, n), this.phi = Math.acos(ut(e / this.radius, -1, 1))), this;\n        }\n        clone() {\n            return (new this.constructor).copy(this);\n        }\n    }, t.SphericalHarmonics3 = Cc, t.SplineCurve = Oo, t.SpotLight = _c, t.SpotLightHelper = class extends Fe {\n        constructor(t, e){\n            super(), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = e;\n            const n = new En, i = [\n                0,\n                0,\n                0,\n                0,\n                0,\n                1,\n                0,\n                0,\n                0,\n                1,\n                0,\n                1,\n                0,\n                0,\n                0,\n                -1,\n                0,\n                1,\n                0,\n                0,\n                0,\n                0,\n                1,\n                1,\n                0,\n                0,\n                0,\n                0,\n                -1,\n                1\n            ];\n            for(let t = 0, e = 1, n = 32; t < n; t++, e++){\n                const r = t / n * Math.PI * 2, s = e / n * Math.PI * 2;\n                i.push(Math.cos(r), Math.sin(r), 1, Math.cos(s), Math.sin(s), 1);\n            }\n            n.setAttribute(\"position\", new vn(i, 3));\n            const r = new Ga({\n                fog: !1,\n                toneMapped: !1\n            });\n            this.cone = new Za(n, r), this.add(this.cone), this.update();\n        }\n        dispose() {\n            this.cone.geometry.dispose(), this.cone.material.dispose();\n        }\n        update() {\n            this.light.updateMatrixWorld();\n            const t = this.light.distance ? this.light.distance : 1e3, e = t * Math.tan(this.light.angle);\n            this.cone.scale.set(e, e, t), Ch.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Ch), void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);\n        }\n    }, t.Sprite = xa, t.SpriteMaterial = sa, t.SrcAlphaFactor = 204, t.SrcAlphaSaturateFactor = 210, t.SrcColorFactor = 202, t.StaticCopyUsage = 35046, t.StaticDrawUsage = et, t.StaticReadUsage = 35045, t.StereoCamera = class {\n        constructor(){\n            this.type = \"StereoCamera\", this.aspect = 1, this.eyeSep = .064, this.cameraL = new Kn, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new Kn, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {\n                focus: null,\n                fov: null,\n                aspect: null,\n                near: null,\n                far: null,\n                zoom: null,\n                eyeSep: null\n            };\n        }\n        update(t) {\n            const e = this._cache;\n            if (e.focus !== t.focus || e.fov !== t.fov || e.aspect !== t.aspect * this.aspect || e.near !== t.near || e.far !== t.far || e.zoom !== t.zoom || e.eyeSep !== this.eyeSep) {\n                e.focus = t.focus, e.fov = t.fov, e.aspect = t.aspect * this.aspect, e.near = t.near, e.far = t.far, e.zoom = t.zoom, e.eyeSep = this.eyeSep;\n                const n = t.projectionMatrix.clone(), i = e.eyeSep / 2, r = i * e.near / e.focus, s = e.near * Math.tan(at * e.fov * .5) / e.zoom;\n                let a, o;\n                qc.elements[12] = -i, jc.elements[12] = i, a = -s * e.aspect + r, o = s * e.aspect + r, n.elements[0] = 2 * e.near / (o - a), n.elements[8] = (o + a) / (o - a), this.cameraL.projectionMatrix.copy(n), a = -s * e.aspect - r, o = s * e.aspect - r, n.elements[0] = 2 * e.near / (o - a), n.elements[8] = (o + a) / (o - a), this.cameraR.projectionMatrix.copy(n);\n            }\n            this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(qc), this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(jc);\n        }\n    }, t.StreamCopyUsage = 35042, t.StreamDrawUsage = 35040, t.StreamReadUsage = 35041, t.StringKeyframeTrack = $l, t.SubtractEquation = 101, t.SubtractiveBlending = 3, t.TOUCH = {\n        ROTATE: 0,\n        PAN: 1,\n        DOLLY_PAN: 2,\n        DOLLY_ROTATE: 3\n    }, t.TangentSpaceNormalMap = 0, t.TetrahedronBufferGeometry = Tl, t.TetrahedronGeometry = Tl, t.TextGeometry = function() {\n        return console.error(\"THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js\"), new En;\n    }, t.Texture = Lt, t.TextureLoader = dc, t.TorusBufferGeometry = El, t.TorusGeometry = El, t.TorusKnotBufferGeometry = Al, t.TorusKnotGeometry = Al, t.Triangle = Ye, t.TriangleFanDrawMode = 2, t.TriangleStripDrawMode = 1, t.TrianglesDrawMode = 0, t.TubeBufferGeometry = Ll, t.TubeGeometry = Ll, t.UVMapping = i, t.Uint16Attribute = function(t, e) {\n        return console.warn(\"THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.\"), new pn(t, e);\n    }, t.Uint16BufferAttribute = pn, t.Uint32Attribute = function(t, e) {\n        return console.warn(\"THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.\"), new fn(t, e);\n    }, t.Uint32BufferAttribute = fn, t.Uint8Attribute = function(t, e) {\n        return console.warn(\"THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.\"), new hn(t, e);\n    }, t.Uint8BufferAttribute = hn, t.Uint8ClampedAttribute = function(t, e) {\n        return console.warn(\"THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.\"), new un(t, e);\n    }, t.Uint8ClampedBufferAttribute = un, t.Uniform = _h, t.UniformsLib = mi, t.UniformsUtils = Jn, t.UnsignedByteType = x, t.UnsignedInt248Type = S, t.UnsignedIntType = M, t.UnsignedShort4444Type = 1017, t.UnsignedShort5551Type = 1018, t.UnsignedShort565Type = 1019, t.UnsignedShortType = _, t.VSMShadowMap = 3, t.Vector2 = yt, t.Vector3 = zt, t.Vector4 = Ct, t.VectorKeyframeTrack = tc, t.Vertex = function(t, e, n) {\n        return console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\"), new zt(t, e, n);\n    }, t.VertexColors = 2, t.VideoTexture = so, t.WebGL1Renderer = Ks, t.WebGLCubeRenderTarget = ni, t.WebGLMultipleRenderTargets = It, t.WebGLMultisampleRenderTarget = Dt, t.WebGLRenderTarget = Pt, t.WebGLRenderTargetCube = function(t, e, n) {\n        return console.warn(\"THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).\"), new ni(t, n);\n    }, t.WebGLRenderer = Qs, t.WebGLUtils = Ws, t.WireframeGeometry = Rl, t.WireframeHelper = function(t, e) {\n        return console.warn(\"THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.\"), new Za(new Rl(t.geometry), new Ga({\n            color: void 0 !== e ? e : 16777215\n        }));\n    }, t.WrapAroundEnding = W, t.XHRLoader = function(t) {\n        return console.warn(\"THREE.XHRLoader has been renamed to THREE.FileLoader.\"), new lc(t);\n    }, t.ZeroCurvatureEnding = k, t.ZeroFactor = 200, t.ZeroSlopeEnding = V, t.ZeroStencilOp = 0, t.sRGBEncoding = Y, Object.defineProperty(t, \"__esModule\", {\n        value: !0\n    });\n});\n\n//# sourceMappingURL=index.c39c384f.js.map\n","/**\r\n * @license\r\n * Copyright 2010-2021 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */\r\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=\"undefined\"!=typeof globalThis?globalThis:t||self).THREE={})}(this,(function(t){\"use strict\";const e=\"134\",n=100,i=300,r=301,s=302,a=303,o=304,l=306,c=307,h=1e3,u=1001,d=1002,p=1003,m=1004,f=1005,g=1006,v=1007,y=1008,x=1009,_=1012,M=1014,b=1015,w=1016,S=1020,T=1022,E=1023,A=1026,L=1027,R=33776,C=33777,P=33778,I=33779,D=35840,N=35841,z=35842,B=35843,F=37492,O=37496,U=2300,H=2301,G=2302,k=2400,V=2401,W=2402,j=2500,q=2501,X=3e3,Y=3001,J=3007,Z=3002,Q=3004,K=3005,$=3006,tt=7680,et=35044,nt=35048,it=\"300 es\";class rt{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}}let st=1234567;const at=Math.PI/180,ot=180/Math.PI,lt=[];for(let t=0;t<256;t++)lt[t]=(t<16?\"0\":\"\")+t.toString(16);const ct=\"undefined\"!=typeof crypto&&\"randomUUID\"in crypto;function ht(){if(ct)return crypto.randomUUID().toUpperCase();const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(lt[255&t]+lt[t>>8&255]+lt[t>>16&255]+lt[t>>24&255]+\"-\"+lt[255&e]+lt[e>>8&255]+\"-\"+lt[e>>16&15|64]+lt[e>>24&255]+\"-\"+lt[63&n|128]+lt[n>>8&255]+\"-\"+lt[n>>16&255]+lt[n>>24&255]+lt[255&i]+lt[i>>8&255]+lt[i>>16&255]+lt[i>>24&255]).toUpperCase()}function ut(t,e,n){return Math.max(e,Math.min(n,t))}function dt(t,e){return(t%e+e)%e}function pt(t,e,n){return(1-n)*t+n*e}function mt(t){return 0==(t&t-1)&&0!==t}function ft(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function gt(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var vt=Object.freeze({__proto__:null,DEG2RAD:at,RAD2DEG:ot,generateUUID:ht,clamp:ut,euclideanModulo:dt,mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:pt,damp:function(t,e,n,i){return pt(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(dt(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(st=t%2147483647),st=16807*st%2147483647,(st-1)/2147483646},degToRad:function(t){return t*at},radToDeg:function(t){return t*ot},isPowerOfTwo:mt,ceilPowerOfTwo:ft,floorPowerOfTwo:gt,setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),c=s((e+i)/2),h=a((e+i)/2),u=s((e-i)/2),d=a((e-i)/2),p=s((i-e)/2),m=a((i-e)/2);switch(r){case\"XYX\":t.set(o*h,l*u,l*d,o*c);break;case\"YZY\":t.set(l*d,o*h,l*u,o*c);break;case\"ZXZ\":t.set(l*u,l*d,o*h,o*c);break;case\"XZX\":t.set(o*h,l*m,l*p,o*c);break;case\"YXY\":t.set(l*p,o*h,l*m,o*c);break;case\"ZYZ\":t.set(l*m,l*p,o*h,o*c);break;default:console.warn(\"THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: \"+r)}}});class yt{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error(\"index is out of range: \"+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error(\"index is out of range: \"+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn(\"THREE.Vector2: offset has been removed from .fromBufferAttribute().\"),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*n-s*i+t.x,this.y=r*i+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}yt.prototype.isVector2=!0;class xt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")}set(t,e,n,i,r,s,a,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],m=i[0],f=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],M=i[5],b=i[8];return r[0]=s*m+a*v+o*_,r[3]=s*f+a*y+o*M,r[6]=s*g+a*x+o*b,r[1]=l*m+c*v+h*_,r[4]=l*f+c*y+h*M,r[7]=l*g+c*x+h*b,r[2]=u*m+d*v+p*_,r[5]=u*f+d*y+p*M,r[8]=u*g+d*x+p*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*s*c-e*a*l-n*r*c+n*a*o+i*r*l-i*s*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=c*s-a*l,u=a*o-c*r,d=l*r-s*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=h*m,t[1]=(i*l-c*n)*m,t[2]=(a*n-i*s)*m,t[3]=u*m,t[4]=(c*e-i*o)*m,t[5]=(i*r-a*e)*m,t[6]=d*m,t[7]=(n*o-l*e)*m,t[8]=(s*e-n*r)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-i*l,i*o,-i*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],s=i[3],a=i[6],o=i[1],l=i[4],c=i[7];return i[0]=e*r+n*o,i[3]=e*s+n*l,i[6]=e*a+n*c,i[1]=-n*r+e*o,i[4]=-n*s+e*l,i[7]=-n*a+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function _t(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}xt.prototype.isMatrix3=!0;const Mt={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function bt(t,e){return new Mt[t](e)}function wt(t){return document.createElementNS(\"http://www.w3.org/1999/xhtml\",t)}function St(t,e=0){let n=3735928559^e,i=1103547991^e;for(let e,r=0;r<t.length;r++)e=t.charCodeAt(r),n=Math.imul(n^e,2654435761),i=Math.imul(i^e,1597334677);return n=Math.imul(n^n>>>16,2246822507)^Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507)^Math.imul(n^n>>>13,3266489909),4294967296*(2097151&i)+(n>>>0)}let Tt;class Et{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if(\"undefined\"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Tt&&(Tt=wt(\"canvas\")),Tt.width=t.width,Tt.height=t.height;const n=Tt.getContext(\"2d\");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Tt}return e.width>2048||e.height>2048?(console.warn(\"THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons\",t),e.toDataURL(\"image/jpeg\",.6)):e.toDataURL(\"image/png\")}}let At=0;class Lt extends rt{constructor(t=Lt.DEFAULT_IMAGE,e=Lt.DEFAULT_MAPPING,n=1001,i=1001,r=1006,s=1008,a=1023,o=1009,l=1,c=3e3){super(),Object.defineProperty(this,\"id\",{value:At++}),this.uuid=ht(),this.name=\"\",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new yt(0,0),this.repeat=new yt(1,1),this.center=new yt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new xt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this}toJSON(t){const e=void 0===t||\"string\"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=ht()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(Rt(i[t].image)):e.push(Rt(i[t]))}else e=Rt(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return\"{}\"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:\"dispose\"})}transformUv(t){if(this.mapping!==i)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case h:t.x=t.x-Math.floor(t.x);break;case u:t.x=t.x<0?0:1;break;case d:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case h:t.y=t.y-Math.floor(t.y);break;case u:t.y=t.y<0?0:1;break;case d:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function Rt(t){return\"undefined\"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||\"undefined\"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||\"undefined\"!=typeof ImageBitmap&&t instanceof ImageBitmap?Et.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn(\"THREE.Texture: Unable to serialize Texture.\"),{})}Lt.DEFAULT_IMAGE=void 0,Lt.DEFAULT_MAPPING=i,Lt.prototype.isTexture=!0;class Ct{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error(\"index is out of range: \"+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error(\"index is out of range: \"+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*e+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*e+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*e+s[7]*n+s[11]*i+s[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const s=.01,a=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(c-u)<s&&Math.abs(h-m)<s&&Math.abs(p-f)<s){if(Math.abs(c+u)<a&&Math.abs(h+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,v=(g+1)/2,y=(c+u)/4,x=(h+m)/4,_=(p+f)/4;return t>o&&t>v?t<s?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=y/n,r=x/n):o>v?o<s?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=y/i,r=_/i):v<s?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=x/r,i=_/r),this.set(n,i,r,e),this}let v=Math.sqrt((f-p)*(f-p)+(h-m)*(h-m)+(u-c)*(u-c));return Math.abs(v)<.001&&(v=1),this.x=(f-p)/v,this.y=(h-m)/v,this.z=(u-c)/v,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn(\"THREE.Vector4: offset has been removed from .fromBufferAttribute().\"),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Ct.prototype.isVector4=!0;class Pt extends rt{constructor(t,e,n={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new Ct(0,0,t,e),this.scissorTest=!1,this.viewport=new Ct(0,0,t,e),this.texture=new Lt(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:g,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:\"dispose\"})}}Pt.prototype.isWebGLRenderTarget=!0;class It extends Pt{constructor(t,e,n){super(t,e);const i=this.texture;this.texture=[];for(let t=0;t<n;t++)this.texture[t]=i.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}It.prototype.isWebGLMultipleRenderTargets=!0;class Dt extends Pt{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}Dt.prototype.isWebGLMultisampleRenderTarget=!0;class Nt{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn(\"THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.\"),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,r,s,a){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===a)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(h!==m||o!==u||l!==d||c!==p){let t=1-a;const e=o*u+l*d+c*p+h*m,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),s=Math.atan2(r,e*n);t=Math.sin(t*s)/r,a=Math.sin(a*s)/r}const r=a*n;if(o=o*t+u*r,l=l*t+d*r,c=c*t+p*r,h=h*t+m*r,t===1-a){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,s){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return t[e]=a*p+c*h+o*d-l*u,t[e+1]=o*p+c*u+l*h-a*d,t[e+2]=l*p+c*d+a*u-o*h,t[e+3]=c*p-a*h-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error(\"THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.\");const n=t._x,i=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),h=a(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(s){case\"XYZ\":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case\"YXZ\":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case\"ZXY\":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case\"ZYX\":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case\"YZX\":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case\"XZY\":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn(\"THREE.Quaternion: .setFromEuler() encountered an unknown order: \"+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+a+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(s-i)*t}else if(n>a&&n>h){const t=2*Math.sqrt(1+n-a-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(r+l)/t}else if(a>h){const t=2*Math.sqrt(1+a-n-h);this._w=(r-l)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-a);this._w=(s-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ut(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+s*a+i*l-r*o,this._y=i*c+s*o+r*a-n*l,this._z=r*c+s*l+n*o-i*a,this._w=s*c-n*a-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,s=this._w;let a=s*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=s*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Nt.prototype.isQuaternion=!0;class zt{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error(\"index is out of range: \"+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(\"index is out of range: \"+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\"),this.applyQuaternion(Ft.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ft.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,s=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*i-a*n,c=o*n+a*e-r*i,h=o*i+r*n-s*e,u=-r*e-s*n-a*i;return this.x=l*o+u*-r+c*-a-h*-s,this.y=c*o+u*-s+h*-r-l*-a,this.z=h*o+u*-a+l*-s-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=i*o-r*a,this.y=r*s-n*o,this.z=n*a-i*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Bt.copy(this).projectOnVector(t),this.sub(Bt)}reflect(t){return this.sub(Bt.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ut(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn(\"THREE.Vector3: offset has been removed from .fromBufferAttribute().\"),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}zt.prototype.isVector3=!0;const Bt=new zt,Ft=new Nt;class Ot{constructor(t=new zt(1/0,1/0,1/0),e=new zt(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],c=t[o+1],h=t[o+2];l<e&&(e=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>s&&(s=c),h>a&&(a=h)}return this.min.set(e,n,i),this.max.set(r,s,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),c=t.getY(o),h=t.getZ(o);l<e&&(e=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>s&&(s=c),h>a&&(a=h)}return this.min.set(e,n,i),this.max.set(r,s,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ht.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Gt.copy(e.boundingBox),Gt.applyMatrix4(t.matrixWorld),this.union(Gt));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ht),Ht.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Yt),Jt.subVectors(this.max,Yt),kt.subVectors(t.a,Yt),Vt.subVectors(t.b,Yt),Wt.subVectors(t.c,Yt),jt.subVectors(Vt,kt),qt.subVectors(Wt,Vt),Xt.subVectors(kt,Wt);let e=[0,-jt.z,jt.y,0,-qt.z,qt.y,0,-Xt.z,Xt.y,jt.z,0,-jt.x,qt.z,0,-qt.x,Xt.z,0,-Xt.x,-jt.y,jt.x,0,-qt.y,qt.x,0,-Xt.y,Xt.x,0];return!!Kt(e,kt,Vt,Wt,Jt)&&(e=[1,0,0,0,1,0,0,0,1],!!Kt(e,kt,Vt,Wt,Jt)&&(Zt.crossVectors(jt,qt),e=[Zt.x,Zt.y,Zt.z],Kt(e,kt,Vt,Wt,Jt)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ht.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(Ht).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ut[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ut[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ut[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ut[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ut[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ut[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ut[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ut[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ut)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Ot.prototype.isBox3=!0;const Ut=[new zt,new zt,new zt,new zt,new zt,new zt,new zt,new zt],Ht=new zt,Gt=new Ot,kt=new zt,Vt=new zt,Wt=new zt,jt=new zt,qt=new zt,Xt=new zt,Yt=new zt,Jt=new zt,Zt=new zt,Qt=new zt;function Kt(t,e,n,i,r){for(let s=0,a=t.length-3;s<=a;s+=3){Qt.fromArray(t,s);const a=r.x*Math.abs(Qt.x)+r.y*Math.abs(Qt.y)+r.z*Math.abs(Qt.z),o=e.dot(Qt),l=n.dot(Qt),c=i.dot(Qt);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const $t=new Ot,te=new zt,ee=new zt,ne=new zt;class ie{constructor(t=new zt,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):$t.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){ne.subVectors(t,this.center);const e=ne.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(ne.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return ee.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(te.copy(t.center).add(ee)),this.expandByPoint(te.copy(t.center).sub(ee)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const re=new zt,se=new zt,ae=new zt,oe=new zt,le=new zt,ce=new zt,he=new zt;class ue{constructor(t=new zt,e=new zt(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,re)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=re.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(re.copy(this.direction).multiplyScalar(e).add(this.origin),re.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){se.copy(t).add(e).multiplyScalar(.5),ae.copy(e).sub(t).normalize(),oe.copy(this.origin).sub(se);const r=.5*t.distanceTo(e),s=-this.direction.dot(ae),a=oe.dot(this.direction),o=-oe.dot(ae),l=oe.lengthSq(),c=Math.abs(1-s*s);let h,u,d,p;if(c>0)if(h=s*o-a,u=s*a-o,p=r*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+s*u+2*a)+u*(s*h+u+2*o)+l}else u=r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-s*r+a)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(h=Math.max(0,-(s*r+a)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l);else u=s>0?-r:r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(ae).multiplyScalar(u).add(se),d}intersectSphere(t,e){re.subVectors(t.center,this.origin);const n=re.dot(this.direction),i=re.dot(re)-n*n,r=t.radius*t.radius;if(i>r)return null;const s=Math.sqrt(r-i),a=n-s,o=n+s;return a<0&&o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,s,a,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,s=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,s=(t.min.y-u.y)*c),n>s||r>i?null:((r>n||n!=n)&&(n=r),(s<i||i!=i)&&(i=s),h>=0?(a=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(a=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,re)}intersectTriangle(t,e,n,i,r){le.subVectors(e,t),ce.subVectors(n,t),he.crossVectors(le,ce);let s,a=this.direction.dot(he);if(a>0){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}oe.subVectors(this.origin,t);const o=s*this.direction.dot(ce.crossVectors(oe,ce));if(o<0)return null;const l=s*this.direction.dot(le.cross(oe));if(l<0)return null;if(o+l>a)return null;const c=-s*oe.dot(he);return c<0?null:this.at(c/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class de{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")}set(t,e,n,i,r,s,a,o,l,c,h,u,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new de).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/pe.setFromMatrixColumn(t,0).length(),r=1/pe.setFromMatrixColumn(t,1).length(),s=1/pe.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error(\"THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");const e=this.elements,n=t.x,i=t.y,r=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if(\"XYZ\"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=s*o}else if(\"YXZ\"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*a,e[4]=i*a-n,e[8]=s*l,e[1]=s*h,e[5]=s*c,e[9]=-a,e[2]=n*a-i,e[6]=r+t*a,e[10]=s*o}else if(\"ZXY\"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*a,e[4]=-s*h,e[8]=i+n*a,e[1]=n+i*a,e[5]=s*c,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if(\"ZYX\"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=a*o,e[10]=s*o}else if(\"YZX\"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=s*c,e[9]=-a*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if(\"XZY\"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=s*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=a*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(fe,t,ge)}lookAt(t,e,n){const i=this.elements;return xe.subVectors(t,e),0===xe.lengthSq()&&(xe.z=1),xe.normalize(),ve.crossVectors(n,xe),0===ve.lengthSq()&&(1===Math.abs(n.z)?xe.x+=1e-4:xe.z+=1e-4,xe.normalize(),ve.crossVectors(n,xe)),ve.normalize(),ye.crossVectors(xe,ve),i[0]=ve.x,i[4]=ye.x,i[8]=xe.x,i[1]=ve.y,i[5]=ye.y,i[9]=xe.y,i[2]=ve.z,i[6]=ye.z,i[10]=xe.z,this}multiply(t,e){return void 0!==e?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],M=i[0],b=i[4],w=i[8],S=i[12],T=i[1],E=i[5],A=i[9],L=i[13],R=i[2],C=i[6],P=i[10],I=i[14],D=i[3],N=i[7],z=i[11],B=i[15];return r[0]=s*M+a*T+o*R+l*D,r[4]=s*b+a*E+o*C+l*N,r[8]=s*w+a*A+o*P+l*z,r[12]=s*S+a*L+o*I+l*B,r[1]=c*M+h*T+u*R+d*D,r[5]=c*b+h*E+u*C+d*N,r[9]=c*w+h*A+u*P+d*z,r[13]=c*S+h*L+u*I+d*B,r[2]=p*M+m*T+f*R+g*D,r[6]=p*b+m*E+f*C+g*N,r[10]=p*w+m*A+f*P+g*z,r[14]=p*S+m*L+f*I+g*B,r[3]=v*M+y*T+x*R+_*D,r[7]=v*b+y*E+x*C+_*N,r[11]=v*w+y*A+x*P+_*z,r[15]=v*S+y*L+x*I+_*B,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*l*h-r*a*u+n*l*u+i*a*d-n*o*d)+t[7]*(+e*o*d-e*l*u+r*s*u-i*s*d+i*l*c-r*o*c)+t[11]*(+e*l*h-e*a*d-r*s*h+n*s*d+r*a*c-n*l*c)+t[15]*(-i*a*c-e*o*h+e*a*u+i*s*h-n*s*u+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],v=h*f*l-m*u*l+m*o*d-a*f*d-h*o*g+a*u*g,y=p*u*l-c*f*l-p*o*d+s*f*d+c*o*g-s*u*g,x=c*m*l-p*h*l+p*a*d-s*m*d-c*a*g+s*h*g,_=p*h*o-c*m*o-p*a*u+s*m*u+c*a*f-s*h*f,M=e*v+n*y+i*x+r*_;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;return t[0]=v*b,t[1]=(m*u*r-h*f*r-m*i*d+n*f*d+h*i*g-n*u*g)*b,t[2]=(a*f*r-m*o*r+m*i*l-n*f*l-a*i*g+n*o*g)*b,t[3]=(h*o*r-a*u*r-h*i*l+n*u*l+a*i*d-n*o*d)*b,t[4]=y*b,t[5]=(c*f*r-p*u*r+p*i*d-e*f*d-c*i*g+e*u*g)*b,t[6]=(p*o*r-s*f*r-p*i*l+e*f*l+s*i*g-e*o*g)*b,t[7]=(s*u*r-c*o*r+c*i*l-e*u*l-s*i*d+e*o*d)*b,t[8]=x*b,t[9]=(p*h*r-c*m*r-p*n*d+e*m*d+c*n*g-e*h*g)*b,t[10]=(s*m*r-p*a*r+p*n*l-e*m*l-s*n*g+e*a*g)*b,t[11]=(c*a*r-s*h*r-c*n*l+e*h*l+s*n*d-e*a*d)*b,t[12]=_*b,t[13]=(c*m*i-p*h*i+p*n*u-e*m*u-c*n*f+e*h*f)*b,t[14]=(p*a*i-s*m*i-p*n*o+e*m*o+s*n*f-e*a*f)*b,t[15]=(s*h*i-c*a*i+c*n*o-e*h*o-s*n*u+e*a*u)*b,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,s=t.x,a=t.y,o=t.z,l=r*s,c=r*a;return this.set(l*s+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*s,0,l*o-i*a,c*o+i*s,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,s){return this.set(1,n,r,0,t,1,s,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,c=s+s,h=a+a,u=r*l,d=r*c,p=r*h,m=s*c,f=s*h,g=a*h,v=o*l,y=o*c,x=o*h,_=n.x,M=n.y,b=n.z;return i[0]=(1-(m+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*M,i[5]=(1-(u+g))*M,i[6]=(f+v)*M,i[7]=0,i[8]=(p+y)*b,i[9]=(f-v)*b,i[10]=(1-(u+m))*b,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=pe.set(i[0],i[1],i[2]).length();const s=pe.set(i[4],i[5],i[6]).length(),a=pe.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],me.copy(this);const o=1/r,l=1/s,c=1/a;return me.elements[0]*=o,me.elements[1]*=o,me.elements[2]*=o,me.elements[4]*=l,me.elements[5]*=l,me.elements[6]*=l,me.elements[8]*=c,me.elements[9]*=c,me.elements[10]*=c,e.setFromRotationMatrix(me),n.x=r,n.y=s,n.z=a,this}makePerspective(t,e,n,i,r,s){void 0===s&&console.warn(\"THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.\");const a=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),h=(n+i)/(n-i),u=-(s+r)/(s-r),d=-2*s*r/(s-r);return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,s){const a=this.elements,o=1/(e-t),l=1/(n-i),c=1/(s-r),h=(e+t)*o,u=(n+i)*l,d=(s+r)*c;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}de.prototype.isMatrix4=!0;const pe=new zt,me=new de,fe=new zt(0,0,0),ge=new zt(1,1,1),ve=new zt,ye=new zt,xe=new zt,_e=new de,Me=new Nt;class be{constructor(t=0,e=0,n=0,i=be.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],s=i[4],a=i[8],o=i[1],l=i[5],c=i[9],h=i[2],u=i[6],d=i[10];switch(e){case\"XYZ\":this._y=Math.asin(ut(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(u,l),this._z=0);break;case\"YXZ\":this._x=Math.asin(-ut(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case\"ZXY\":this._x=Math.asin(ut(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case\"ZYX\":this._y=Math.asin(-ut(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case\"YZX\":this._z=Math.asin(ut(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,d));break;case\"XZY\":this._z=Math.asin(-ut(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn(\"THREE.Euler: .setFromRotationMatrix() encountered an unknown order: \"+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return _e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(_e,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Me.setFromEuler(this),this.setFromQuaternion(Me,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new zt(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}be.prototype.isEuler=!0,be.DefaultOrder=\"XYZ\",be.RotationOrders=[\"XYZ\",\"YZX\",\"ZXY\",\"XZY\",\"YXZ\",\"ZYX\"];class we{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Se=0;const Te=new zt,Ee=new Nt,Ae=new de,Le=new zt,Re=new zt,Ce=new zt,Pe=new Nt,Ie=new zt(1,0,0),De=new zt(0,1,0),Ne=new zt(0,0,1),ze={type:\"added\"},Be={type:\"removed\"};class Fe extends rt{constructor(){super(),Object.defineProperty(this,\"id\",{value:Se++}),this.uuid=ht(),this.name=\"\",this.type=\"Object3D\",this.parent=null,this.children=[],this.up=Fe.DefaultUp.clone();const t=new zt,e=new be,n=new Nt,i=new zt(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new de},normalMatrix:{value:new xt}}),this.matrix=new de,this.matrixWorld=new de,this.matrixAutoUpdate=Fe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new we,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ee.setFromAxisAngle(t,e),this.quaternion.multiply(Ee),this}rotateOnWorldAxis(t,e){return Ee.setFromAxisAngle(t,e),this.quaternion.premultiply(Ee),this}rotateX(t){return this.rotateOnAxis(Ie,t)}rotateY(t){return this.rotateOnAxis(De,t)}rotateZ(t){return this.rotateOnAxis(Ne,t)}translateOnAxis(t,e){return Te.copy(t).applyQuaternion(this.quaternion),this.position.add(Te.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ie,t)}translateY(t){return this.translateOnAxis(De,t)}translateZ(t){return this.translateOnAxis(Ne,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Ae.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Le.copy(t):Le.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Re.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ae.lookAt(Re,Le,this.up):Ae.lookAt(Le,Re,this.up),this.quaternion.setFromRotationMatrix(Ae),i&&(Ae.extractRotation(i.matrixWorld),Ee.setFromRotationMatrix(Ae),this.quaternion.premultiply(Ee.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ze)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Be)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Be)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Ae.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ae.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ae),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty(\"id\",t)}getObjectByName(t){return this.getObjectByProperty(\"name\",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Re,t,Ce),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Re,Pe,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||\"string\"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:\"Object\",generator:\"Object3D.toJSON\"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,\"\"!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),\"{}\"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type=\"InstancedMesh\",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=s(t.geometries),i=s(t.materials),r=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),c=s(t.animations);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c)}return n.object=i,n;function s(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}Fe.DefaultUp=new zt(0,1,0),Fe.DefaultMatrixAutoUpdate=!0,Fe.prototype.isObject3D=!0;const Oe=new zt,Ue=new zt,He=new zt,Ge=new zt,ke=new zt,Ve=new zt,We=new zt,je=new zt,qe=new zt,Xe=new zt;class Ye{constructor(t=new zt,e=new zt,n=new zt){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Oe.subVectors(t,e),i.cross(Oe);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Oe.subVectors(i,e),Ue.subVectors(n,e),He.subVectors(t,e);const s=Oe.dot(Oe),a=Oe.dot(Ue),o=Oe.dot(He),l=Ue.dot(Ue),c=Ue.dot(He),h=s*l-a*a;if(0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*o-a*c)*u,p=(s*c-a*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Ge),Ge.x>=0&&Ge.y>=0&&Ge.x+Ge.y<=1}static getUV(t,e,n,i,r,s,a,o){return this.getBarycoord(t,e,n,i,Ge),o.set(0,0),o.addScaledVector(r,Ge.x),o.addScaledVector(s,Ge.y),o.addScaledVector(a,Ge.z),o}static isFrontFacing(t,e,n,i){return Oe.subVectors(n,e),Ue.subVectors(t,e),Oe.cross(Ue).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Oe.subVectors(this.c,this.b),Ue.subVectors(this.a,this.b),.5*Oe.cross(Ue).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ye.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ye.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return Ye.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return Ye.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ye.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let s,a;ke.subVectors(i,n),Ve.subVectors(r,n),je.subVectors(t,n);const o=ke.dot(je),l=Ve.dot(je);if(o<=0&&l<=0)return e.copy(n);qe.subVectors(t,i);const c=ke.dot(qe),h=Ve.dot(qe);if(c>=0&&h<=c)return e.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return s=o/(o-c),e.copy(n).addScaledVector(ke,s);Xe.subVectors(t,r);const d=ke.dot(Xe),p=Ve.dot(Xe);if(p>=0&&d<=p)return e.copy(r);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(Ve,a);const f=c*p-d*h;if(f<=0&&h-c>=0&&d-p>=0)return We.subVectors(r,i),a=(h-c)/(h-c+(d-p)),e.copy(i).addScaledVector(We,a);const g=1/(f+m+u);return s=m*g,a=u*g,e.copy(n).addScaledVector(ke,s).addScaledVector(Ve,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Je=0;class Ze extends rt{constructor(){super(),Object.defineProperty(this,\"id\",{value:Je++}),this.uuid=ht(),this.name=\"\",this.type=\"Material\",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.format=E,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=n,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=tt,this.stencilZFail=tt,this.stencilZPass=tt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn(\"THREE.Material: '\"+e+\"' parameter is undefined.\");continue}if(\"shading\"===e){console.warn(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\"),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn(\"THREE.\"+this.type+\": '\"+e+\"' is not a property of this material.\")}}toJSON(t){const e=void 0===t||\"string\"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:\"Material\",generator:\"Material.toJSON\"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,\"\"!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==E&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),\"round\"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),\"round\"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),\"{}\"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.format=t.format,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:\"dispose\"})}set needsUpdate(t){!0===t&&this.version++}}Ze.prototype.isMaterial=!0;const Qe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ke={h:0,s:0,l:0},$e={h:0,s:0,l:0};function tn(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function en(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function nn(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class rn{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):\"number\"==typeof t?this.setHex(t):\"string\"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=dt(t,1),e=ut(e,0,1),n=ut(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=tn(r,i,t+1/3),this.g=tn(r,i,t),this.b=tn(r,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn(\"THREE.Color: Alpha component of \"+t+\" will be ignored.\")}let n;if(n=/^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case\"rgb\":case\"rgba\":if(t=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case\"hsl\":case\"hsla\":if(t=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,r)}}}else if(n=/^\\#([A-Fa-f\\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Qe[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn(\"THREE.Color: Unknown color \"+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=en(t.r),this.g=en(t.g),this.b=en(t.b),this}copyLinearToSRGB(t){return this.r=nn(t.r),this.g=nn(t.g),this.b=nn(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return(\"000000\"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),s=Math.min(e,n,i);let a,o;const l=(s+r)/2;if(s===r)a=0,o=0;else{const t=r-s;switch(o=l<=.5?t/(r+s):t/(2-r-s),r){case e:a=(n-i)/t+(n<i?6:0);break;case n:a=(i-e)/t+2;break;case i:a=(e-n)/t+4}a/=6}return t.h=a,t.s=o,t.l=l,t}getStyle(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"}offsetHSL(t,e,n){return this.getHSL(Ke),Ke.h+=t,Ke.s+=e,Ke.l+=n,this.setHSL(Ke.h,Ke.s,Ke.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Ke),t.getHSL($e);const n=pt(Ke.h,$e.h,e),i=pt(Ke.s,$e.s,e),r=pt(Ke.l,$e.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}rn.NAMES=Qe,rn.prototype.isColor=!0,rn.prototype.r=1,rn.prototype.g=1,rn.prototype.b=1;class sn extends Ze{constructor(t){super(),this.type=\"MeshBasicMaterial\",this.color=new rn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}sn.prototype.isMeshBasicMaterial=!0;const an=new zt,on=new yt;class ln{constructor(t,e,n){if(Array.isArray(t))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");this.name=\"\",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=et,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",i),r=new rn),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",i),r=new yt),e[n++]=r.x,e[n++]=r.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",i),r=new zt),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",i),r=new Ct),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)on.fromBufferAttribute(this,e),on.applyMatrix3(t),this.setXY(e,on.x,on.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)an.fromBufferAttribute(this,e),an.applyMatrix3(t),this.setXYZ(e,an.x,an.y,an.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)an.x=this.getX(e),an.y=this.getY(e),an.z=this.getZ(e),an.applyMatrix4(t),this.setXYZ(e,an.x,an.y,an.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)an.x=this.getX(e),an.y=this.getY(e),an.z=this.getZ(e),an.applyNormalMatrix(t),this.setXYZ(e,an.x,an.y,an.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)an.x=this.getX(e),an.y=this.getY(e),an.z=this.getZ(e),an.transformDirection(t),this.setXYZ(e,an.x,an.y,an.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return\"\"!==this.name&&(t.name=this.name),this.usage!==et&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}ln.prototype.isBufferAttribute=!0;class cn extends ln{constructor(t,e,n){super(new Int8Array(t),e,n)}}class hn extends ln{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class un extends ln{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class dn extends ln{constructor(t,e,n){super(new Int16Array(t),e,n)}}class pn extends ln{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class mn extends ln{constructor(t,e,n){super(new Int32Array(t),e,n)}}class fn extends ln{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class gn extends ln{constructor(t,e,n){super(new Uint16Array(t),e,n)}}gn.prototype.isFloat16BufferAttribute=!0;class vn extends ln{constructor(t,e,n){super(new Float32Array(t),e,n)}}class yn extends ln{constructor(t,e,n){super(new Float64Array(t),e,n)}}let xn=0;const _n=new de,Mn=new Fe,bn=new zt,wn=new Ot,Sn=new Ot,Tn=new zt;class En extends rt{constructor(){super(),Object.defineProperty(this,\"id\",{value:xn++}),this.uuid=ht(),this.name=\"\",this.type=\"BufferGeometry\",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(_t(t)>65535?fn:pn)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new xt).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return _n.makeRotationFromQuaternion(t),this.applyMatrix4(_n),this}rotateX(t){return _n.makeRotationX(t),this.applyMatrix4(_n),this}rotateY(t){return _n.makeRotationY(t),this.applyMatrix4(_n),this}rotateZ(t){return _n.makeRotationZ(t),this.applyMatrix4(_n),this}translate(t,e,n){return _n.makeTranslation(t,e,n),this.applyMatrix4(_n),this}scale(t,e,n){return _n.makeScale(t,e,n),this.applyMatrix4(_n),this}lookAt(t){return Mn.lookAt(t),Mn.updateMatrix(),this.applyMatrix4(Mn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(bn).negate(),this.translate(bn.x,bn.y,bn.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute(\"position\",new vn(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ot);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',this),void this.boundingBox.set(new zt(-1/0,-1/0,-1/0),new zt(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];wn.setFromBufferAttribute(n),this.morphTargetsRelative?(Tn.addVectors(this.boundingBox.min,wn.min),this.boundingBox.expandByPoint(Tn),Tn.addVectors(this.boundingBox.max,wn.max),this.boundingBox.expandByPoint(Tn)):(this.boundingBox.expandByPoint(wn.min),this.boundingBox.expandByPoint(wn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ie);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',this),void this.boundingSphere.set(new zt,1/0);if(t){const n=this.boundingSphere.center;if(wn.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Sn.setFromBufferAttribute(n),this.morphTargetsRelative?(Tn.addVectors(wn.min,Sn.min),wn.expandByPoint(Tn),Tn.addVectors(wn.max,Sn.max),wn.expandByPoint(Tn)):(wn.expandByPoint(Sn.min),wn.expandByPoint(Sn.max))}wn.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Tn.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Tn));if(e)for(let r=0,s=e.length;r<s;r++){const s=e[r],a=this.morphTargetsRelative;for(let e=0,r=s.count;e<r;e++)Tn.fromBufferAttribute(s,e),a&&(bn.fromBufferAttribute(t,e),Tn.add(bn)),i=Math.max(i,n.distanceToSquared(Tn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error(\"THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)\");const n=t.array,i=e.position.array,r=e.normal.array,s=e.uv.array,a=i.length/3;void 0===e.tangent&&this.setAttribute(\"tangent\",new ln(new Float32Array(4*a),4));const o=e.tangent.array,l=[],c=[];for(let t=0;t<a;t++)l[t]=new zt,c[t]=new zt;const h=new zt,u=new zt,d=new zt,p=new yt,m=new yt,f=new yt,g=new zt,v=new zt;function y(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(s,2*t),m.fromArray(s,2*e),f.fromArray(s,2*n),u.sub(h),d.sub(h),m.sub(p),f.sub(p);const r=1/(m.x*f.y-f.x*m.y);isFinite(r)&&(g.copy(u).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(r),v.copy(d).multiplyScalar(m.x).addScaledVector(u,-f.x).multiplyScalar(r),l[t].add(g),l[e].add(g),l[n].add(g),c[t].add(v),c[e].add(v),c[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)y(n[t+0],n[t+1],n[t+2])}const _=new zt,M=new zt,b=new zt,w=new zt;function S(t){b.fromArray(r,3*t),w.copy(b);const e=l[t];_.copy(e),_.sub(b.multiplyScalar(b.dot(e))).normalize(),M.crossVectors(w,e);const n=M.dot(c[t])<0?-1:1;o[4*t]=_.x,o[4*t+1]=_.y,o[4*t+2]=_.z,o[4*t+3]=n}for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)S(n[t+0]),S(n[t+1]),S(n[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute(\"position\");if(void 0!==e){let n=this.getAttribute(\"normal\");if(void 0===n)n=new ln(new Float32Array(3*e.count),3),this.setAttribute(\"normal\",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new zt,r=new zt,s=new zt,a=new zt,o=new zt,l=new zt,c=new zt,h=new zt;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),m=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,m),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),a.add(c),o.add(c),l.add(c),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",t);void 0===e&&(e=0,console.warn(\"THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.\"));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,s=t.attributes[i],a=s.array,o=s.itemSize*e,l=Math.min(a.length,r.length-o);for(let t=0,e=o;t<l;t++,e++)r[e]=a[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Tn.fromBufferAttribute(t,e),Tn.normalize(),t.setXYZ(e,Tn.x,Tn.y,Tn.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,s=new n.constructor(e.length*i);let a=0,o=0;for(let r=0,l=e.length;r<l;r++){a=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*i;for(let t=0;t<i;t++)s[o++]=n[a++]}return new ln(s,i,r)}if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.\"),this;const e=new En,n=this.index.array,i=this.attributes;for(const r in i){const s=t(i[r],n);e.setAttribute(r,s)}const r=this.morphAttributes;for(const i in r){const s=[],a=r[i];for(let e=0,i=a.length;e<i;e++){const i=t(a[e],n);s.push(i)}e.morphAttributes[i]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,n=s.length;t<n;t++){const n=s[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};if(t.uuid=this.uuid,t.type=this.type,\"\"!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],s=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];s.push(i.toJSON(t.data))}s.length>0&&(i[e]=s,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:\"dispose\"})}}En.prototype.isBufferGeometry=!0;const An=new de,Ln=new ue,Rn=new ie,Cn=new zt,Pn=new zt,In=new zt,Dn=new zt,Nn=new zt,zn=new zt,Bn=new zt,Fn=new zt,On=new zt,Un=new yt,Hn=new yt,Gn=new yt,kn=new zt,Vn=new zt;class Wn extends Fe{constructor(t=new En,e=new sn){super(),this.type=\"Mesh\",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error(\"THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\")}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Rn.copy(n.boundingSphere),Rn.applyMatrix4(r),!1===t.ray.intersectsSphere(Rn))return;if(An.copy(r).invert(),Ln.copy(t.ray).applyMatrix4(An),null!==n.boundingBox&&!1===Ln.intersectsBox(n.boundingBox))return;let s;if(n.isBufferGeometry){const r=n.index,a=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,c=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],m=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(r.count,Math.min(p.start+p.count,d.start+d.count));n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);s=jn(this,m,t,Ln,a,o,l,c,h,i,u,d),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);s=jn(this,i,t,Ln,a,o,l,c,h,u,d,p),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}}else if(void 0!==a)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(a.count,Math.min(r.start+r.count,d.start+d.count));n<i;n+=3){s=jn(this,p,t,Ln,a,o,l,c,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=r.materialIndex,e.push(s))}}else{for(let n=Math.max(0,d.start),r=Math.min(a.count,d.start+d.count);n<r;n+=3){s=jn(this,i,t,Ln,a,o,l,c,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}}}else n.isGeometry&&console.error(\"THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\")}}function jn(t,e,n,i,r,s,a,o,l,c,h,u){Cn.fromBufferAttribute(r,c),Pn.fromBufferAttribute(r,h),In.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(s&&d){Bn.set(0,0,0),Fn.set(0,0,0),On.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const e=d[t],n=s[t];0!==e&&(Dn.fromBufferAttribute(n,c),Nn.fromBufferAttribute(n,h),zn.fromBufferAttribute(n,u),a?(Bn.addScaledVector(Dn,e),Fn.addScaledVector(Nn,e),On.addScaledVector(zn,e)):(Bn.addScaledVector(Dn.sub(Cn),e),Fn.addScaledVector(Nn.sub(Pn),e),On.addScaledVector(zn.sub(In),e)))}Cn.add(Bn),Pn.add(Fn),In.add(On)}t.isSkinnedMesh&&(t.boneTransform(c,Cn),t.boneTransform(h,Pn),t.boneTransform(u,In));const p=function(t,e,n,i,r,s,a,o){let l;if(l=1===e.side?i.intersectTriangle(a,s,r,!0,o):i.intersectTriangle(r,s,a,2!==e.side,o),null===l)return null;Vn.copy(o),Vn.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Vn);return c<n.near||c>n.far?null:{distance:c,point:Vn.clone(),object:t}}(t,e,n,i,Cn,Pn,In,kn);if(p){o&&(Un.fromBufferAttribute(o,c),Hn.fromBufferAttribute(o,h),Gn.fromBufferAttribute(o,u),p.uv=Ye.getUV(kn,Cn,Pn,In,Un,Hn,Gn,new yt)),l&&(Un.fromBufferAttribute(l,c),Hn.fromBufferAttribute(l,h),Gn.fromBufferAttribute(l,u),p.uv2=Ye.getUV(kn,Cn,Pn,In,Un,Hn,Gn,new yt));const t={a:c,b:h,c:u,normal:new zt,materialIndex:0};Ye.getNormal(Cn,Pn,In,t.normal),p.face=t}return p}Wn.prototype.isMesh=!0;class qn extends En{constructor(t=1,e=1,n=1,i=1,r=1,s=1){super(),this.type=\"BoxGeometry\",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const a=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],c=[],h=[];let u=0,d=0;function p(t,e,n,i,r,s,p,m,f,g,v){const y=s/f,x=p/g,_=s/2,M=p/2,b=m/2,w=f+1,S=g+1;let T=0,E=0;const A=new zt;for(let s=0;s<S;s++){const a=s*x-M;for(let o=0;o<w;o++){const u=o*y-_;A[t]=u*i,A[e]=a*r,A[n]=b,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=m>0?1:-1,c.push(A.x,A.y,A.z),h.push(o/f),h.push(1-s/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const n=u+e+w*t,i=u+e+w*(t+1),r=u+(e+1)+w*(t+1),s=u+(e+1)+w*t;o.push(n,i,s),o.push(i,r,s),E+=6}a.addGroup(d,E,v),d+=E,u+=T}p(\"z\",\"y\",\"x\",-1,-1,n,e,t,s,r,0),p(\"z\",\"y\",\"x\",1,-1,n,e,-t,s,r,1),p(\"x\",\"z\",\"y\",1,1,t,n,e,i,s,2),p(\"x\",\"z\",\"y\",1,-1,t,n,-e,i,s,3),p(\"x\",\"y\",\"z\",1,-1,t,e,n,i,r,4),p(\"x\",\"y\",\"z\",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute(\"position\",new vn(l,3)),this.setAttribute(\"normal\",new vn(c,3)),this.setAttribute(\"uv\",new vn(h,2))}static fromJSON(t){return new qn(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Xn(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function Yn(t){const e={};for(let n=0;n<t.length;n++){const i=Xn(t[n]);for(const t in i)e[t]=i[t]}return e}const Jn={clone:Xn,merge:Yn};class Zn extends Ze{constructor(t){super(),this.type=\"ShaderMaterial\",this.defines={},this.uniforms={},this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Xn(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:\"t\",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:\"c\",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:\"v2\",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:\"v3\",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:\"v4\",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:\"m3\",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:\"m4\",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Zn.prototype.isShaderMaterial=!0;class Qn extends Fe{constructor(){super(),this.type=\"Camera\",this.matrixWorldInverse=new de,this.projectionMatrix=new de,this.projectionMatrixInverse=new de}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Qn.prototype.isCamera=!0;class Kn extends Qn{constructor(t=50,e=1,n=.1,i=2e3){super(),this.type=\"PerspectiveCamera\",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ot*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*at*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*ot*Math.atan(Math.tan(.5*at*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*at*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*i/t,e-=s.offsetY*n/a,i*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Kn.prototype.isPerspectiveCamera=!0;const $n=90;class ti extends Fe{constructor(t,e,n){if(super(),this.type=\"CubeCamera\",!0!==n.isWebGLCubeRenderTarget)return void console.error(\"THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.\");this.renderTarget=n;const i=new Kn($n,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new zt(1,0,0)),this.add(i);const r=new Kn($n,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new zt(-1,0,0)),this.add(r);const s=new Kn($n,1,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new zt(0,1,0)),this.add(s);const a=new Kn($n,1,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new zt(0,-1,0)),this.add(a);const o=new Kn($n,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new zt(0,0,1)),this.add(o);const l=new Kn($n,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new zt(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,s,a,o,l]=this.children,c=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(h),t.xr.enabled=c}}class ei extends Lt{constructor(t,e,n,i,s,a,o,l,c,h){super(t=void 0!==t?t:[],e=void 0!==e?e:r,n,i,s,a,o,l,c,h),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}ei.prototype.isCubeTexture=!0;class ni extends Pt{constructor(t,e,n){Number.isInteger(e)&&(console.warn(\"THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )\"),e=n),super(t,t,e),e=e||{},this.texture=new ei(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:g,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=E,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:\"\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\t\\t\\t\\t\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\\t\\t\\t\\t\\t#include <begin_vertex>\\n\\t\\t\\t\\t\\t#include <project_vertex>\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\",fragmentShader:\"\\n\\n\\t\\t\\t\\tuniform sampler2D tEquirect;\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\t#include <common>\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvec3 direction = normalize( vWorldDirection );\\n\\n\\t\\t\\t\\t\\tvec2 sampleUV = equirectUv( direction );\\n\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\"},i=new qn(5,5,5),r=new Zn({name:\"CubemapFromEquirect\",uniforms:Xn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const s=new Wn(i,r),a=e.minFilter;e.minFilter===y&&(e.minFilter=g);return new ti(1,10,this).update(t,s),e.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}ni.prototype.isWebGLCubeRenderTarget=!0;const ii=new zt,ri=new zt,si=new xt;class ai{constructor(t=new zt(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ii.subVectors(n,e).cross(ri.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(ii),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||si.getNormalMatrix(t),i=this.coplanarPoint(ii).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}ai.prototype.isPlane=!0;const oi=new ie,li=new zt;class ci{constructor(t=new ai,e=new ai,n=new ai,i=new ai,r=new ai,s=new ai){this.planes=[t,e,n,i,r,s]}set(t,e,n,i,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],s=n[2],a=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],d=n[9],p=n[10],m=n[11],f=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(a-i,h-o,m-u,y-f).normalize(),e[1].setComponents(a+i,h+o,m+u,y+f).normalize(),e[2].setComponents(a+r,h+l,m+d,y+g).normalize(),e[3].setComponents(a-r,h-l,m-d,y-g).normalize(),e[4].setComponents(a-s,h-c,m-p,y-v).normalize(),e[5].setComponents(a+s,h+c,m+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),oi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(oi)}intersectsSprite(t){return oi.center.set(0,0,0),oi.radius=.7071067811865476,oi.applyMatrix4(t.matrixWorld),this.intersectsSphere(oi)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(li.x=i.normal.x>0?t.max.x:t.min.x,li.y=i.normal.y>0?t.max.y:t.min.y,li.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(li)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function hi(){let t=null,e=!1,n=null,i=null;function r(e,s){n(e,s),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function ui(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=i.get(e);void 0===s?i.set(e,function(e,i){const r=e.array,s=e.usage,a=t.createBuffer();t.bindBuffer(i,a),t.bufferData(i,r,s),e.onUploadCallback();let o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn(\"THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.\"):r instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn(\"THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.\"):o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:(r instanceof Uint8Array||r instanceof Uint8ClampedArray)&&(o=5121),{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):s.version<e.version&&(!function(e,i,r){const s=i.array,a=i.updateRange;t.bindBuffer(r,e),-1===a.count?t.bufferSubData(r,0,s):(n?t.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):t.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1)}(s.buffer,e,r),s.version=e.version)}}}class di extends En{constructor(t=1,e=1,n=1,i=1){super(),this.type=\"PlaneGeometry\",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,s=e/2,a=Math.floor(n),o=Math.floor(i),l=a+1,c=o+1,h=t/a,u=e/o,d=[],p=[],m=[],f=[];for(let t=0;t<c;t++){const e=t*u-s;for(let n=0;n<l;n++){const i=n*h-r;p.push(i,-e,0),m.push(0,0,1),f.push(n/a),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const n=e+l*t,i=e+l*(t+1),r=e+1+l*(t+1),s=e+1+l*t;d.push(n,i,s),d.push(i,r,s)}this.setIndex(d),this.setAttribute(\"position\",new vn(p,3)),this.setAttribute(\"normal\",new vn(m,3)),this.setAttribute(\"uv\",new vn(f,2))}static fromJSON(t){return new di(t.width,t.height,t.widthSegments,t.heightSegments)}}const pi={alphamap_fragment:\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\",alphamap_pars_fragment:\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\",alphatest_fragment:\"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\",alphatest_pars_fragment:\"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\",aomap_fragment:\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\",aomap_pars_fragment:\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\",begin_vertex:\"vec3 transformed = vec3( position );\",beginnormal_vertex:\"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\",bsdfs:\"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\",bumpmap_pars_fragment:\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\",clipping_planes_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\",clipping_planes_pars_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\",clipping_planes_pars_vertex:\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\",clipping_planes_vertex:\"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\",color_fragment:\"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\",color_pars_fragment:\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\",color_pars_vertex:\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\",color_vertex:\"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\",common:\"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\",cube_uv_reflection_fragment:\"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\",defaultnormal_vertex:\"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\",displacementmap_pars_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\",displacementmap_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\",emissivemap_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\",emissivemap_pars_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\",encodings_fragment:\"gl_FragColor = linearToOutputTexel( gl_FragColor );\",encodings_pars_fragment:\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\",envmap_fragment:\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\",envmap_common_pars_fragment:\"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\",envmap_pars_fragment:\"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\",envmap_pars_vertex:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\",envmap_physical_pars_fragment:\"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\",envmap_vertex:\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\",fog_vertex:\"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\",fog_pars_vertex:\"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\",fog_fragment:\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\",fog_pars_fragment:\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\",gradientmap_pars_fragment:\"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\",lightmap_fragment:\"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\",lightmap_pars_fragment:\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\",lights_lambert_vertex:\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\",lights_pars_begin:\"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\",lights_toon_fragment:\"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\",lights_toon_pars_fragment:\"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\",lights_phong_fragment:\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\",lights_phong_pars_fragment:\"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\",lights_physical_fragment:\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\",lights_physical_pars_fragment:\"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\\t\\t0, 1,\\t\\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\",lights_fragment_begin:\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\",lights_fragment_maps:\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\",lights_fragment_end:\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\",logdepthbuf_fragment:\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\",logdepthbuf_pars_fragment:\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\",logdepthbuf_pars_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\",logdepthbuf_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\",map_fragment:\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\",map_pars_fragment:\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\",map_particle_fragment:\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\",map_particle_pars_fragment:\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\",metalnessmap_fragment:\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\",metalnessmap_pars_fragment:\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\",morphnormal_vertex:\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\",morphtarget_pars_vertex:\"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\",morphtarget_vertex:\"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\",normal_fragment_begin:\"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\",normal_fragment_maps:\"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\",normal_pars_fragment:\"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\",normal_pars_vertex:\"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\",normal_vertex:\"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\",normalmap_pars_fragment:\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\",clearcoat_normal_fragment_begin:\"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\",clearcoat_normal_fragment_maps:\"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\",clearcoat_pars_fragment:\"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\",output_fragment:\"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\",packing:\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\",premultiplied_alpha_fragment:\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\",project_vertex:\"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\",dithering_fragment:\"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\",dithering_pars_fragment:\"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\",roughnessmap_fragment:\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\",roughnessmap_pars_fragment:\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\",shadowmap_pars_fragment:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\",shadowmap_pars_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\",shadowmap_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\",shadowmask_pars_fragment:\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\",skinbase_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\",skinning_pars_vertex:\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\",skinning_vertex:\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\",skinnormal_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\",specularmap_fragment:\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\",specularmap_pars_fragment:\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\",tonemapping_fragment:\"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\",tonemapping_pars_fragment:\"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\",transmission_fragment:\"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\",transmission_pars_fragment:\"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\",uv_pars_fragment:\"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\",uv_pars_vertex:\"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\",uv_vertex:\"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\",uv2_pars_fragment:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\",uv2_pars_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\",uv2_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\",worldpos_vertex:\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\",background_vert:\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\",background_frag:\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\",cube_vert:\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\",cube_frag:\"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\",depth_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\",depth_frag:\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\",distanceRGBA_vert:\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\",distanceRGBA_frag:\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\",equirect_vert:\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\",equirect_frag:\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\",linedashed_vert:\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\",linedashed_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\",meshbasic_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\",meshbasic_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\",meshlambert_vert:\"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\",meshlambert_frag:\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\",meshmatcap_vert:\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\",meshmatcap_frag:\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\",meshnormal_vert:\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\",meshnormal_frag:\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\",meshphong_vert:\"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\",meshphong_frag:\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\",meshphysical_vert:\"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\",meshphysical_frag:\"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\",meshtoon_vert:\"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\",meshtoon_frag:\"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\",points_vert:\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\",points_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\",shadow_vert:\"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\",shadow_frag:\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\",sprite_vert:\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\",sprite_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\"},mi={common:{diffuse:{value:new rn(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new xt},uv2Transform:{value:new xt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new yt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new rn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new rn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new xt}},sprite:{diffuse:{value:new rn(16777215)},opacity:{value:1},center:{value:new yt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new xt}}},fi={basic:{uniforms:Yn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.fog]),vertexShader:pi.meshbasic_vert,fragmentShader:pi.meshbasic_frag},lambert:{uniforms:Yn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.fog,mi.lights,{emissive:{value:new rn(0)}}]),vertexShader:pi.meshlambert_vert,fragmentShader:pi.meshlambert_frag},phong:{uniforms:Yn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,mi.lights,{emissive:{value:new rn(0)},specular:{value:new rn(1118481)},shininess:{value:30}}]),vertexShader:pi.meshphong_vert,fragmentShader:pi.meshphong_frag},standard:{uniforms:Yn([mi.common,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.roughnessmap,mi.metalnessmap,mi.fog,mi.lights,{emissive:{value:new rn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:pi.meshphysical_vert,fragmentShader:pi.meshphysical_frag},toon:{uniforms:Yn([mi.common,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.gradientmap,mi.fog,mi.lights,{emissive:{value:new rn(0)}}]),vertexShader:pi.meshtoon_vert,fragmentShader:pi.meshtoon_frag},matcap:{uniforms:Yn([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,{matcap:{value:null}}]),vertexShader:pi.meshmatcap_vert,fragmentShader:pi.meshmatcap_frag},points:{uniforms:Yn([mi.points,mi.fog]),vertexShader:pi.points_vert,fragmentShader:pi.points_frag},dashed:{uniforms:Yn([mi.common,mi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:pi.linedashed_vert,fragmentShader:pi.linedashed_frag},depth:{uniforms:Yn([mi.common,mi.displacementmap]),vertexShader:pi.depth_vert,fragmentShader:pi.depth_frag},normal:{uniforms:Yn([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,{opacity:{value:1}}]),vertexShader:pi.meshnormal_vert,fragmentShader:pi.meshnormal_frag},sprite:{uniforms:Yn([mi.sprite,mi.fog]),vertexShader:pi.sprite_vert,fragmentShader:pi.sprite_frag},background:{uniforms:{uvTransform:{value:new xt},t2D:{value:null}},vertexShader:pi.background_vert,fragmentShader:pi.background_frag},cube:{uniforms:Yn([mi.envmap,{opacity:{value:1}}]),vertexShader:pi.cube_vert,fragmentShader:pi.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:pi.equirect_vert,fragmentShader:pi.equirect_frag},distanceRGBA:{uniforms:Yn([mi.common,mi.displacementmap,{referencePosition:{value:new zt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:pi.distanceRGBA_vert,fragmentShader:pi.distanceRGBA_frag},shadow:{uniforms:Yn([mi.lights,mi.fog,{color:{value:new rn(0)},opacity:{value:1}}]),vertexShader:pi.shadow_vert,fragmentShader:pi.shadow_frag}};function gi(t,e,n,i,r){const s=new rn(0);let a,o,c=0,h=null,u=0,d=null;function p(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return s},setClearColor:function(t,e=1){s.set(t),c=e,p(s,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,p(s,c)},render:function(n,r){let m=!1,f=!0===r.isScene?r.background:null;f&&f.isTexture&&(f=e.get(f));const g=t.xr,v=g.getSession&&g.getSession();v&&\"additive\"===v.environmentBlendMode&&(f=null),null===f?p(s,c):f&&f.isColor&&(p(f,1),m=!0),(t.autoClear||m)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),f&&(f.isCubeTexture||f.mapping===l)?(void 0===o&&(o=new Wn(new qn(1,1,1),new Zn({name:\"BackgroundCubeMaterial\",uniforms:Xn(fi.cube.uniforms),vertexShader:fi.cube.vertexShader,fragmentShader:fi.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute(\"normal\"),o.geometry.deleteAttribute(\"uv\"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,\"envMap\",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),o.material.uniforms.envMap.value=f,o.material.uniforms.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,h===f&&u===f.version&&d===t.toneMapping||(o.material.needsUpdate=!0,h=f,u=f.version,d=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):f&&f.isTexture&&(void 0===a&&(a=new Wn(new di(2,2),new Zn({name:\"BackgroundMaterial\",uniforms:Xn(fi.background.uniforms),vertexShader:fi.background.vertexShader,fragmentShader:fi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute(\"normal\"),Object.defineProperty(a.material,\"map\",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),a.material.uniforms.uvTransform.value.copy(f.matrix),h===f&&u===f.version&&d===t.toneMapping||(a.material.needsUpdate=!0,h=f,u=f.version,d=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null))}}}function vi(t,e,n,i){const r=t.getParameter(34921),s=i.isWebGL2?null:e.get(\"OES_vertex_array_object\"),a=i.isWebGL2||null!==s,o={},l=d(null);let c=l;function h(e){return i.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function m(t){f(t,0)}function f(n,r){const s=c.newAttributes,a=c.enabledAttributes,o=c.attributeDivisors;if(s[n]=1,0===a[n]&&(t.enableVertexAttribArray(n),a[n]=1),o[n]!==r){(i.isWebGL2?t:e.get(\"ANGLE_instanced_arrays\"))[i.isWebGL2?\"vertexAttribDivisor\":\"vertexAttribDivisorANGLE\"](n,r),o[n]=r}}function g(){const e=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function v(e,n,r,s,a,o){!0!==i.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,n,r,s,a,o):t.vertexAttribIPointer(e,n,r,a,o)}function y(){x(),c!==l&&(c=l,h(c.object))}function x(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,u,y,x){let _=!1;if(a){const e=function(e,n,r){const a=!0===r.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[a];void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()),c[a]=h);return h}(y,u,l);c!==e&&(c=e,h(c.object)),_=function(t,e){const n=c.attributes,i=t.attributes;let r=0;for(const t in i){const e=n[t],s=i[t];if(void 0===e)return!0;if(e.attribute!==s)return!0;if(e.data!==s.data)return!0;r++}return c.attributesNum!==r||c.index!==e}(y,x),_&&function(t,e){const n={},i=t.attributes;let r=0;for(const t in i){const e=i[t],s={};s.attribute=e,e.data&&(s.data=e.data),n[t]=s,r++}c.attributes=n,c.attributesNum=r,c.index=e}(y,x)}else{const t=!0===l.wireframe;c.geometry===y.id&&c.program===u.id&&c.wireframe===t||(c.geometry=y.id,c.program=u.id,c.wireframe=t,_=!0)}!0===r.isInstancedMesh&&(_=!0),null!==x&&n.update(x,34963),_&&(!function(r,s,a,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get(\"ANGLE_instanced_arrays\"))return;p();const l=o.attributes,c=a.getAttributes(),h=s.defaultAttributeValues;for(const e in c){const i=c[e];if(i.location>=0){let s=l[e];if(void 0===s&&(\"instanceMatrix\"===e&&r.instanceMatrix&&(s=r.instanceMatrix),\"instanceColor\"===e&&r.instanceColor&&(s=r.instanceColor)),void 0!==s){const e=s.normalized,a=s.itemSize,l=n.get(s);if(void 0===l)continue;const c=l.buffer,h=l.type,u=l.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data,l=n.stride,d=s.offset;if(n&&n.isInstancedInterleavedBuffer){for(let t=0;t<i.locationSize;t++)f(i.location+t,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<i.locationSize;t++)m(i.location+t);t.bindBuffer(34962,c);for(let t=0;t<i.locationSize;t++)v(i.location+t,a/i.locationSize,h,e,l*u,(d+a/i.locationSize*t)*u)}else{if(s.isInstancedBufferAttribute){for(let t=0;t<i.locationSize;t++)f(i.location+t,s.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let t=0;t<i.locationSize;t++)m(i.location+t);t.bindBuffer(34962,c);for(let t=0;t<i.locationSize;t++)v(i.location+t,a/i.locationSize,h,e,a*u,a/i.locationSize*t*u)}}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i.location,n);break;case 3:t.vertexAttrib3fv(i.location,n);break;case 4:t.vertexAttrib4fv(i.location,n);break;default:t.vertexAttrib1fv(i.location,n)}}}}g()}(r,l,u,y),null!==x&&t.bindBuffer(34963,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){y();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function yi(t,e,n,i){const r=i.isWebGL2;let s;this.setMode=function(t){s=t},this.render=function(e,i){t.drawArrays(s,e,i),n.update(i,s,1)},this.renderInstances=function(i,a,o){if(0===o)return;let l,c;if(r)l=t,c=\"drawArraysInstanced\";else if(l=e.get(\"ANGLE_instanced_arrays\"),c=\"drawArraysInstancedANGLE\",null===l)return void console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");l[c](s,i,a,o),n.update(a,s,o)}}function xi(t,e,n){let i;function r(e){if(\"highp\"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return\"highp\";e=\"mediump\"}return\"mediump\"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?\"mediump\":\"lowp\"}const s=\"undefined\"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||\"undefined\"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let a=void 0!==n.precision?n.precision:\"highp\";const o=r(a);o!==a&&(console.warn(\"THREE.WebGLRenderer:\",a,\"not supported, using\",o,\"instead.\"),a=o);const l=s||e.has(\"WEBGL_draw_buffers\"),c=!0===n.logarithmicDepthBuffer,h=t.getParameter(34930),u=t.getParameter(35660),d=t.getParameter(3379),p=t.getParameter(34076),m=t.getParameter(34921),f=t.getParameter(36347),g=t.getParameter(36348),v=t.getParameter(36349),y=u>0,x=s||e.has(\"OES_texture_float\");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has(\"EXT_texture_filter_anisotropic\")){const n=e.get(\"EXT_texture_filter_anisotropic\");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:s?t.getParameter(36183):0}}function _i(t){const e=this;let n=null,i=0,r=!1,s=!1;const a=new ai,o=new xt,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,r){const s=null!==t?t.length:0;let c=null;if(0!==s){if(c=l.value,!0!==r||null===c){const e=i+4*s,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=i;e!==s;++e,n+=4)a.copy(t[e]).applyMatrix4(r,o),a.normal.toArray(c,n),c[n+3]=a.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,s){const a=0!==t.length||e||0!==i||r;return r=e,n=h(t,s,0),i=t.length,a},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(e,a,o){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,m=t.get(e);if(!r||null===u||0===u.length||s&&!p)s?h(null):c();else{const t=s?0:i,e=4*t;let r=m.clippingState||null;l.value=r,r=h(u,a,e,o);for(let t=0;t!==e;++t)r[t]=n[t];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Mi(t){let e=new WeakMap;function n(t,e){return e===a?t.mapping=r:e===o&&(t.mapping=s),t}function i(t){const n=t.target;n.removeEventListener(\"dispose\",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const s=r.mapping;if(s===a||s===o){if(e.has(r)){return n(e.get(r).texture,r.mapping)}{const s=r.image;if(s&&s.height>0){const a=t.getRenderTarget(),o=new ni(s.height/2);return o.fromEquirectangularTexture(t,r),e.set(r,o),t.setRenderTarget(a),r.addEventListener(\"dispose\",i),n(o.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}fi.physical={uniforms:Yn([fi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new yt(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new rn(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new yt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new rn(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new rn(1,1,1)},specularColorMap:{value:null}}]),vertexShader:pi.meshphysical_vert,fragmentShader:pi.meshphysical_frag};class bi extends Qn{constructor(t=-1,e=1,n=1,i=-1,r=.1,s=2e3){super(),this.type=\"OrthographicCamera\",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,a=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}bi.prototype.isOrthographicCamera=!0;class wi extends Zn{constructor(t){super(t),this.type=\"RawShaderMaterial\"}}wi.prototype.isRawShaderMaterial=!0;const Si=Math.pow(2,8),Ti=[.125,.215,.35,.446,.526,.582],Ei=5+Ti.length,Ai=20,Li={[X]:0,[Y]:1,[Z]:2,[Q]:3,[K]:4,[$]:5,[J]:6},Ri=new bi,{_lodPlanes:Ci,_sizeLods:Pi,_sigmas:Ii}=Hi(),Di=new rn;let Ni=null;const zi=(1+Math.sqrt(5))/2,Bi=1/zi,Fi=[new zt(1,1,1),new zt(-1,1,1),new zt(1,1,-1),new zt(-1,1,-1),new zt(0,zi,Bi),new zt(0,zi,-Bi),new zt(Bi,0,zi),new zt(-Bi,0,zi),new zt(zi,Bi,0),new zt(-zi,Bi,0)];class Oi{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new zt(0,1,0);return new wi({name:\"SphericalGaussianBlur\",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Li[3e3]},outputEncoding:{value:Li[3e3]}},vertexShader:ji(),fragmentShader:`\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t${qi()}\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,blending:0,depthTest:!1,depthWrite:!1})}(Ai),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Ni=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Wi(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Vi(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Ci.length;t++)Ci[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Ni),t.scissorTest=!1,ki(t,0,0,t.width,t.height)}_fromTexture(t){Ni=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:p,minFilter:p,generateMipmaps:!1,type:x,format:1023,encoding:Ui(t)?t.encoding:Z,depthBuffer:!1},n=Gi(e);return n.depthBuffer=!t,this._pingPongRenderTarget=Gi(e),n}_compileMaterial(t){const e=new Wn(Ci[0],t);this._renderer.compile(e,Ri)}_sceneToCubeUV(t,e,n,i){const r=new Kn(90,1,e,n),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.outputEncoding,h=o.toneMapping;o.getClearColor(Di),o.toneMapping=0,o.outputEncoding=X,o.autoClear=!1;const u=new sn({name:\"PMREM.Background\",side:1,depthWrite:!1,depthTest:!1}),d=new Wn(new qn,u);let p=!1;const m=t.background;m?m.isColor&&(u.color.copy(m),t.background=null,p=!0):(u.color.copy(Di),p=!0);for(let e=0;e<6;e++){const n=e%3;0==n?(r.up.set(0,s[e],0),r.lookAt(a[e],0,0)):1==n?(r.up.set(0,0,s[e]),r.lookAt(0,a[e],0)):(r.up.set(0,s[e],0),r.lookAt(0,0,a[e])),ki(i,n*Si,e>2?Si:0,Si,Si),o.setRenderTarget(i),p&&o.render(d,r),o.render(t,r)}d.geometry.dispose(),d.material.dispose(),o.toneMapping=h,o.outputEncoding=c,o.autoClear=l,t.background=m}_setEncoding(t,e){!0===this._renderer.capabilities.isWebGL2&&e.format===E&&e.type===x&&e.encoding===Y?t.value=Li[3e3]:t.value=Li[e.encoding]}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===r||t.mapping===s;i?null==this._cubemapShader&&(this._cubemapShader=Wi()):null==this._equirectShader&&(this._equirectShader=Vi());const a=i?this._cubemapShader:this._equirectShader,o=new Wn(Ci[0],a),l=a.uniforms;l.envMap.value=t,i||l.texelSize.value.set(1/t.image.width,1/t.image.height),this._setEncoding(l.inputEncoding,t),this._setEncoding(l.outputEncoding,e.texture),ki(e,0,0,3*Si,2*Si),n.setRenderTarget(e),n.render(o,Ri)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<Ei;e++){const n=Math.sqrt(Ii[e]*Ii[e]-Ii[e-1]*Ii[e-1]),i=Fi[(e-1)%Fi.length];this._blur(t,e-1,e,n,i)}e.autoClear=n}_blur(t,e,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,i,\"latitudinal\",r),this._halfBlur(s,t,n,n,i,\"longitudinal\",r)}_halfBlur(t,e,n,i,r,s,a){const o=this._renderer,l=this._blurMaterial;\"latitudinal\"!==s&&\"longitudinal\"!==s&&console.error(\"blur direction must be either latitudinal or longitudinal!\");const c=new Wn(Ci[i],l),h=l.uniforms,u=Pi[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):Ai;m>Ai&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<Ai;++t){const e=t/p,n=Math.exp(-e*e/2);f.push(n),0==t?g+=n:t<m&&(g+=2*n)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;h.envMap.value=t.texture,h.samples.value=m,h.weights.value=f,h.latitudinal.value=\"latitudinal\"===s,a&&(h.poleAxis.value=a),h.dTheta.value=d,h.mipInt.value=8-n,this._setEncoding(h.inputEncoding,t.texture),this._setEncoding(h.outputEncoding,t.texture);const v=Pi[i];ki(e,3*Math.max(0,Si-2*v),(0===i?0:2*Si)+2*v*(i>4?i-8+4:0),3*v,2*v),o.setRenderTarget(e),o.render(c,Ri)}}function Ui(t){return void 0!==t&&t.type===x&&(t.encoding===X||t.encoding===Y||t.encoding===J)}function Hi(){const t=[],e=[],n=[];let i=8;for(let r=0;r<Ei;r++){const s=Math.pow(2,i);e.push(s);let a=1/s;r>4?a=Ti[r-8+4-1]:0==r&&(a=0),n.push(a);const o=1/(s-1),l=-o/2,c=1+o/2,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,d=6,p=3,m=2,f=1,g=new Float32Array(p*d*u),v=new Float32Array(m*d*u),y=new Float32Array(f*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(i,p*d*t),v.set(h,m*d*t);const r=[t,t,t,t,t,t];y.set(r,f*d*t)}const x=new En;x.setAttribute(\"position\",new ln(g,p)),x.setAttribute(\"uv\",new ln(v,m)),x.setAttribute(\"faceIndex\",new ln(y,f)),t.push(x),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function Gi(t){const e=new Pt(3*Si,3*Si,t);return e.texture.mapping=l,e.texture.name=\"PMREM.cubeUv\",e.scissorTest=!0,e}function ki(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function Vi(){const t=new yt(1,1);return new wi({name:\"EquirectangularToCubeUV\",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Li[3e3]},outputEncoding:{value:Li[3e3]}},vertexShader:ji(),fragmentShader:`\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform vec2 texelSize;\\n\\n\\t\\t\\t${qi()}\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tvec2 f = fract( uv / texelSize - 0.5 );\\n\\t\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\t\\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x += texelSize.x;\\n\\t\\t\\t\\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.y += texelSize.y;\\n\\t\\t\\t\\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x -= texelSize.x;\\n\\t\\t\\t\\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\n\\t\\t\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\t\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\t\\t\\tgl_FragColor.rgb = mix( tm, bm, f.y );\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,blending:0,depthTest:!1,depthWrite:!1})}function Wi(){return new wi({name:\"CubemapToCubeUV\",uniforms:{envMap:{value:null},inputEncoding:{value:Li[3e3]},outputEncoding:{value:Li[3e3]}},vertexShader:ji(),fragmentShader:`\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\t${qi()}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,blending:0,depthTest:!1,depthWrite:!1})}function ji(){return\"\\n\\n\\t\\tprecision mediump float;\\n\\t\\tprecision mediump int;\\n\\n\\t\\tattribute vec3 position;\\n\\t\\tattribute vec2 uv;\\n\\t\\tattribute float faceIndex;\\n\\n\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t// RH coordinate system; PMREM face-indexing convention\\n\\t\\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\\t\\t\\tuv = 2.0 * uv - 1.0;\\n\\n\\t\\t\\tvec3 direction = vec3( uv, 1.0 );\\n\\n\\t\\t\\tif ( face == 0.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\\t\\t\\t} else if ( face == 1.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\\t\\t\\t} else if ( face == 2.0 ) {\\n\\n\\t\\t\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\\t\\t\\t} else if ( face == 3.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\\t\\t\\t} else if ( face == 4.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\\t\\t\\t} else if ( face == 5.0 ) {\\n\\n\\t\\t\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn direction;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvOutputDirection = getDirection( uv, faceIndex );\\n\\t\\t\\tgl_Position = vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\t\"}function qi(){return\"\\n\\n\\t\\tuniform int inputEncoding;\\n\\t\\tuniform int outputEncoding;\\n\\n\\t\\t#include <encodings_pars_fragment>\\n\\n\\t\\tvec4 inputTexelToLinear( vec4 value ) {\\n\\n\\t\\t\\tif ( inputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( inputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn sRGBToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn RGBEToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 7.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 16.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn RGBDToLinear( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn GammaToLinear( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 linearToOutputTexel( vec4 value ) {\\n\\n\\t\\t\\tif ( outputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( outputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn LinearTosRGB( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBE( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 7.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 16.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBD( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn LinearToGamma( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 envMapTexelToLinear( vec4 color ) {\\n\\n\\t\\t\\treturn inputTexelToLinear( color );\\n\\n\\t\\t}\\n\\t\"}function Xi(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener(\"dispose\",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(l){if(l&&l.isTexture&&!1===l.isRenderTargetTexture){const c=l.mapping,h=c===a||c===o,u=c===r||c===s;if(h||u){if(e.has(l))return e.get(l).texture;{const r=l.image;if(h&&r&&r.height>0||u&&r&&function(t){let e=0;const n=6;for(let i=0;i<n;i++)void 0!==t[i]&&e++;return e===n}(r)){const r=t.getRenderTarget();null===n&&(n=new Oi(t));const s=h?n.fromEquirectangular(l):n.fromCubemap(l);return e.set(l,s),t.setRenderTarget(r),l.addEventListener(\"dispose\",i),s.texture}return null}}}return l},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Yi(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case\"WEBGL_depth_texture\":i=t.getExtension(\"WEBGL_depth_texture\")||t.getExtension(\"MOZ_WEBGL_depth_texture\")||t.getExtension(\"WEBKIT_WEBGL_depth_texture\");break;case\"EXT_texture_filter_anisotropic\":i=t.getExtension(\"EXT_texture_filter_anisotropic\")||t.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||t.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case\"WEBGL_compressed_texture_s3tc\":i=t.getExtension(\"WEBGL_compressed_texture_s3tc\")||t.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||t.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case\"WEBGL_compressed_texture_pvrtc\":i=t.getExtension(\"WEBGL_compressed_texture_pvrtc\")||t.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n(\"EXT_color_buffer_float\"):(n(\"WEBGL_depth_texture\"),n(\"OES_texture_float\"),n(\"OES_texture_half_float\"),n(\"OES_texture_half_float_linear\"),n(\"OES_standard_derivatives\"),n(\"OES_element_index_uint\"),n(\"OES_vertex_array_object\"),n(\"ANGLE_instanced_arrays\")),n(\"OES_texture_float_linear\"),n(\"EXT_color_buffer_half_float\")},get:function(t){const e=n(t);return null===e&&console.warn(\"THREE.WebGLRenderer: \"+t+\" extension not supported.\"),e}}}function Ji(t,e,n,i){const r={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener(\"dispose\",a),delete r[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let a=0;if(null!==i){const t=i.array;a=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],s=t[e+2];n.push(i,r,r,s,s,i)}}else{const t=r.array;a=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const o=new(_t(n)>65535?fn:pn)(n,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener(\"dispose\",a),r[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return s.get(t)}}}function Zi(t,e,n,i){const r=i.isWebGL2;let s,a,o;this.setMode=function(t){s=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(s,i,a,e*o),n.update(i,s,1)},this.renderInstances=function(i,l,c){if(0===c)return;let h,u;if(r)h=t,u=\"drawElementsInstanced\";else if(h=e.get(\"ANGLE_instanced_arrays\"),u=\"drawElementsInstancedANGLE\",null===h)return void console.error(\"THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");h[u](s,l,a,i*o,c),n.update(l,s,c)}}function Qi(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error(\"THREE.WebGLInfo: Unknown draw mode:\",n)}}}}class Ki extends Lt{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=p,this.minFilter=p,this.wrapR=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}function $i(t,e){return t[0]-e[0]}function tr(t,e){return Math.abs(e[1])-Math.abs(t[1])}function er(t,e){let n=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?n=127:i instanceof Int16Array?n=32767:i instanceof Int32Array?n=2147483647:console.error(\"THREE.WebGLMorphtargets: Unsupported morph attribute data type: \",i),t.divideScalar(n)}function nr(t,e,n){const i={},r=new Float32Array(8),s=new WeakMap,a=new zt,o=[];for(let t=0;t<8;t++)o[t]=[t,0];return{update:function(l,c,h,u){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const i=c.morphAttributes.position.length;let r=s.get(c);if(void 0===r||r.count!==i){void 0!==r&&r.texture.dispose();const t=void 0!==c.morphAttributes.normal,n=c.morphAttributes.position,o=c.morphAttributes.normal||[],l=!0===t?2:1;let h=c.attributes.position.count*l,u=1;h>e.maxTextureSize&&(u=Math.ceil(h/e.maxTextureSize),h=e.maxTextureSize);const d=new Float32Array(h*u*4*i),p=new Ki(d,h,u,i);p.format=E,p.type=b;const m=4*l;for(let e=0;e<i;e++){const i=n[e],r=o[e],s=h*u*4*e;for(let e=0;e<i.count;e++){a.fromBufferAttribute(i,e),!0===i.normalized&&er(a,i);const n=e*m;d[s+n+0]=a.x,d[s+n+1]=a.y,d[s+n+2]=a.z,d[s+n+3]=0,!0===t&&(a.fromBufferAttribute(r,e),!0===r.normalized&&er(a,r),d[s+n+4]=a.x,d[s+n+5]=a.y,d[s+n+6]=a.z,d[s+n+7]=0)}}r={count:i,texture:p,size:new yt(h,u)},s.set(c,r)}let o=0;for(let t=0;t<d.length;t++)o+=d[t];const l=c.morphTargetsRelative?1:1-o;u.getUniforms().setValue(t,\"morphTargetBaseInfluence\",l),u.getUniforms().setValue(t,\"morphTargetInfluences\",d),u.getUniforms().setValue(t,\"morphTargetsTexture\",r.texture,n),u.getUniforms().setValue(t,\"morphTargetsTextureSize\",r.size)}else{const e=void 0===d?0:d.length;let n=i[c.id];if(void 0===n||n.length!==e){n=[];for(let t=0;t<e;t++)n[t]=[t,0];i[c.id]=n}for(let t=0;t<e;t++){const e=n[t];e[0]=t,e[1]=d[t]}n.sort(tr);for(let t=0;t<8;t++)t<e&&n[t][1]?(o[t][0]=n[t][0],o[t][1]=n[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort($i);const s=c.morphAttributes.position,a=c.morphAttributes.normal;let l=0;for(let t=0;t<8;t++){const e=o[t],n=e[0],i=e[1];n!==Number.MAX_SAFE_INTEGER&&i?(s&&c.getAttribute(\"morphTarget\"+t)!==s[n]&&c.setAttribute(\"morphTarget\"+t,s[n]),a&&c.getAttribute(\"morphNormal\"+t)!==a[n]&&c.setAttribute(\"morphNormal\"+t,a[n]),r[t]=i,l+=i):(s&&!0===c.hasAttribute(\"morphTarget\"+t)&&c.deleteAttribute(\"morphTarget\"+t),a&&!0===c.hasAttribute(\"morphNormal\"+t)&&c.deleteAttribute(\"morphNormal\"+t),r[t]=0)}const h=c.morphTargetsRelative?1:1-l;u.getUniforms().setValue(t,\"morphTargetBaseInfluence\",h),u.getUniforms().setValue(t,\"morphTargetInfluences\",r)}}}}function ir(t,e,n,i){let r=new WeakMap;function s(t){const e=t.target;e.removeEventListener(\"dispose\",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const a=i.render.frame,o=t.geometry,l=e.get(t,o);return r.get(l)!==a&&(e.update(l),r.set(l,a)),t.isInstancedMesh&&(!1===t.hasEventListener(\"dispose\",s)&&t.addEventListener(\"dispose\",s),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}Ki.prototype.isDataTexture2DArray=!0;class rr extends Lt{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=p,this.minFilter=p,this.wrapR=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}rr.prototype.isDataTexture3D=!0;const sr=new Lt,ar=new Ki,or=new rr,lr=new ei,cr=[],hr=[],ur=new Float32Array(16),dr=new Float32Array(9),pr=new Float32Array(4);function mr(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=cr[r];if(void 0===s&&(s=new Float32Array(r),cr[r]=s),0!==e){i.toArray(s,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(s,r)}return s}function fr(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function gr(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function vr(t,e){let n=hr[e];void 0===n&&(n=new Int32Array(e),hr[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function yr(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function xr(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(fr(n,e))return;t.uniform2fv(this.addr,e),gr(n,e)}}function _r(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(fr(n,e))return;t.uniform3fv(this.addr,e),gr(n,e)}}function Mr(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(fr(n,e))return;t.uniform4fv(this.addr,e),gr(n,e)}}function br(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(fr(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),gr(n,e)}else{if(fr(n,i))return;pr.set(i),t.uniformMatrix2fv(this.addr,!1,pr),gr(n,i)}}function wr(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(fr(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),gr(n,e)}else{if(fr(n,i))return;dr.set(i),t.uniformMatrix3fv(this.addr,!1,dr),gr(n,i)}}function Sr(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(fr(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),gr(n,e)}else{if(fr(n,i))return;ur.set(i),t.uniformMatrix4fv(this.addr,!1,ur),gr(n,i)}}function Tr(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Er(t,e){const n=this.cache;fr(n,e)||(t.uniform2iv(this.addr,e),gr(n,e))}function Ar(t,e){const n=this.cache;fr(n,e)||(t.uniform3iv(this.addr,e),gr(n,e))}function Lr(t,e){const n=this.cache;fr(n,e)||(t.uniform4iv(this.addr,e),gr(n,e))}function Rr(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Cr(t,e){const n=this.cache;fr(n,e)||(t.uniform2uiv(this.addr,e),gr(n,e))}function Pr(t,e){const n=this.cache;fr(n,e)||(t.uniform3uiv(this.addr,e),gr(n,e))}function Ir(t,e){const n=this.cache;fr(n,e)||(t.uniform4uiv(this.addr,e),gr(n,e))}function Dr(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||sr,r)}function Nr(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||or,r)}function zr(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||lr,r)}function Br(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||ar,r)}function Fr(t,e){t.uniform1fv(this.addr,e)}function Or(t,e){const n=mr(e,this.size,2);t.uniform2fv(this.addr,n)}function Ur(t,e){const n=mr(e,this.size,3);t.uniform3fv(this.addr,n)}function Hr(t,e){const n=mr(e,this.size,4);t.uniform4fv(this.addr,n)}function Gr(t,e){const n=mr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function kr(t,e){const n=mr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Vr(t,e){const n=mr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Wr(t,e){t.uniform1iv(this.addr,e)}function jr(t,e){t.uniform2iv(this.addr,e)}function qr(t,e){t.uniform3iv(this.addr,e)}function Xr(t,e){t.uniform4iv(this.addr,e)}function Yr(t,e){t.uniform1uiv(this.addr,e)}function Jr(t,e){t.uniform2uiv(this.addr,e)}function Zr(t,e){t.uniform3uiv(this.addr,e)}function Qr(t,e){t.uniform4uiv(this.addr,e)}function Kr(t,e,n){const i=e.length,r=vr(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||sr,r[t])}function $r(t,e,n){const i=e.length,r=vr(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||lr,r[t])}function ts(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return yr;case 35664:return xr;case 35665:return _r;case 35666:return Mr;case 35674:return br;case 35675:return wr;case 35676:return Sr;case 5124:case 35670:return Tr;case 35667:case 35671:return Er;case 35668:case 35672:return Ar;case 35669:case 35673:return Lr;case 5125:return Rr;case 36294:return Cr;case 36295:return Pr;case 36296:return Ir;case 35678:case 36198:case 36298:case 36306:case 35682:return Dr;case 35679:case 36299:case 36307:return Nr;case 35680:case 36300:case 36308:case 36293:return zr;case 36289:case 36303:case 36311:case 36292:return Br}}(e.type)}function es(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Fr;case 35664:return Or;case 35665:return Ur;case 35666:return Hr;case 35674:return Gr;case 35675:return kr;case 35676:return Vr;case 5124:case 35670:return Wr;case 35667:case 35671:return jr;case 35668:case 35672:return qr;case 35669:case 35673:return Xr;case 5125:return Yr;case 36294:return Jr;case 36295:return Zr;case 36296:return Qr;case 35678:case 36198:case 36298:case 36306:case 35682:return Kr;case 35680:case 36300:case 36308:case 36293:return $r}}(e.type)}function ns(t){this.id=t,this.seq=[],this.map={}}es.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),gr(e,t)},ns.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const s=i[r];s.setValue(t,e[s.id],n)}};const is=/(\\w+)(\\])?(\\[|\\.)?/g;function rs(t,e){t.seq.push(e),t.map[e.id]=e}function ss(t,e,n){const i=t.name,r=i.length;for(is.lastIndex=0;;){const s=is.exec(i),a=is.lastIndex;let o=s[1];const l=\"]\"===s[2],c=s[3];if(l&&(o|=0),void 0===c||\"[\"===c&&a+2===r){rs(n,void 0===c?new ts(o,t,e):new es(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new ns(o),rs(n,t)),n=t}}}function as(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);ss(n,t.getUniformLocation(e,n.name),this)}}function os(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}as.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},as.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},as.upload=function(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const s=e[r],a=n[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,i)}},as.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let ls=0;function cs(t){switch(t){case X:return[\"Linear\",\"( value )\"];case Y:return[\"sRGB\",\"( value )\"];case Z:return[\"RGBE\",\"( value )\"];case Q:return[\"RGBM\",\"( value, 7.0 )\"];case K:return[\"RGBM\",\"( value, 16.0 )\"];case $:return[\"RGBD\",\"( value, 256.0 )\"];case J:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];case 3003:return[\"LogLuv\",\"( value )\"];default:return console.warn(\"THREE.WebGLProgram: Unsupported encoding:\",t),[\"Linear\",\"( value )\"]}}function hs(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return i&&\"\"===r?\"\":n.toUpperCase()+\"\\n\\n\"+r+\"\\n\\n\"+function(t){const e=t.split(\"\\n\");for(let t=0;t<e.length;t++)e[t]=t+1+\": \"+e[t];return e.join(\"\\n\")}(t.getShaderSource(e))}function us(t,e){const n=cs(e);return\"vec4 \"+t+\"( vec4 value ) { return \"+n[0]+\"ToLinear\"+n[1]+\"; }\"}function ds(t,e){const n=cs(e);return\"vec4 \"+t+\"( vec4 value ) { return LinearTo\"+n[0]+n[1]+\"; }\"}function ps(t,e){let n;switch(e){case 1:n=\"Linear\";break;case 2:n=\"Reinhard\";break;case 3:n=\"OptimizedCineon\";break;case 4:n=\"ACESFilmic\";break;case 5:n=\"Custom\";break;default:console.warn(\"THREE.WebGLProgram: Unsupported toneMapping:\",e),n=\"Linear\"}return\"vec3 \"+t+\"( vec3 color ) { return \"+n+\"ToneMapping( color ); }\"}function ms(t){return\"\"!==t}function fs(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function gs(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const vs=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function ys(t){return t.replace(vs,xs)}function xs(t,e){const n=pi[e];if(void 0===n)throw new Error(\"Can not resolve #include <\"+e+\">\");return ys(n)}const _s=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,Ms=/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;function bs(t){return t.replace(Ms,Ss).replace(_s,ws)}function ws(t,e,n,i){return console.warn(\"WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.\"),Ss(t,e,n,i)}function Ss(t,e,n,i){let r=\"\";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\\[\\s*i\\s*\\]/g,\"[ \"+t+\" ]\").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Ts(t){let e=\"precision \"+t.precision+\" float;\\nprecision \"+t.precision+\" int;\";return\"highp\"===t.precision?e+=\"\\n#define HIGH_PRECISION\":\"mediump\"===t.precision?e+=\"\\n#define MEDIUM_PRECISION\":\"lowp\"===t.precision&&(e+=\"\\n#define LOW_PRECISION\"),e}function Es(t,e,n,i){const a=t.getContext(),o=n.defines;let h=n.vertexShader,u=n.fragmentShader;const d=function(t){let e=\"SHADOWMAP_TYPE_BASIC\";return 1===t.shadowMapType?e=\"SHADOWMAP_TYPE_PCF\":2===t.shadowMapType?e=\"SHADOWMAP_TYPE_PCF_SOFT\":3===t.shadowMapType&&(e=\"SHADOWMAP_TYPE_VSM\"),e}(n),p=function(t){let e=\"ENVMAP_TYPE_CUBE\";if(t.envMap)switch(t.envMapMode){case r:case s:e=\"ENVMAP_TYPE_CUBE\";break;case l:case c:e=\"ENVMAP_TYPE_CUBE_UV\"}return e}(n),m=function(t){let e=\"ENVMAP_MODE_REFLECTION\";if(t.envMap)switch(t.envMapMode){case s:case c:e=\"ENVMAP_MODE_REFRACTION\"}return e}(n),f=function(t){let e=\"ENVMAP_BLENDING_NONE\";if(t.envMap)switch(t.combine){case 0:e=\"ENVMAP_BLENDING_MULTIPLY\";break;case 1:e=\"ENVMAP_BLENDING_MIX\";break;case 2:e=\"ENVMAP_BLENDING_ADD\"}return e}(n),g=t.gammaFactor>0?t.gammaFactor:1,v=n.isWebGL2?\"\":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||\"physical\"===t.shaderID?\"#extension GL_OES_standard_derivatives : enable\":\"\",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?\"#extension GL_EXT_frag_depth : enable\":\"\",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?\"#extension GL_EXT_draw_buffers : require\":\"\",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?\"#extension GL_EXT_shader_texture_lod : enable\":\"\"].filter(ms).join(\"\\n\")}(n),y=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push(\"#define \"+n+\" \"+i)}return e.join(\"\\n\")}(o),x=a.createProgram();let _,M,b=n.glslVersion?\"#version \"+n.glslVersion+\"\\n\":\"\";n.isRawShaderMaterial?(_=[y].filter(ms).join(\"\\n\"),_.length>0&&(_+=\"\\n\"),M=[v,y].filter(ms).join(\"\\n\"),M.length>0&&(M+=\"\\n\")):(_=[Ts(n),\"#define SHADER_NAME \"+n.shaderName,y,n.instancing?\"#define USE_INSTANCING\":\"\",n.instancingColor?\"#define USE_INSTANCING_COLOR\":\"\",n.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",\"#define GAMMA_FACTOR \"+g,\"#define MAX_BONES \"+n.maxBones,n.useFog&&n.fog?\"#define USE_FOG\":\"\",n.useFog&&n.fogExp2?\"#define FOG_EXP2\":\"\",n.map?\"#define USE_MAP\":\"\",n.envMap?\"#define USE_ENVMAP\":\"\",n.envMap?\"#define \"+m:\"\",n.lightMap?\"#define USE_LIGHTMAP\":\"\",n.aoMap?\"#define USE_AOMAP\":\"\",n.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",n.bumpMap?\"#define USE_BUMPMAP\":\"\",n.normalMap?\"#define USE_NORMALMAP\":\"\",n.normalMap&&n.objectSpaceNormalMap?\"#define OBJECTSPACE_NORMALMAP\":\"\",n.normalMap&&n.tangentSpaceNormalMap?\"#define TANGENTSPACE_NORMALMAP\":\"\",n.clearcoatMap?\"#define USE_CLEARCOATMAP\":\"\",n.clearcoatRoughnessMap?\"#define USE_CLEARCOAT_ROUGHNESSMAP\":\"\",n.clearcoatNormalMap?\"#define USE_CLEARCOAT_NORMALMAP\":\"\",n.displacementMap&&n.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",n.specularMap?\"#define USE_SPECULARMAP\":\"\",n.specularIntensityMap?\"#define USE_SPECULARINTENSITYMAP\":\"\",n.specularColorMap?\"#define USE_SPECULARCOLORMAP\":\"\",n.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",n.metalnessMap?\"#define USE_METALNESSMAP\":\"\",n.alphaMap?\"#define USE_ALPHAMAP\":\"\",n.transmission?\"#define USE_TRANSMISSION\":\"\",n.transmissionMap?\"#define USE_TRANSMISSIONMAP\":\"\",n.thicknessMap?\"#define USE_THICKNESSMAP\":\"\",n.sheenColorMap?\"#define USE_SHEENCOLORMAP\":\"\",n.sheenRoughnessMap?\"#define USE_SHEENROUGHNESSMAP\":\"\",n.vertexTangents?\"#define USE_TANGENT\":\"\",n.vertexColors?\"#define USE_COLOR\":\"\",n.vertexAlphas?\"#define USE_COLOR_ALPHA\":\"\",n.vertexUvs?\"#define USE_UV\":\"\",n.uvsVertexOnly?\"#define UVS_VERTEX_ONLY\":\"\",n.flatShading?\"#define FLAT_SHADED\":\"\",n.skinning?\"#define USE_SKINNING\":\"\",n.useVertexTexture?\"#define BONE_TEXTURE\":\"\",n.morphTargets?\"#define USE_MORPHTARGETS\":\"\",n.morphNormals&&!1===n.flatShading?\"#define USE_MORPHNORMALS\":\"\",n.morphTargets&&n.isWebGL2?\"#define MORPHTARGETS_TEXTURE\":\"\",n.morphTargets&&n.isWebGL2?\"#define MORPHTARGETS_COUNT \"+n.morphTargetsCount:\"\",n.doubleSided?\"#define DOUBLE_SIDED\":\"\",n.flipSided?\"#define FLIP_SIDED\":\"\",n.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",n.shadowMapEnabled?\"#define \"+d:\"\",n.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",n.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"uniform bool isOrthographic;\",\"#ifdef USE_INSTANCING\",\"\\tattribute mat4 instanceMatrix;\",\"#endif\",\"#ifdef USE_INSTANCING_COLOR\",\"\\tattribute vec3 instanceColor;\",\"#endif\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_TANGENT\",\"\\tattribute vec4 tangent;\",\"#endif\",\"#if defined( USE_COLOR_ALPHA )\",\"\\tattribute vec4 color;\",\"#elif defined( USE_COLOR )\",\"\\tattribute vec3 color;\",\"#endif\",\"#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(ms).join(\"\\n\"),M=[v,Ts(n),\"#define SHADER_NAME \"+n.shaderName,y,\"#define GAMMA_FACTOR \"+g,n.useFog&&n.fog?\"#define USE_FOG\":\"\",n.useFog&&n.fogExp2?\"#define FOG_EXP2\":\"\",n.map?\"#define USE_MAP\":\"\",n.matcap?\"#define USE_MATCAP\":\"\",n.envMap?\"#define USE_ENVMAP\":\"\",n.envMap?\"#define \"+p:\"\",n.envMap?\"#define \"+m:\"\",n.envMap?\"#define \"+f:\"\",n.lightMap?\"#define USE_LIGHTMAP\":\"\",n.aoMap?\"#define USE_AOMAP\":\"\",n.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",n.bumpMap?\"#define USE_BUMPMAP\":\"\",n.normalMap?\"#define USE_NORMALMAP\":\"\",n.normalMap&&n.objectSpaceNormalMap?\"#define OBJECTSPACE_NORMALMAP\":\"\",n.normalMap&&n.tangentSpaceNormalMap?\"#define TANGENTSPACE_NORMALMAP\":\"\",n.clearcoat?\"#define USE_CLEARCOAT\":\"\",n.clearcoatMap?\"#define USE_CLEARCOATMAP\":\"\",n.clearcoatRoughnessMap?\"#define USE_CLEARCOAT_ROUGHNESSMAP\":\"\",n.clearcoatNormalMap?\"#define USE_CLEARCOAT_NORMALMAP\":\"\",n.specularMap?\"#define USE_SPECULARMAP\":\"\",n.specularIntensityMap?\"#define USE_SPECULARINTENSITYMAP\":\"\",n.specularColorMap?\"#define USE_SPECULARCOLORMAP\":\"\",n.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",n.metalnessMap?\"#define USE_METALNESSMAP\":\"\",n.alphaMap?\"#define USE_ALPHAMAP\":\"\",n.alphaTest?\"#define USE_ALPHATEST\":\"\",n.sheen?\"#define USE_SHEEN\":\"\",n.sheenColorMap?\"#define USE_SHEENCOLORMAP\":\"\",n.sheenRoughnessMap?\"#define USE_SHEENROUGHNESSMAP\":\"\",n.transmission?\"#define USE_TRANSMISSION\":\"\",n.transmissionMap?\"#define USE_TRANSMISSIONMAP\":\"\",n.thicknessMap?\"#define USE_THICKNESSMAP\":\"\",n.vertexTangents?\"#define USE_TANGENT\":\"\",n.vertexColors||n.instancingColor?\"#define USE_COLOR\":\"\",n.vertexAlphas?\"#define USE_COLOR_ALPHA\":\"\",n.vertexUvs?\"#define USE_UV\":\"\",n.uvsVertexOnly?\"#define UVS_VERTEX_ONLY\":\"\",n.gradientMap?\"#define USE_GRADIENTMAP\":\"\",n.flatShading?\"#define FLAT_SHADED\":\"\",n.doubleSided?\"#define DOUBLE_SIDED\":\"\",n.flipSided?\"#define FLIP_SIDED\":\"\",n.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",n.shadowMapEnabled?\"#define \"+d:\"\",n.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",n.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",n.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?\"#define USE_LOGDEPTHBUF_EXT\":\"\",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?\"#define TEXTURE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",\"uniform bool isOrthographic;\",0!==n.toneMapping?\"#define TONE_MAPPING\":\"\",0!==n.toneMapping?pi.tonemapping_pars_fragment:\"\",0!==n.toneMapping?ps(\"toneMapping\",n.toneMapping):\"\",n.dithering?\"#define DITHERING\":\"\",n.format===T?\"#define OPAQUE\":\"\",pi.encodings_pars_fragment,n.map?us(\"mapTexelToLinear\",n.mapEncoding):\"\",n.matcap?us(\"matcapTexelToLinear\",n.matcapEncoding):\"\",n.envMap?us(\"envMapTexelToLinear\",n.envMapEncoding):\"\",n.emissiveMap?us(\"emissiveMapTexelToLinear\",n.emissiveMapEncoding):\"\",n.specularColorMap?us(\"specularColorMapTexelToLinear\",n.specularColorMapEncoding):\"\",n.sheenColorMap?us(\"sheenColorMapTexelToLinear\",n.sheenColorMapEncoding):\"\",n.lightMap?us(\"lightMapTexelToLinear\",n.lightMapEncoding):\"\",ds(\"linearToOutputTexel\",n.outputEncoding),n.depthPacking?\"#define DEPTH_PACKING \"+n.depthPacking:\"\",\"\\n\"].filter(ms).join(\"\\n\")),h=ys(h),h=fs(h,n),h=gs(h,n),u=ys(u),u=fs(u,n),u=gs(u,n),h=bs(h),u=bs(u),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(b=\"#version 300 es\\n\",_=[\"precision mediump sampler2DArray;\",\"#define attribute in\",\"#define varying out\",\"#define texture2D texture\"].join(\"\\n\")+\"\\n\"+_,M=[\"#define varying in\",n.glslVersion===it?\"\":\"out highp vec4 pc_fragColor;\",n.glslVersion===it?\"\":\"#define gl_FragColor pc_fragColor\",\"#define gl_FragDepthEXT gl_FragDepth\",\"#define texture2D texture\",\"#define textureCube texture\",\"#define texture2DProj textureProj\",\"#define texture2DLodEXT textureLod\",\"#define texture2DProjLodEXT textureProjLod\",\"#define textureCubeLodEXT textureLod\",\"#define texture2DGradEXT textureGrad\",\"#define texture2DProjGradEXT textureProjGrad\",\"#define textureCubeGradEXT textureGrad\"].join(\"\\n\")+\"\\n\"+M);const w=b+M+u,S=os(a,35633,b+_+h),E=os(a,35632,w);if(a.attachShader(x,S),a.attachShader(x,E),void 0!==n.index0AttributeName?a.bindAttribLocation(x,0,n.index0AttributeName):!0===n.morphTargets&&a.bindAttribLocation(x,0,\"position\"),a.linkProgram(x),t.debug.checkShaderErrors){const t=a.getProgramInfoLog(x).trim(),e=a.getShaderInfoLog(S).trim(),n=a.getShaderInfoLog(E).trim();let i=!0,r=!0;if(!1===a.getProgramParameter(x,35714)){i=!1;const e=hs(a,S,\"vertex\"),n=hs(a,E,\"fragment\");console.error(\"THREE.WebGLProgram: Shader Error \"+a.getError()+\" - VALIDATE_STATUS \"+a.getProgramParameter(x,35715)+\"\\n\\nProgram Info Log: \"+t+\"\\n\"+e+\"\\n\"+n)}else\"\"!==t?console.warn(\"THREE.WebGLProgram: Program Info Log:\",t):\"\"!==e&&\"\"!==n||(r=!1);r&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:_},fragmentShader:{log:n,prefix:M}})}let A,L;return a.deleteShader(S),a.deleteShader(E),this.getUniforms=function(){return void 0===A&&(A=new as(a,x)),A},this.getAttributes=function(){return void 0===L&&(L=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r),s=i.name;let a=1;35674===i.type&&(a=2),35675===i.type&&(a=3),35676===i.type&&(a=4),n[s]={type:i.type,location:t.getAttribLocation(e,s),locationSize:a}}return n}(a,x)),L},this.destroy=function(){i.releaseStatesOfProgram(this),a.deleteProgram(x),this.program=void 0},this.name=n.shaderName,this.id=ls++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=S,this.fragmentShader=E,this}function As(t,e,n,i,r,s,a){const o=[],h=r.isWebGL2,u=r.logarithmicDepthBuffer,d=r.floatVertexTextures,p=r.maxVertexUniforms,m=r.vertexTextures;let f=r.precision;const g={MeshDepthMaterial:\"depth\",MeshDistanceMaterial:\"distanceRGBA\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",MeshToonMaterial:\"toon\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",MeshMatcapMaterial:\"matcap\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\",ShadowMaterial:\"shadow\",SpriteMaterial:\"sprite\"},v=[\"precision\",\"isWebGL2\",\"supportsVertexTextures\",\"outputEncoding\",\"instancing\",\"instancingColor\",\"map\",\"mapEncoding\",\"matcap\",\"matcapEncoding\",\"envMap\",\"envMapMode\",\"envMapEncoding\",\"envMapCubeUV\",\"lightMap\",\"lightMapEncoding\",\"aoMap\",\"emissiveMap\",\"emissiveMapEncoding\",\"bumpMap\",\"normalMap\",\"objectSpaceNormalMap\",\"tangentSpaceNormalMap\",\"clearcoat\",\"clearcoatMap\",\"clearcoatRoughnessMap\",\"clearcoatNormalMap\",\"displacementMap\",\"specularMap\",,\"roughnessMap\",\"metalnessMap\",\"gradientMap\",\"alphaMap\",\"alphaTest\",\"combine\",\"vertexColors\",\"vertexAlphas\",\"vertexTangents\",\"vertexUvs\",\"uvsVertexOnly\",\"fog\",\"useFog\",\"fogExp2\",\"flatShading\",\"sizeAttenuation\",\"logarithmicDepthBuffer\",\"skinning\",\"maxBones\",\"useVertexTexture\",\"morphTargets\",\"morphNormals\",\"morphTargetsCount\",\"premultipliedAlpha\",\"numDirLights\",\"numPointLights\",\"numSpotLights\",\"numHemiLights\",\"numRectAreaLights\",\"numDirLightShadows\",\"numPointLightShadows\",\"numSpotLightShadows\",\"shadowMapEnabled\",\"shadowMapType\",\"toneMapping\",\"physicallyCorrectLights\",\"doubleSided\",\"flipSided\",\"numClippingPlanes\",\"numClipIntersection\",\"depthPacking\",\"dithering\",\"format\",\"specularIntensityMap\",\"specularColorMap\",\"specularColorMapEncoding\",\"transmission\",\"transmissionMap\",\"thicknessMap\",\"sheen\",\"sheenColorMap\",\"sheenColorMapEncoding\",\"sheenRoughnessMap\"];function y(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),e=t.texture.encoding):e=X,h&&t&&t.isTexture&&t.format===E&&t.type===x&&t.encoding===Y&&(e=X),e}return{getParameters:function(s,o,v,x,_){const M=x.fog,b=s.isMeshStandardMaterial?x.environment:null,w=(s.isMeshStandardMaterial?n:e).get(s.envMap||b),S=g[s.type],T=_.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(d)return 1024;{const t=p,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn(\"THREE.WebGLRenderer: Skeleton has \"+e.length+\" bones. This GPU supports \"+i+\".\"),0):i}}(_):0;let E,A;if(null!==s.precision&&(f=r.getMaxPrecision(s.precision),f!==s.precision&&console.warn(\"THREE.WebGLProgram.getParameters:\",s.precision,\"not supported, using\",f,\"instead.\")),S){const t=fi[S];E=t.vertexShader,A=t.fragmentShader}else E=s.vertexShader,A=s.fragmentShader;const L=t.getRenderTarget(),R=s.alphaTest>0,C=s.clearcoat>0;return{isWebGL2:h,shaderID:S,shaderName:s.type,vertexShader:E,fragmentShader:A,defines:s.defines,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:f,instancing:!0===_.isInstancedMesh,instancingColor:!0===_.isInstancedMesh&&null!==_.instanceColor,supportsVertexTextures:m,outputEncoding:null!==L?y(L.texture):t.outputEncoding,map:!!s.map,mapEncoding:y(s.map),matcap:!!s.matcap,matcapEncoding:y(s.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:y(w),envMapCubeUV:!!w&&(w.mapping===l||w.mapping===c),lightMap:!!s.lightMap,lightMapEncoding:y(s.lightMap),aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,emissiveMapEncoding:y(s.emissiveMap),bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:1===s.normalMapType,tangentSpaceNormalMap:0===s.normalMapType,clearcoat:C,clearcoatMap:C&&!!s.clearcoatMap,clearcoatRoughnessMap:C&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:C&&!!s.clearcoatNormalMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,specularColorMapEncoding:y(s.specularColorMap),alphaMap:!!s.alphaMap,alphaTest:R,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenColorMapEncoding:y(s.sheenColorMap),sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!_.geometry&&!!_.geometry.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!_.geometry&&!!_.geometry.attributes.color&&4===_.geometry.attributes.color.itemSize,vertexUvs:!!s.map||!!s.bumpMap||!!s.normalMap||!!s.specularMap||!!s.alphaMap||!!s.emissiveMap||!!s.roughnessMap||!!s.metalnessMap||!!s.clearcoatMap||!!s.clearcoatRoughnessMap||!!s.clearcoatNormalMap||!!s.displacementMap||!!s.transmissionMap||!!s.thicknessMap||!!s.specularIntensityMap||!!s.specularColorMap||!!s.sheenColorMap||s.sheenRoughnessMap,uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||!!s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!M,useFog:s.fog,fogExp2:M&&M.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===_.isSkinnedMesh&&T>0,maxBones:T,useVertexTexture:d,morphTargets:!!_.geometry&&!!_.geometry.morphAttributes.position,morphNormals:!!_.geometry&&!!_.geometry.morphAttributes.normal,morphTargetsCount:_.geometry&&_.geometry.morphAttributes.position?_.geometry.morphAttributes.position.length:0,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,format:s.format,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&v.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,depthPacking:void 0!==s.depthPacking&&s.depthPacking,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||i.has(\"EXT_frag_depth\"),rendererExtensionDrawBuffers:h||i.has(\"WEBGL_draw_buffers\"),rendererExtensionShaderTextureLod:h||i.has(\"EXT_shader_texture_lod\"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(St(e.fragmentShader)),n.push(St(e.vertexShader))),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<v.length;t++)n.push(e[v[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=g[t.type];let n;if(e){const t=fi[e];n=Jn.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=o.length;t<e;t++){const e=o[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Es(t,n,e,s),o.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=o.indexOf(t);o[e]=o[o.length-1],o.pop(),t.destroy()}},programs:o}}function Ls(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Rs(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Cs(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ps(t){const e=[];let n=0;const i=[],r=[],s=[],a={id:-1};function o(i,r,s,o,l,c){let h=e[n];const u=t.get(s);return void 0===h?(h={id:i.id,object:i,geometry:r,material:s,program:u.program||a,groupOrder:o,renderOrder:i.renderOrder,z:l,group:c},e[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=s,h.program=u.program||a,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=l,h.group=c),n++,h}return{opaque:i,transmissive:r,transparent:s,init:function(){n=0,i.length=0,r.length=0,s.length=0},push:function(t,e,n,a,l,c){const h=o(t,e,n,a,l,c);n.transmission>0?r.push(h):!0===n.transparent?s.push(h):i.push(h)},unshift:function(t,e,n,a,l,c){const h=o(t,e,n,a,l,c);n.transmission>0?r.unshift(h):!0===n.transparent?s.unshift(h):i.unshift(h)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||Rs),r.length>1&&r.sort(e||Cs),s.length>1&&s.sort(e||Cs)}}}function Is(t){let e=new WeakMap;return{get:function(n,i){let r;return!1===e.has(n)?(r=new Ps(t),e.set(n,[r])):i>=e.get(n).length?(r=new Ps(t),e.get(n).push(r)):r=e.get(n)[i],r},dispose:function(){e=new WeakMap}}}function Ds(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case\"DirectionalLight\":n={direction:new zt,color:new rn};break;case\"SpotLight\":n={position:new zt,direction:new zt,color:new rn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case\"PointLight\":n={position:new zt,color:new rn,distance:0,decay:0};break;case\"HemisphereLight\":n={direction:new zt,skyColor:new rn,groundColor:new rn};break;case\"RectAreaLight\":n={color:new rn,position:new zt,halfWidth:new zt,halfHeight:new zt}}return t[e.id]=n,n}}}let Ns=0;function zs(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Bs(t,e){const n=new Ds,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case\"DirectionalLight\":case\"SpotLight\":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new yt};break;case\"PointLight\":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new yt,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new zt);const s=new zt,a=new de,o=new de;return{setup:function(s,a){let o=0,l=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let h=0,u=0,d=0,p=0,m=0,f=0,g=0,v=0;s.sort(zs);const y=!0!==a?Math.PI:1;for(let t=0,e=s.length;t<e;t++){const e=s[t],a=e.color,x=e.intensity,_=e.distance,M=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=a.r*x*y,l+=a.g*x*y,c+=a.b*x*y;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],x);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[h]=n,r.directionalShadowMap[h]=M,r.directionalShadowMatrix[h]=e.shadow.matrix,f++}r.directional[h]=t,h++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(a).multiplyScalar(x*y),t.distance=_,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.spotShadow[d]=n,r.spotShadowMap[d]=M,r.spotShadowMatrix[d]=e.shadow.matrix,v++}r.spot[d]=t,d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(a).multiplyScalar(x),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[u]=n,r.pointShadowMap[u]=M,r.pointShadowMatrix[u]=e.shadow.matrix,g++}r.point[u]=t,u++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(x*y),t.groundColor.copy(e.groundColor).multiplyScalar(x*y),r.hemi[m]=t,m++}}p>0&&(e.isWebGL2||!0===t.has(\"OES_texture_float_linear\")?(r.rectAreaLTC1=mi.LTC_FLOAT_1,r.rectAreaLTC2=mi.LTC_FLOAT_2):!0===t.has(\"OES_texture_half_float_linear\")?(r.rectAreaLTC1=mi.LTC_HALF_1,r.rectAreaLTC2=mi.LTC_HALF_2):console.error(\"THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.\")),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=c;const x=r.hash;x.directionalLength===h&&x.pointLength===u&&x.spotLength===d&&x.rectAreaLength===p&&x.hemiLength===m&&x.numDirectionalShadows===f&&x.numPointShadows===g&&x.numSpotShadows===v||(r.directional.length=h,r.spot.length=d,r.rectArea.length=p,r.point.length=u,r.hemi.length=m,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=v,r.spotShadowMap.length=v,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=g,r.spotShadowMatrix.length=v,x.directionalLength=h,x.pointLength=u,x.spotLength=d,x.rectAreaLength=p,x.hemiLength=m,x.numDirectionalShadows=f,x.numPointShadows=g,x.numSpotShadows=v,r.version=Ns++)},setupView:function(t,e){let n=0,i=0,l=0,c=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const t=r.rectArea[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o.identity(),a.copy(d.matrixWorld),a.premultiply(u),o.extractRotation(a),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),c++}else if(d.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:r}}function Fs(t,e){const n=new Bs(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(t){n.setup(i,t)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function Os(t,e){let n=new WeakMap;return{get:function(i,r=0){let s;return!1===n.has(i)?(s=new Fs(t,e),n.set(i,[s])):r>=n.get(i).length?(s=new Fs(t,e),n.get(i).push(s)):s=n.get(i)[r],s},dispose:function(){n=new WeakMap}}}class Us extends Ze{constructor(t){super(),this.type=\"MeshDepthMaterial\",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Us.prototype.isMeshDepthMaterial=!0;class Hs extends Ze{constructor(t){super(),this.type=\"MeshDistanceMaterial\",this.referencePosition=new zt,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}Hs.prototype.isMeshDistanceMaterial=!0;function Gs(t,e,n){let i=new ci;const r=new yt,s=new yt,a=new Ct,o=new Us({depthPacking:3201}),l=new Hs,c={},h=n.maxTextureSize,u={0:1,1:0,2:2},d=new Zn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new yt},radius:{value:4}},vertexShader:\"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\"}),m=d.clone();m.defines.HORIZONTAL_PASS=1;const f=new En;f.setAttribute(\"position\",new ln(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new Wn(f,d),y=this;function x(n,i){const r=e.update(v);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,m.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,d,v,null),m.uniforms.shadow_pass.value=n.mapPass.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,m,v,null)}function _(e,n,i,r,s,a,h){let d=null;const p=!0===r.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(d=void 0!==p?p:!0===r.isPointLight?l:o,t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){const t=d.uuid,e=i.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let r=n[e];void 0===r&&(r=d.clone(),n[e]=r),d=r}return d.visible=i.visible,d.wireframe=i.wireframe,d.side=3===h?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:u[i.side],d.alphaMap=i.alphaMap,d.alphaTest=i.alphaTest,d.clipShadows=i.clipShadows,d.clippingPlanes=i.clippingPlanes,d.clipIntersection=i.clipIntersection,d.displacementMap=i.displacementMap,d.displacementScale=i.displacementScale,d.displacementBias=i.displacementBias,d.wireframeLinewidth=i.wireframeLinewidth,d.linewidth=i.linewidth,!0===r.isPointLight&&!0===d.isMeshDistanceMaterial&&(d.referencePosition.setFromMatrixPosition(r.matrixWorld),d.nearDistance=s,d.farDistance=a),d}function M(n,r,s,a,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=r[c.materialIndex];if(h&&h.visible){const e=_(n,0,h,a,s.near,s.far,o);t.renderBufferDirect(s,null,i,e,n,c)}}}else if(r.visible){const e=_(n,0,r,a,s.near,s.far,o);t.renderBufferDirect(s,null,i,e,n,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)M(l[t],r,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,n,o){if(!1===y.enabled)return;if(!1===y.autoUpdate&&!1===y.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,c=e.length;l<c;l++){const c=e[l],u=c.shadow;if(void 0===u){console.warn(\"THREE.WebGLShadowMap:\",c,\"has no shadow.\");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const m=u.getFrameExtents();if(r.multiply(m),s.copy(u.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/m.x),r.x=s.x*m.x,u.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/m.y),r.y=s.y*m.y,u.mapSize.y=s.y)),null===u.map&&!u.isPointLightShadow&&3===this.type){const t={minFilter:g,magFilter:g,format:E};u.map=new Pt(r.x,r.y,t),u.map.texture.name=c.name+\".shadowMap\",u.mapPass=new Pt(r.x,r.y,t),u.camera.updateProjectionMatrix()}if(null===u.map){const t={minFilter:p,magFilter:p,format:E};u.map=new Pt(r.x,r.y,t),u.map.texture.name=c.name+\".shadowMap\",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const f=u.getViewportCount();for(let t=0;t<f;t++){const e=u.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(a),u.updateMatrices(c,t),i=u.getFrustum(),M(n,o,u.camera,c,this.type)}u.isPointLightShadow||3!==this.type||x(u,o),u.needsUpdate=!1}y.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function ks(t,e,i){const r=i.isWebGL2;const s=new function(){let e=!1;const n=new Ct;let i=null;const r=new Ct(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,s,a,o){!0===o&&(e*=a,i*=a,s*=a),n.set(e,i,s,a),!1===r.equals(n)&&(t.clearColor(e,i,s,a),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(t){t?O(2929):U(2929)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;default:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517)}else t.depthFunc(515);i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},o=new function(){let e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null;return{setTest:function(t){e||(t?O(2960):U(2960))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,a){i===e&&r===n&&s===a||(t.stencilFunc(e,n,a),i=e,r=n,s=a)},setOp:function(e,n,i){a===e&&o===n&&l===i||(t.stencilOp(e,n,i),a=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null}}};let l={},c=null,h={},u=null,d=!1,p=null,m=null,f=null,g=null,v=null,y=null,x=null,_=!1,M=null,b=null,w=null,S=null,T=null;const E=t.getParameter(35661);let A=!1,L=0;const R=t.getParameter(7938);-1!==R.indexOf(\"WebGL\")?(L=parseFloat(/^WebGL (\\d)/.exec(R)[1]),A=L>=1):-1!==R.indexOf(\"OpenGL ES\")&&(L=parseFloat(/^OpenGL ES (\\d)/.exec(R)[1]),A=L>=2);let C=null,P={};const I=t.getParameter(3088),D=t.getParameter(2978),N=(new Ct).fromArray(I),z=(new Ct).fromArray(D);function B(e,n,i){const r=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<i;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,r);return s}const F={};function O(e){!0!==l[e]&&(t.enable(e),l[e]=!0)}function U(e){!1!==l[e]&&(t.disable(e),l[e]=!1)}F[3553]=B(3553,3553,1),F[34067]=B(34067,34069,6),s.setClear(0,0,0,1),a.setClear(1),o.setClear(0),O(2929),a.setFunc(3),V(!1),W(1),O(2884),k(0);const H={[n]:32774,101:32778,102:32779};if(r)H[103]=32775,H[104]=32776;else{const t=e.get(\"EXT_blend_minmax\");null!==t&&(H[103]=t.MIN_EXT,H[104]=t.MAX_EXT)}const G={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function k(e,i,r,s,a,o,l,c){if(0!==e){if(!1===d&&(O(3042),d=!0),5===e)a=a||i,o=o||r,l=l||s,i===m&&a===v||(t.blendEquationSeparate(H[i],H[a]),m=i,v=a),r===f&&s===g&&o===y&&l===x||(t.blendFuncSeparate(G[r],G[s],G[o],G[l]),f=r,g=s,y=o,x=l),p=e,_=null;else if(e!==p||c!==_){if(m===n&&v===n||(t.blendEquation(32774),m=n,v=n),c)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,0,769,771);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error(\"THREE.WebGLState: Invalid blending: \",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFunc(0,769);break;case 4:t.blendFunc(0,768);break;default:console.error(\"THREE.WebGLState: Invalid blending: \",e)}f=null,g=null,y=null,x=null,p=e,_=c}}else!0===d&&(U(3042),d=!1)}function V(e){M!==e&&(e?t.frontFace(2304):t.frontFace(2305),M=e)}function W(e){0!==e?(O(2884),e!==b&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):U(2884),b=e}function j(e,n,i){e?(O(32823),S===n&&T===i||(t.polygonOffset(n,i),S=n,T=i)):U(32823)}function q(e){void 0===e&&(e=33984+E-1),C!==e&&(t.activeTexture(e),C=e)}return{buffers:{color:s,depth:a,stencil:o},enable:O,disable:U,bindFramebuffer:function(e,n){return null===n&&null!==c&&(n=c),h[e]!==n&&(t.bindFramebuffer(e,n),h[e]=n,r&&(36009===e&&(h[36160]=n),36160===e&&(h[36009]=n)),!0)},bindXRFramebuffer:function(e){e!==c&&(t.bindFramebuffer(36160,e),c=e)},useProgram:function(e){return u!==e&&(t.useProgram(e),u=e,!0)},setBlending:k,setMaterial:function(t,e){2===t.side?U(2884):O(2884);let n=1===t.side;e&&(n=!n),V(n),1===t.blending&&!1===t.transparent?k(0):k(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),s.setMask(t.colorWrite);const i=t.stencilWrite;o.setTest(i),i&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),j(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?O(32926):U(32926)},setFlipSided:V,setCullFace:W,setLineWidth:function(e){e!==w&&(A&&t.lineWidth(e),w=e)},setPolygonOffset:j,setScissorTest:function(t){t?O(3089):U(3089)},activeTexture:q,bindTexture:function(e,n){null===C&&q();let i=P[C];void 0===i&&(i={type:void 0,texture:void 0},P[C]=i),i.type===e&&i.texture===n||(t.bindTexture(e,n||F[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=P[C];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error(\"THREE.WebGLState:\",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error(\"THREE.WebGLState:\",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error(\"THREE.WebGLState:\",t)}},scissor:function(e){!1===N.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),N.copy(e))},viewport:function(e){!1===z.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),z.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),l={},C=null,P={},c=null,h={},u=null,d=!1,p=null,m=null,f=null,g=null,v=null,y=null,x=null,_=!1,M=null,b=null,w=null,S=null,T=null,N.set(0,0,t.canvas.width,t.canvas.height),z.set(0,0,t.canvas.width,t.canvas.height),s.reset(),a.reset(),o.reset()}}}function Vs(t,e,n,i,r,s,a){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,x=r.maxTextureSize,R=r.maxSamples,C=new WeakMap;let P,I=!1;try{I=\"undefined\"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext(\"2d\")}catch(t){}function D(t,e){return I?new OffscreenCanvas(t,e):wt(\"canvas\")}function N(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if(\"undefined\"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||\"undefined\"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||\"undefined\"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?gt:Math.floor,s=i(r*t.width),a=i(r*t.height);void 0===P&&(P=D(s,a));const o=n?D(s,a):P;o.width=s,o.height=a;return o.getContext(\"2d\").drawImage(t,0,0,s,a),console.warn(\"THREE.WebGLRenderer: Texture has been resized from (\"+t.width+\"x\"+t.height+\") to (\"+s+\"x\"+a+\").\"),o}return\"data\"in t&&console.warn(\"THREE.WebGLRenderer: Image in DataTexture is too big (\"+t.width+\"x\"+t.height+\").\"),t}return t}function z(t){return mt(t.width)&&mt(t.height)}function B(t,e){return t.generateMipmaps&&e&&t.minFilter!==p&&t.minFilter!==g}function F(e,n,r,s,a=1){t.generateMipmap(e);i.get(n).__maxMipLevel=Math.log2(Math.max(r,s,a))}function O(n,i,r,s){if(!1===o)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn(\"THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '\"+n+\"'\")}let a=i;return 6403===i&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),6407===i&&(5126===r&&(a=34837),5131===r&&(a=34843),5121===r&&(a=32849)),6408===i&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=s===Y?35907:32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||e.get(\"EXT_color_buffer_float\"),a}function U(t){return t===p||t===m||t===f?9728:9729}function H(e){const n=e.target;n.removeEventListener(\"dispose\",H),function(e){const n=i.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),i.remove(e)}(n),n.isVideoTexture&&C.delete(n),a.memory.textures--}function G(e){const n=e.target;n.removeEventListener(\"dispose\",G),function(e){const n=e.texture,r=i.get(e),s=i.get(n);if(!e)return;void 0!==s.__webglTexture&&(t.deleteTexture(s.__webglTexture),a.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(r.__webglFramebuffer[e]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[e]);else t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&t.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,r=n.length;e<r;e++){const r=i.get(n[e]);r.__webglTexture&&(t.deleteTexture(r.__webglTexture),a.memory.textures--),i.remove(n[e])}i.remove(n),i.remove(e)}(n)}let k=0;function V(t,e){const r=i.get(t);if(t.isVideoTexture&&function(t){const e=a.render.frame;C.get(t)!==e&&(C.set(t,e),t.update())}(t),t.version>0&&r.__version!==t.version){const n=t.image;if(void 0===n)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\");else{if(!1!==n.complete)return void Z(r,t,e);console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\")}}n.activeTexture(33984+e),n.bindTexture(3553,r.__webglTexture)}function W(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?function(e,i,r){if(6!==i.image.length)return;J(e,i),n.activeTexture(33984+r),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment),t.pixelStorei(37443,0);const a=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),l=i.image[0]&&i.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=a||l?l?i.image[t].image:i.image[t]:N(i.image[t],!1,!0,c);const u=h[0],d=z(u)||o,p=s.convert(i.format),m=s.convert(i.type),f=O(i.internalFormat,p,m,i.encoding);let g;if(X(34067,i,d),a){for(let t=0;t<6;t++){g=h[t].mipmaps;for(let e=0;e<g.length;e++){const r=g[e];i.format!==E&&i.format!==T?null!==p?n.compressedTexImage2D(34069+t,e,f,r.width,r.height,0,r.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"):n.texImage2D(34069+t,e,f,r.width,r.height,0,p,m,r.data)}}e.__maxMipLevel=g.length-1}else{g=i.mipmaps;for(let t=0;t<6;t++)if(l){n.texImage2D(34069+t,0,f,h[t].width,h[t].height,0,p,m,h[t].data);for(let e=0;e<g.length;e++){const i=g[e].image[t].image;n.texImage2D(34069+t,e+1,f,i.width,i.height,0,p,m,i.data)}}else{n.texImage2D(34069+t,0,f,p,m,h[t]);for(let e=0;e<g.length;e++){const i=g[e];n.texImage2D(34069+t,e+1,f,p,m,i.image[t])}}e.__maxMipLevel=g.length}B(i,d)&&F(34067,i,u.width,u.height);e.__version=i.version,i.onUpdate&&i.onUpdate(i)}(a,e,r):(n.activeTexture(33984+r),n.bindTexture(34067,a.__webglTexture))}const j={[h]:10497,[u]:33071,[d]:33648},q={[p]:9728,[m]:9984,[f]:9986,[g]:9729,[v]:9985,[y]:9987};function X(n,s,a){if(a?(t.texParameteri(n,10242,j[s.wrapS]),t.texParameteri(n,10243,j[s.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,j[s.wrapR]),t.texParameteri(n,10240,q[s.magFilter]),t.texParameteri(n,10241,q[s.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),s.wrapS===u&&s.wrapT===u||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\"),t.texParameteri(n,10240,U(s.magFilter)),t.texParameteri(n,10241,U(s.minFilter)),s.minFilter!==p&&s.minFilter!==g&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\")),!0===e.has(\"EXT_texture_filter_anisotropic\")){const a=e.get(\"EXT_texture_filter_anisotropic\");if(s.type===b&&!1===e.has(\"OES_texture_float_linear\"))return;if(!1===o&&s.type===w&&!1===e.has(\"OES_texture_half_float_linear\"))return;(s.anisotropy>1||i.get(s).__currentAnisotropy)&&(t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),i.get(s).__currentAnisotropy=s.anisotropy)}}function J(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener(\"dispose\",H),e.__webglTexture=t.createTexture(),a.memory.textures++)}function Z(e,i,r){let a=3553;i.isDataTexture2DArray&&(a=35866),i.isDataTexture3D&&(a=32879),J(e,i),n.activeTexture(33984+r),n.bindTexture(a,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment),t.pixelStorei(37443,0);const l=function(t){return!o&&(t.wrapS!==u||t.wrapT!==u||t.minFilter!==p&&t.minFilter!==g)}(i)&&!1===z(i.image),c=N(i.image,l,!1,x),h=z(c)||o,d=s.convert(i.format);let m,f=s.convert(i.type),v=O(i.internalFormat,d,f,i.encoding);X(a,i,h);const y=i.mipmaps;if(i.isDepthTexture)v=6402,o?v=i.type===b?36012:i.type===M?33190:i.type===S?35056:33189:i.type===b&&console.error(\"WebGLRenderer: Floating point depth texture requires WebGL2.\"),i.format===A&&6402===v&&i.type!==_&&i.type!==M&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.\"),i.type=_,f=s.convert(i.type)),i.format===L&&6402===v&&(v=34041,i.type!==S&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.\"),i.type=S,f=s.convert(i.type))),n.texImage2D(3553,0,v,c.width,c.height,0,d,f,null);else if(i.isDataTexture)if(y.length>0&&h){for(let t=0,e=y.length;t<e;t++)m=y[t],n.texImage2D(3553,t,v,m.width,m.height,0,d,f,m.data);i.generateMipmaps=!1,e.__maxMipLevel=y.length-1}else n.texImage2D(3553,0,v,c.width,c.height,0,d,f,c.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(let t=0,e=y.length;t<e;t++)m=y[t],i.format!==E&&i.format!==T?null!==d?n.compressedTexImage2D(3553,t,v,m.width,m.height,0,m.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):n.texImage2D(3553,t,v,m.width,m.height,0,d,f,m.data);e.__maxMipLevel=y.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,v,c.width,c.height,c.depth,0,d,f,c.data),e.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,v,c.width,c.height,c.depth,0,d,f,c.data),e.__maxMipLevel=0;else if(y.length>0&&h){for(let t=0,e=y.length;t<e;t++)m=y[t],n.texImage2D(3553,t,v,d,f,m);i.generateMipmaps=!1,e.__maxMipLevel=y.length-1}else n.texImage2D(3553,0,v,d,f,c),e.__maxMipLevel=0;B(i,h)&&F(a,i,c.width,c.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function Q(e,r,a,o,l){const c=s.convert(a.format),h=s.convert(a.type),u=O(a.internalFormat,c,h,a.encoding);32879===l||35866===l?n.texImage3D(l,0,u,r.width,r.height,r.depth,0,c,h,null):n.texImage2D(l,0,u,r.width,r.height,0,c,h,null),n.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,l,i.get(a).__webglTexture,0),n.bindFramebuffer(36160,null)}function K(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===b?r=36012:e.type===M&&(r=33190));const i=tt(n);t.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=tt(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,r=s.convert(e.format),a=s.convert(e.type),o=O(e.internalFormat,r,a,e.encoding);if(i){const e=tt(n);t.renderbufferStorageMultisample(36161,e,o,n.width,n.height)}else t.renderbufferStorage(36161,o,n.width,n.height)}t.bindRenderbuffer(36161,null)}function $(e){const r=i.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(s)throw new Error(\"target.depthTexture not supported in Cube render targets\");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error(\"Depth Texture with cube render targets is not supported\");if(n.bindFramebuffer(36160,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),V(r.depthTexture,0);const s=i.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===A)t.framebufferTexture2D(36160,36096,3553,s,0);else{if(r.depthTexture.format!==L)throw new Error(\"Unknown depthTexture format\");t.framebufferTexture2D(36160,33306,3553,s,0)}}(r.__webglFramebuffer,e)}else if(s){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=t.createRenderbuffer(),K(r.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),K(r.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function tt(t){return o&&t.isWebGLMultisampleRenderTarget?Math.min(R,t.samples):0}let et=!1,nt=!1;this.allocateTextureUnit=function(){const t=k;return t>=l&&console.warn(\"THREE.WebGLTextures: Trying to use \"+t+\" texture units while this GPU supports only \"+l),k+=1,t},this.resetTextureUnits=function(){k=0},this.setTexture2D=V,this.setTexture2DArray=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?Z(r,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?Z(r,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,r.__webglTexture))},this.setTextureCube=W,this.setupRenderTarget=function(e){const l=e.texture,c=i.get(e),h=i.get(l);e.addEventListener(\"dispose\",G),!0!==e.isWebGLMultipleRenderTargets&&(h.__webglTexture=t.createTexture(),h.__version=l.version,a.memory.textures++);const u=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=!0===e.isWebGLMultisampleRenderTarget,m=l.isDataTexture3D||l.isDataTexture2DArray,f=z(e)||o;if(!o||l.format!==T||l.type!==b&&l.type!==w||(l.format=E,console.warn(\"THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.\")),u){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else if(c.__webglFramebuffer=t.createFramebuffer(),d)if(r.drawBuffers){const n=e.texture;for(let e=0,r=n.length;e<r;e++){const r=i.get(n[e]);void 0===r.__webglTexture&&(r.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn(\"THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.\");else if(p)if(o){c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,c.__webglColorRenderbuffer);const i=s.convert(l.format),r=s.convert(l.type),a=O(l.internalFormat,i,r,l.encoding),o=tt(e);t.renderbufferStorageMultisample(36161,o,a,e.width,e.height),n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,c.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),K(c.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn(\"THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.\");if(u){n.bindTexture(34067,h.__webglTexture),X(34067,l,f);for(let t=0;t<6;t++)Q(c.__webglFramebuffer[t],e,l,36064,34069+t);B(l,f)&&F(34067,l,e.width,e.height),n.unbindTexture()}else if(d){const t=e.texture;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=i.get(s);n.bindTexture(3553,a.__webglTexture),X(3553,s,f),Q(c.__webglFramebuffer,e,s,36064+r,3553),B(s,f)&&F(3553,s,e.width,e.height)}n.unbindTexture()}else{let t=3553;if(m)if(o){t=l.isDataTexture3D?32879:35866}else console.warn(\"THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.\");n.bindTexture(t,h.__webglTexture),X(t,l,f),Q(c.__webglFramebuffer,e,l,36064,t),B(l,f)&&F(t,l,e.width,e.height,e.depth),n.unbindTexture()}e.depthBuffer&&$(e)},this.updateRenderTargetMipmap=function(t){const e=z(t)||o,r=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let s=0,a=r.length;s<a;s++){const a=r[s];if(B(a,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,r=i.get(a).__webglTexture;n.bindTexture(e,r),F(e,a,t.width,t.height),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(o){const r=e.width,s=e.height;let a=16384;e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024);const o=i.get(e);n.bindFramebuffer(36008,o.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,o.__webglFramebuffer),t.blitFramebuffer(0,0,r,s,0,0,r,s,a,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,o.__webglMultisampledFramebuffer)}else console.warn(\"THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.\")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===et&&(console.warn(\"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\"),et=!0),t=t.texture),V(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===nt&&(console.warn(\"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"),nt=!0),t=t.texture),W(t,e)}}function Ws(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(t===x)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===_)return 5123;if(1013===t)return 5124;if(t===M)return 5125;if(t===b)return 5126;if(t===w)return i?5131:(n=e.get(\"OES_texture_half_float\"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===T)return 6407;if(t===E)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===A)return 6402;if(t===L)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(t===R||t===C||t===P||t===I){if(n=e.get(\"WEBGL_compressed_texture_s3tc\"),null===n)return null;if(t===R)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===C)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===P)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===I)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===D||t===N||t===z||t===B){if(n=e.get(\"WEBGL_compressed_texture_pvrtc\"),null===n)return null;if(t===D)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===N)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===z)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===B)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get(\"WEBGL_compressed_texture_etc1\"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===F||t===O)&&(n=e.get(\"WEBGL_compressed_texture_etc\"),null!==n)){if(t===F)return n.COMPRESSED_RGB8_ETC2;if(t===O)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get(\"WEBGL_compressed_texture_astc\"),null!==n?t:null):36492===t?(n=e.get(\"EXT_texture_compression_bptc\"),null!==n?t:null):t===S?i?34042:(n=e.get(\"WEBGL_depth_texture\"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class js extends Kn{constructor(t=[]){super(),this.cameras=t}}js.prototype.isArrayCamera=!0;class qs extends Fe{constructor(){super(),this.type=\"Group\"}}qs.prototype.isGroup=!0;const Xs={type:\"move\"};class Ys{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new qs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new qs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new zt,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new zt),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new qs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new zt,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new zt),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:\"disconnected\",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&\"visible-blurred\"!==e.session.visibilityState)if(null!==a&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Xs))),l&&t.hand){s=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===l.joints[i.jointName]){const t=new qs;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[i.jointName]=t,l.add(t)}const r=l.joints[i.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const i=l.joints[\"index-finger-tip\"],r=l.joints[\"thumb-tip\"],a=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:\"pinchend\",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:\"pinchstart\",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));return null!==a&&(a.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}}class Js extends rt{constructor(t,e){super();const n=this,i=t.state;let r=null,s=1,a=null,o=\"local-floor\",l=null,c=null,h=null,u=null,d=null,p=!1,m=null,f=null,g=null,v=null,y=null,x=null;const _=[],M=new Map,b=new Kn;b.layers.enable(1),b.viewport=new Ct;const w=new Kn;w.layers.enable(2),w.viewport=new Ct;const S=[b,w],T=new js;T.layers.enable(1),T.layers.enable(2);let E=null,A=null;function L(t){const e=M.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function R(){M.forEach((function(t,e){t.disconnect(e)})),M.clear(),E=null,A=null,i.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),h&&e.deleteFramebuffer(h),m&&e.deleteFramebuffer(m),f&&e.deleteRenderbuffer(f),g&&e.deleteRenderbuffer(g),h=null,m=null,f=null,g=null,d=null,u=null,c=null,r=null,z.stop(),n.isPresenting=!1,n.dispatchEvent({type:\"sessionend\"})}function C(t){const e=r.inputSources;for(let t=0;t<_.length;t++)M.set(e[t],_[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=M.get(n);i&&(i.dispatchEvent({type:\"disconnected\",data:n}),M.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=M.get(n);i&&i.dispatchEvent({type:\"connected\",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=_[t];return void 0===e&&(e=new Ys,_[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=_[t];return void 0===e&&(e=new Ys,_[t]=e),e.getGripSpace()},this.getHand=function(t){let e=_[t];return void 0===e&&(e=new Ys,_[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){s=t,!0===n.isPresenting&&console.warn(\"THREE.WebXRManager: Cannot change framebuffer scale while presenting.\")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn(\"THREE.WebXRManager: Cannot change reference space type while presenting.\")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return c},this.getFrame=function(){return v},this.getSession=function(){return r},this.setSession=async function(t){if(r=t,null!==r){r.addEventListener(\"select\",L),r.addEventListener(\"selectstart\",L),r.addEventListener(\"selectend\",L),r.addEventListener(\"squeeze\",L),r.addEventListener(\"squeezestart\",L),r.addEventListener(\"squeezeend\",L),r.addEventListener(\"end\",R),r.addEventListener(\"inputsourceschange\",C);const t=e.getContextAttributes();if(!0!==t.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers){const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:d})}else if(e instanceof WebGLRenderingContext){const n={antialias:!0,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,e,n),r.updateRenderState({layers:[d]})}else{p=t.antialias;let n=null;t.depth&&(x=256,t.stencil&&(x|=1024),y=t.stencil?33306:36096,n=t.stencil?35056:33190);const a={colorFormat:t.alpha?32856:32849,depthFormat:n,scaleFactor:s};c=new XRWebGLBinding(r,e),u=c.createProjectionLayer(a),h=e.createFramebuffer(),r.updateRenderState({layers:[u]}),p&&(m=e.createFramebuffer(),f=e.createRenderbuffer(),e.bindRenderbuffer(36161,f),e.renderbufferStorageMultisample(36161,4,32856,u.textureWidth,u.textureHeight),i.bindFramebuffer(36160,m),e.framebufferRenderbuffer(36160,36064,36161,f),e.bindRenderbuffer(36161,null),null!==n&&(g=e.createRenderbuffer(),e.bindRenderbuffer(36161,g),e.renderbufferStorageMultisample(36161,4,n,u.textureWidth,u.textureHeight),e.framebufferRenderbuffer(36160,y,36161,g),e.bindRenderbuffer(36161,null)),i.bindFramebuffer(36160,null))}a=await r.requestReferenceSpace(o),z.setContext(r),z.start(),n.isPresenting=!0,n.dispatchEvent({type:\"sessionstart\"})}};const P=new zt,I=new zt;function D(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;T.near=w.near=b.near=t.near,T.far=w.far=b.far=t.far,E===T.near&&A===T.far||(r.updateRenderState({depthNear:T.near,depthFar:T.far}),E=T.near,A=T.far);const e=t.parent,n=T.cameras;D(T,e);for(let t=0;t<n.length;t++)D(n[t],e);T.matrixWorld.decompose(T.position,T.quaternion,T.scale),t.position.copy(T.position),t.quaternion.copy(T.quaternion),t.scale.copy(T.scale),t.matrix.copy(T.matrix),t.matrixWorld.copy(T.matrixWorld);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);2===n.length?function(t,e,n){P.setFromMatrixPosition(e.matrixWorld),I.setFromMatrixPosition(n.matrixWorld);const i=P.distanceTo(I),r=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=a*h,p=a*u,m=i/(-h+u),f=m*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=a+m,v=o+m,y=d-f,x=p+(i-f),_=l*o/v*g,M=c*o/v*g;t.projectionMatrix.makePerspective(y,x,_,M,g,v)}(T,b,w):T.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return T},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(t){null!==u&&(u.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)};let N=null;const z=new hi;z.setAnimationLoop((function(t,n){if(l=n.getViewerPose(a),v=n,null!==l){const t=l.views;null!==d&&i.bindXRFramebuffer(d.framebuffer);let n=!1;t.length!==T.cameras.length&&(T.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const s=t[r];let a=null;if(null!==d)a=d.getViewport(s);else{const t=c.getViewSubImage(u,s);i.bindXRFramebuffer(h),void 0!==t.depthStencilTexture&&e.framebufferTexture2D(36160,y,3553,t.depthStencilTexture,0),e.framebufferTexture2D(36160,36064,3553,t.colorTexture,0),a=t.viewport}const o=S[r];o.matrix.fromArray(s.transform.matrix),o.projectionMatrix.fromArray(s.projectionMatrix),o.viewport.set(a.x,a.y,a.width,a.height),0===r&&T.matrix.copy(o.matrix),!0===n&&T.cameras.push(o)}p&&(i.bindXRFramebuffer(m),null!==x&&e.clear(x))}const s=r.inputSources;for(let t=0;t<_.length;t++){const e=_[t],i=s[t];e.update(i,n,a)}if(N&&N(t,n),p){const t=u.textureWidth,n=u.textureHeight;i.bindFramebuffer(36008,m),i.bindFramebuffer(36009,h),e.invalidateFramebuffer(36008,[y]),e.invalidateFramebuffer(36009,[y]),e.blitFramebuffer(0,0,t,n,0,0,t,n,16384,9728),e.invalidateFramebuffer(36008,[36064]),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),i.bindFramebuffer(36160,m)}v=null})),this.setAnimationLoop=function(t){N=t},this.dispose=function(){}}}function Zs(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,s;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap?r=n.clearcoatRoughnessMap:n.specularIntensityMap?r=n.specularIntensityMap:n.specularColorMap?r=n.specularColorMap:n.transmissionMap?r=n.transmissionMap:n.thicknessMap?r=n.thicknessMap:n.sheenColorMap?r=n.sheenColorMap:n.sheenRoughnessMap&&(r=n.sheenRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),n.aoMap?s=n.aoMap:n.lightMap&&(s=n.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uv2Transform.value.copy(s.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,s,a){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e,i){n(t,e),t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap);e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,i,a):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,s):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Qs(t={}){const e=void 0!==t.canvas?t.canvas:function(){const t=wt(\"canvas\");return t.style.display=\"block\",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,s=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:\"default\",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let d=null,m=null;const f=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=X,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const v=this;let _=!1,M=0,S=0,T=null,A=-1,L=null;const R=new Ct,C=new Ct;let P=null,I=e.width,D=e.height,N=1,z=null,B=null;const F=new Ct(0,0,I,D),O=new Ct(0,0,I,D);let U=!1;const H=[],G=new ci;let k=!1,V=!1,W=null;const j=new de,q=new zt,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function J(){return null===T?N:1}let Z,Q,K,$,tt,et,nt,it,rt,st,at,ot,lt,ct,ht,ut,dt,pt,mt,ft,gt,vt,yt,xt=n;function _t(t,n){for(let i=0;i<t.length;i++){const r=t[i],s=e.getContext(r,n);if(null!==s)return s}return null}try{const t={alpha:i,depth:r,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(e.addEventListener(\"webglcontextlost\",St,!1),e.addEventListener(\"webglcontextrestored\",Tt,!1),null===xt){const e=[\"webgl2\",\"webgl\",\"experimental-webgl\"];if(!0===v.isWebGL1Renderer&&e.shift(),xt=_t(e,t),null===xt)throw _t(e)?new Error(\"Error creating WebGL context with your selected attributes.\"):new Error(\"Error creating WebGL context.\")}void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error(\"THREE.WebGLRenderer: \"+t.message),t}function Mt(){Z=new Yi(xt),Q=new xi(xt,Z,t),Z.init(Q),vt=new Ws(xt,Z,Q),K=new ks(xt,Z,Q),H[0]=1029,$=new Qi(xt),tt=new Ls,et=new Vs(xt,Z,K,tt,Q,vt,$),nt=new Mi(v),it=new Xi(v),rt=new ui(xt,Q),yt=new vi(xt,Z,rt,Q),st=new Ji(xt,rt,$,yt),at=new ir(xt,st,rt,$),mt=new nr(xt,Q,et),ut=new _i(tt),ot=new As(v,nt,it,Z,Q,yt,ut),lt=new Zs(tt),ct=new Is(tt),ht=new Os(Z,Q),pt=new gi(v,nt,K,at,o),dt=new Gs(v,at,Q),ft=new yi(xt,Z,$,Q),gt=new Zi(xt,Z,$,Q),$.programs=ot.programs,v.capabilities=Q,v.extensions=Z,v.properties=tt,v.renderLists=ct,v.shadowMap=dt,v.state=K,v.info=$}Mt();const bt=new Js(v,xt);function St(t){t.preventDefault(),console.log(\"THREE.WebGLRenderer: Context Lost.\"),_=!0}function Tt(){console.log(\"THREE.WebGLRenderer: Context Restored.\"),_=!1;const t=$.autoReset,e=dt.enabled,n=dt.autoUpdate,i=dt.needsUpdate,r=dt.type;Mt(),$.autoReset=t,dt.enabled=e,dt.autoUpdate=n,dt.needsUpdate=i,dt.type=r}function Et(t){const e=t.target;e.removeEventListener(\"dispose\",Et),function(t){(function(t){const e=tt.get(t).programs;void 0!==e&&e.forEach((function(t){ot.releaseProgram(t)}))})(t),tt.remove(t)}(e)}this.xr=bt,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=Z.get(\"WEBGL_lose_context\");t&&t.loseContext()},this.forceContextRestore=function(){const t=Z.get(\"WEBGL_lose_context\");t&&t.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(t){void 0!==t&&(N=t,this.setSize(I,D,!1))},this.getSize=function(t){return t.set(I,D)},this.setSize=function(t,n,i){bt.isPresenting?console.warn(\"THREE.WebGLRenderer: Can't change size while VR device is presenting.\"):(I=t,D=n,e.width=Math.floor(t*N),e.height=Math.floor(n*N),!1!==i&&(e.style.width=t+\"px\",e.style.height=n+\"px\"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(I*N,D*N).floor()},this.setDrawingBufferSize=function(t,n,i){I=t,D=n,N=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(R)},this.getViewport=function(t){return t.copy(F)},this.setViewport=function(t,e,n,i){t.isVector4?F.set(t.x,t.y,t.z,t.w):F.set(t,e,n,i),K.viewport(R.copy(F).multiplyScalar(N).floor())},this.getScissor=function(t){return t.copy(O)},this.setScissor=function(t,e,n,i){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,n,i),K.scissor(C.copy(O).multiplyScalar(N).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(t){K.setScissorTest(U=t)},this.setOpaqueSort=function(t){z=t},this.setTransparentSort=function(t){B=t},this.getClearColor=function(t){return t.copy(pt.getClearColor())},this.setClearColor=function(){pt.setClearColor.apply(pt,arguments)},this.getClearAlpha=function(){return pt.getClearAlpha()},this.setClearAlpha=function(){pt.setClearAlpha.apply(pt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),xt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener(\"webglcontextlost\",St,!1),e.removeEventListener(\"webglcontextrestored\",Tt,!1),ct.dispose(),ht.dispose(),tt.dispose(),nt.dispose(),it.dispose(),at.dispose(),yt.dispose(),bt.dispose(),bt.removeEventListener(\"sessionstart\",Lt),bt.removeEventListener(\"sessionend\",Rt),W&&(W.dispose(),W=null),It.stop()},this.renderBufferDirect=function(t,e,n,i,r,s){null===e&&(e=Y);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=function(t,e,n,i,r){!0!==e.isScene&&(e=Y);et.resetTextureUnits();const s=e.fog,a=i.isMeshStandardMaterial?e.environment:null,o=null===T?v.outputEncoding:T.texture.encoding,l=(i.isMeshStandardMaterial?it:nt).get(i.envMap||a),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!i.normalMap&&!!n.attributes.tangent,u=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=n.morphAttributes.position?n.morphAttributes.position.length:0,f=tt.get(i),g=m.state.lights;if(!0===k&&(!0===V||t!==L)){const e=t===L&&i.id===A;ut.setState(i,t,e)}let y=!1;i.version===f.__version?f.needsLights&&f.lightsStateVersion!==g.state.version||f.outputEncoding!==o||r.isInstancedMesh&&!1===f.instancing?y=!0:r.isInstancedMesh||!0!==f.instancing?r.isSkinnedMesh&&!1===f.skinning?y=!0:r.isSkinnedMesh||!0!==f.skinning?f.envMap!==l||i.fog&&f.fog!==s?y=!0:void 0===f.numClippingPlanes||f.numClippingPlanes===ut.numPlanes&&f.numIntersection===ut.numIntersection?(f.vertexAlphas!==c||f.vertexTangents!==h||f.morphTargets!==u||f.morphNormals!==d||!0===Q.isWebGL2&&f.morphTargetsCount!==p)&&(y=!0):y=!0:y=!0:y=!0:(y=!0,f.__version=i.version);let x=f.currentProgram;!0===y&&(x=Ut(i,e,r));let _=!1,M=!1,b=!1;const w=x.getUniforms(),S=f.uniforms;K.useProgram(x.program)&&(_=!0,M=!0,b=!0);i.id!==A&&(A=i.id,M=!0);if(_||L!==t){if(w.setValue(xt,\"projectionMatrix\",t.projectionMatrix),Q.logarithmicDepthBuffer&&w.setValue(xt,\"logDepthBufFC\",2/(Math.log(t.far+1)/Math.LN2)),L!==t&&(L=t,M=!0,b=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=w.map.cameraPosition;void 0!==e&&e.setValue(xt,q.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&w.setValue(xt,\"isOrthographic\",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&w.setValue(xt,\"viewMatrix\",t.matrixWorldInverse)}if(r.isSkinnedMesh){w.setOptional(xt,r,\"bindMatrix\"),w.setOptional(xt,r,\"bindMatrixInverse\");const t=r.skeleton;t&&(Q.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),w.setValue(xt,\"boneTexture\",t.boneTexture,et),w.setValue(xt,\"boneTextureSize\",t.boneTextureSize)):w.setOptional(xt,t,\"boneMatrices\"))}!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||mt.update(r,n,i,x);(M||f.receiveShadow!==r.receiveShadow)&&(f.receiveShadow=r.receiveShadow,w.setValue(xt,\"receiveShadow\",r.receiveShadow));M&&(w.setValue(xt,\"toneMappingExposure\",v.toneMappingExposure),f.needsLights&&(R=b,(E=S).ambientLightColor.needsUpdate=R,E.lightProbe.needsUpdate=R,E.directionalLights.needsUpdate=R,E.directionalLightShadows.needsUpdate=R,E.pointLights.needsUpdate=R,E.pointLightShadows.needsUpdate=R,E.spotLights.needsUpdate=R,E.spotLightShadows.needsUpdate=R,E.rectAreaLights.needsUpdate=R,E.hemisphereLights.needsUpdate=R),s&&i.fog&&lt.refreshFogUniforms(S,s),lt.refreshMaterialUniforms(S,i,N,D,W),as.upload(xt,f.uniformsList,S,et));var E,R;i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(as.upload(xt,f.uniformsList,S,et),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&w.setValue(xt,\"center\",r.center);return w.setValue(xt,\"modelViewMatrix\",r.modelViewMatrix),w.setValue(xt,\"normalMatrix\",r.normalMatrix),w.setValue(xt,\"modelMatrix\",r.matrixWorld),x}(t,e,n,i,r);K.setMaterial(i,a);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===i.wireframe&&(l=st.getWireframeAttribute(n),u=2),yt.setup(r,i,o,n,l);let d=ft;null!==l&&(h=rt.get(l),d=gt,d.setIndex(h));const p=null!==l?l.count:c.count,f=n.drawRange.start*u,g=n.drawRange.count*u,y=null!==s?s.start*u:0,x=null!==s?s.count*u:1/0,_=Math.max(f,y),M=Math.min(p,f+g,y+x)-1,b=Math.max(0,M-_+1);if(0!==b){if(r.isMesh)!0===i.wireframe?(K.setLineWidth(i.wireframeLinewidth*J()),d.setMode(1)):d.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),K.setLineWidth(t*J()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(_,b,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(_,b,t)}else d.render(_,b)}},this.compile=function(t,e){m=ht.get(t),m.init(),g.push(m),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(v.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++){Ut(n[i],t,e)}else Ut(n,t,e)})),g.pop(),m=null};let At=null;function Lt(){It.stop()}function Rt(){It.start()}const It=new hi;function Nt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||G.intersectsSprite(t)){i&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);const e=at.update(t),r=t.material;r.visible&&d.push(t,e,r,n,q.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==$.render.frame&&(t.skeleton.update(),t.skeleton.frame=$.render.frame),!t.frustumCulled||G.intersectsObject(t))){i&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);const e=at.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let s=0,a=i.length;s<a;s++){const a=i[s],o=r[a.materialIndex];o&&o.visible&&d.push(t,e,o,n,q.z,a)}}else r.visible&&d.push(t,e,r,n,q.z,null)}const r=t.children;for(let t=0,s=r.length;t<s;t++)Nt(r[t],e,n,i)}function Bt(t,e,n,i){const r=t.opaque,s=t.transmissive,o=t.transparent;m.setupLightsView(n),s.length>0&&function(t,e,n){if(null===W){const t=!0===a&&!0===Q.isWebGL2;W=new(t?Dt:Pt)(1024,1024,{generateMipmaps:!0,type:null!==vt.convert(w)?w:x,minFilter:y,magFilter:p,wrapS:u,wrapT:u})}const i=v.getRenderTarget();v.setRenderTarget(W),v.clear();const r=v.toneMapping;v.toneMapping=0,Ft(t,e,n),v.toneMapping=r,et.updateMultisampleRenderTarget(W),et.updateRenderTargetMipmap(W),v.setRenderTarget(i)}(r,e,n),i&&K.viewport(R.copy(i)),r.length>0&&Ft(r,e,n),s.length>0&&Ft(s,e,n),o.length>0&&Ft(o,e,n)}function Ft(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=s.object,o=s.geometry,l=null===i?s.material:i,c=s.group;a.layers.test(n.layers)&&Ot(a,e,n,o,l,c)}}function Ot(t,e,n,i,r,s){t.onBeforeRender(v,e,n,i,r,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(v,e,n,i,t,s),!0===r.transparent&&2===r.side?(r.side=1,r.needsUpdate=!0,v.renderBufferDirect(n,e,i,r,t,s),r.side=0,r.needsUpdate=!0,v.renderBufferDirect(n,e,i,r,t,s),r.side=2):v.renderBufferDirect(n,e,i,r,t,s),t.onAfterRender(v,e,n,i,r,s)}function Ut(t,e,n){!0!==e.isScene&&(e=Y);const i=tt.get(t),r=m.state.lights,s=m.state.shadowsArray,a=r.state.version,o=ot.getParameters(t,r.state,s,e,n),l=ot.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?it:nt).get(t.envMap||i.environment),void 0===c&&(t.addEventListener(\"dispose\",Et),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===a)return Ht(t,o),h}else o.uniforms=ot.getUniforms(t),t.onBuild(n,o,v),t.onBeforeCompile(o,v),h=ot.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ut.uniform),Ht(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=a,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const d=h.getUniforms(),p=as.seqWithValue(d.seq,u);return i.currentProgram=h,i.uniformsList=p,h}function Ht(t,e){const n=tt.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents}It.setAnimationLoop((function(t){At&&At(t)})),\"undefined\"!=typeof window&&It.setContext(window),this.setAnimationLoop=function(t){At=t,bt.setAnimationLoop(t),null===t?It.stop():It.start()},bt.addEventListener(\"sessionstart\",Lt),bt.addEventListener(\"sessionend\",Rt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");if(!0===_)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===bt.enabled&&!0===bt.isPresenting&&(!0===bt.cameraAutoUpdate&&bt.updateCamera(e),e=bt.getCamera()),!0===t.isScene&&t.onBeforeRender(v,t,e,T),m=ht.get(t,g.length),m.init(),g.push(m),j.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),G.setFromProjectionMatrix(j),V=this.localClippingEnabled,k=ut.init(this.clippingPlanes,V,e),d=ct.get(t,f.length),d.init(),f.push(d),Nt(t,e,0,v.sortObjects),d.finish(),!0===v.sortObjects&&d.sort(z,B),!0===k&&ut.beginShadows();const n=m.state.shadowsArray;if(dt.render(n,t,e),!0===k&&ut.endShadows(),!0===this.info.autoReset&&this.info.reset(),pt.render(d,t),m.setupLights(v.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let e=0,i=n.length;e<i;e++){const i=n[e];Bt(d,t,i,i.viewport)}}else Bt(d,t,e);null!==T&&(et.updateMultisampleRenderTarget(T),et.updateRenderTargetMipmap(T)),!0===t.isScene&&t.onAfterRender(v,t,e),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1),yt.resetDefaultState(),A=-1,L=null,g.pop(),m=g.length>0?g[g.length-1]:null,f.pop(),d=f.length>0?f[f.length-1]:null},this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return T},this.setRenderTarget=function(t,e=0,n=0){T=t,M=e,S=n,t&&void 0===tt.get(t).__webglFramebuffer&&et.setupRenderTarget(t);let i=null,r=!1,s=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(s=!0);const a=tt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=a[e],r=!0):i=t.isWebGLMultisampleRenderTarget?tt.get(t).__webglMultisampledFramebuffer:a,R.copy(t.viewport),C.copy(t.scissor),P=t.scissorTest}else R.copy(F).multiplyScalar(N).floor(),C.copy(O).multiplyScalar(N).floor(),P=U;if(K.bindFramebuffer(36160,i)&&Q.drawBuffers){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const n=t.texture;if(H.length!==n.length||36064!==H[0]){for(let t=0,e=n.length;t<e;t++)H[t]=36064+t;H.length=n.length,e=!0}}else 1===H.length&&36064===H[0]||(H[0]=36064,H.length=1,e=!0);else 1===H.length&&1029===H[0]||(H[0]=1029,H.length=1,e=!0);e&&(Q.isWebGL2?xt.drawBuffers(H):Z.get(\"WEBGL_draw_buffers\").drawBuffersWEBGL(H))}if(K.viewport(R),K.scissor(C),K.setScissorTest(P),r){const i=tt.get(t.texture);xt.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}else if(s){const i=tt.get(t.texture),r=e||0;xt.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}A=-1},this.readRenderTargetPixels=function(t,e,n,i,r,s,a){if(!t||!t.isWebGLRenderTarget)return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");let o=tt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){K.bindFramebuffer(36160,o);try{const a=t.texture,o=a.format,l=a.type;if(o!==E&&vt.convert(o)!==xt.getParameter(35739))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\");const c=l===w&&(Z.has(\"EXT_color_buffer_half_float\")||Q.isWebGL2&&Z.has(\"EXT_color_buffer_float\"));if(!(l===x||vt.convert(l)===xt.getParameter(35738)||l===b&&(Q.isWebGL2||Z.has(\"OES_texture_float\")||Z.has(\"WEBGL_color_buffer_float\"))||c))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\");36053===xt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&xt.readPixels(e,n,i,r,vt.convert(o),vt.convert(l),s):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\")}finally{const t=null!==T?tt.get(T).__webglFramebuffer:null;K.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),s=Math.floor(e.image.height*i);let a=vt.convert(e.format);Q.isWebGL2&&(6407===a&&(a=32849),6408===a&&(a=32856)),et.setTexture2D(e,0),xt.copyTexImage2D(3553,n,a,t.x,t.y,r,s,0),K.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,s=e.image.height,a=vt.convert(n.format),o=vt.convert(n.type);et.setTexture2D(n,0),xt.pixelStorei(37440,n.flipY),xt.pixelStorei(37441,n.premultiplyAlpha),xt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?xt.texSubImage2D(3553,i,t.x,t.y,r,s,a,o,e.image.data):e.isCompressedTexture?xt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):xt.texSubImage2D(3553,i,t.x,t.y,a,o,e.image),0===i&&n.generateMipmaps&&xt.generateMipmap(3553),K.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(v.isWebGL1Renderer)return void console.warn(\"THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.\");const s=t.max.x-t.min.x+1,a=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=vt.convert(i.format),c=vt.convert(i.type);let h;if(i.isDataTexture3D)et.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn(\"THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.\");et.setTexture2DArray(i,0),h=35866}xt.pixelStorei(37440,i.flipY),xt.pixelStorei(37441,i.premultiplyAlpha),xt.pixelStorei(3317,i.unpackAlignment);const u=xt.getParameter(3314),d=xt.getParameter(32878),p=xt.getParameter(3316),m=xt.getParameter(3315),f=xt.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;xt.pixelStorei(3314,g.width),xt.pixelStorei(32878,g.height),xt.pixelStorei(3316,t.min.x),xt.pixelStorei(3315,t.min.y),xt.pixelStorei(32877,t.min.z),n.isDataTexture||n.isDataTexture3D?xt.texSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,c,g.data):n.isCompressedTexture?(console.warn(\"THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.\"),xt.compressedTexSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,g.data)):xt.texSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,c,g),xt.pixelStorei(3314,u),xt.pixelStorei(32878,d),xt.pixelStorei(3316,p),xt.pixelStorei(3315,m),xt.pixelStorei(32877,f),0===r&&i.generateMipmaps&&xt.generateMipmap(h),K.unbindTexture()},this.initTexture=function(t){et.setTexture2D(t,0),K.unbindTexture()},this.resetState=function(){M=0,S=0,T=null,K.reset(),yt.reset()},\"undefined\"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent(\"observe\",{detail:this}))}Qs.prototype.isWebGLRenderer=!0;class Ks extends Qs{}Ks.prototype.isWebGL1Renderer=!0;class $s{constructor(t,e=25e-5){this.name=\"\",this.color=new rn(t),this.density=e}clone(){return new $s(this.color,this.density)}toJSON(){return{type:\"FogExp2\",color:this.color.getHex(),density:this.density}}}$s.prototype.isFogExp2=!0;class ta{constructor(t,e=1,n=1e3){this.name=\"\",this.color=new rn(t),this.near=e,this.far=n}clone(){return new ta(this.color,this.near,this.far)}toJSON(){return{type:\"Fog\",color:this.color.getHex(),near:this.near,far:this.far}}}ta.prototype.isFog=!0;class ea extends Fe{constructor(){super(),this.type=\"Scene\",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,\"undefined\"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent(\"observe\",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}ea.prototype.isScene=!0;class na{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=et,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ht()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ht()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ht()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}na.prototype.isInterleavedBuffer=!0;const ia=new zt;class ra{constructor(t,e,n,i=!1){this.name=\"\",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)ia.x=this.getX(e),ia.y=this.getY(e),ia.z=this.getZ(e),ia.applyMatrix4(t),this.setXYZ(e,ia.x,ia.y,ia.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ia.x=this.getX(e),ia.y=this.getY(e),ia.z=this.getZ(e),ia.applyNormalMatrix(t),this.setXYZ(e,ia.x,ia.y,ia.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ia.x=this.getX(e),ia.y=this.getY(e),ia.z=this.getZ(e),ia.transformDirection(t),this.setXYZ(e,ia.x,ia.y,ia.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log(\"THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.\");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new ln(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ra(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log(\"THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.\");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}ra.prototype.isInterleavedBufferAttribute=!0;class sa extends Ze{constructor(t){super(),this.type=\"SpriteMaterial\",this.color=new rn(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let aa;sa.prototype.isSpriteMaterial=!0;const oa=new zt,la=new zt,ca=new zt,ha=new yt,ua=new yt,da=new de,pa=new zt,ma=new zt,fa=new zt,ga=new yt,va=new yt,ya=new yt;class xa extends Fe{constructor(t){if(super(),this.type=\"Sprite\",void 0===aa){aa=new En;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new na(t,5);aa.setIndex([0,1,2,0,2,3]),aa.setAttribute(\"position\",new ra(e,3,0,!1)),aa.setAttribute(\"uv\",new ra(e,2,3,!1))}this.geometry=aa,this.material=void 0!==t?t:new sa,this.center=new yt(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.'),la.setFromMatrixScale(this.matrixWorld),da.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ca.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&la.multiplyScalar(-ca.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;_a(pa.set(-.5,-.5,0),ca,s,la,i,r),_a(ma.set(.5,-.5,0),ca,s,la,i,r),_a(fa.set(.5,.5,0),ca,s,la,i,r),ga.set(0,0),va.set(1,0),ya.set(1,1);let a=t.ray.intersectTriangle(pa,ma,fa,!1,oa);if(null===a&&(_a(ma.set(-.5,.5,0),ca,s,la,i,r),va.set(0,1),a=t.ray.intersectTriangle(pa,fa,ma,!1,oa),null===a))return;const o=t.ray.origin.distanceTo(oa);o<t.near||o>t.far||e.push({distance:o,point:oa.clone(),uv:Ye.getUV(oa,pa,ma,fa,ga,va,ya,new yt),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function _a(t,e,n,i,r,s){ha.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(ua.x=s*ha.x-r*ha.y,ua.y=r*ha.x+s*ha.y):ua.copy(ha),t.copy(e),t.x+=ua.x,t.y+=ua.y,t.applyMatrix4(da)}xa.prototype.isSprite=!0;const Ma=new zt,ba=new zt;class wa extends Fe{constructor(){super(),this._currentLevel=0,this.type=\"LOD\",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Ma.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Ma);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Ma.setFromMatrixPosition(t.matrixWorld),ba.setFromMatrixPosition(this.matrixWorld);const n=Ma.distanceTo(ba)/t.zoom;let i,r;for(e[0].object.visible=!0,i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance})}return e}}const Sa=new zt,Ta=new Ct,Ea=new Ct,Aa=new zt,La=new de;class Ra extends Wn{constructor(t,e){super(t,e),this.type=\"SkinnedMesh\",this.bindMode=\"attached\",this.bindMatrix=new de,this.bindMatrixInverse=new de}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Ct,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),\"attached\"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():\"detached\"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn(\"THREE.SkinnedMesh: Unrecognized bindMode: \"+this.bindMode)}boneTransform(t,e){const n=this.skeleton,i=this.geometry;Ta.fromBufferAttribute(i.attributes.skinIndex,t),Ea.fromBufferAttribute(i.attributes.skinWeight,t),Sa.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=Ea.getComponent(t);if(0!==i){const r=Ta.getComponent(t);La.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(Aa.copy(Sa).applyMatrix4(La),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}Ra.prototype.isSkinnedMesh=!0;class Ca extends Fe{constructor(){super(),this.type=\"Bone\"}}Ca.prototype.isBone=!0;class Pa extends Lt{constructor(t=null,e=1,n=1,i,r,s,a,o,l=1003,c=1003,h,u){super(null,s,a,o,l,c,i,r,h,u),this.image={data:t,width:e,height:n},this.magFilter=l,this.minFilter=c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Pa.prototype.isDataTexture=!0;const Ia=new de,Da=new de;class Na{constructor(t=[],e=[]){this.uuid=ht(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn(\"THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.\"),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new de)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new de;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const r=t[i]?t[i].matrixWorld:Da;Ia.multiplyMatrices(r,e[i]),Ia.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new Na(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=ft(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Pa(e,t,t,E,b);return this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const i=t.bones[n];let r=e[i];void 0===r&&(console.warn(\"THREE.Skeleton: No bone found with UUID:\",i),r=new Ca),this.bones.push(r),this.boneInverses.push((new de).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:\"Skeleton\",generator:\"Skeleton.toJSON\"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const r=e[i];t.bones.push(r.uuid);const s=n[i];t.boneInverses.push(s.toArray())}return t}}class za extends ln{constructor(t,e,n,i=1){\"number\"==typeof n&&(i=n,n=!1,console.error(\"THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.\")),super(t,e,n),this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}za.prototype.isInstancedBufferAttribute=!0;const Ba=new de,Fa=new de,Oa=[],Ua=new Wn;class Ha extends Wn{constructor(t,e,n){super(t,e),this.instanceMatrix=new za(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,i=this.count;if(Ua.geometry=this.geometry,Ua.material=this.material,void 0!==Ua.material)for(let r=0;r<i;r++){this.getMatrixAt(r,Ba),Fa.multiplyMatrices(n,Ba),Ua.matrixWorld=Fa,Ua.raycast(t,Oa);for(let t=0,n=Oa.length;t<n;t++){const n=Oa[t];n.instanceId=r,n.object=this,e.push(n)}Oa.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new za(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:\"dispose\"})}}Ha.prototype.isInstancedMesh=!0;class Ga extends Ze{constructor(t){super(),this.type=\"LineBasicMaterial\",this.color=new rn(16777215),this.linewidth=1,this.linecap=\"round\",this.linejoin=\"round\",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}}Ga.prototype.isLineBasicMaterial=!0;const ka=new zt,Va=new zt,Wa=new de,ja=new ue,qa=new ie;class Xa extends Fe{constructor(t=new En,e=new Ga){super(),this.type=\"Line\",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)ka.fromBufferAttribute(e,t-1),Va.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=ka.distanceTo(Va);t.setAttribute(\"lineDistance\",new vn(n,1))}else console.warn(\"THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");else t.isGeometry&&console.error(\"THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),qa.copy(n.boundingSphere),qa.applyMatrix4(i),qa.radius+=r,!1===t.ray.intersectsSphere(qa))return;Wa.copy(i).invert(),ja.copy(t.ray).applyMatrix4(Wa);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new zt,c=new zt,h=new zt,u=new zt,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i){for(let n=Math.max(0,s.start),a=Math.min(i.count,s.start+s.count)-1;n<a;n+=d){const s=i.getX(n),a=i.getX(n+1);l.fromBufferAttribute(r,s),c.fromBufferAttribute(r,a);if(ja.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(u);d<t.near||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{for(let n=Math.max(0,s.start),i=Math.min(r.count,s.start+s.count)-1;n<i;n+=d){l.fromBufferAttribute(r,n),c.fromBufferAttribute(r,n+1);if(ja.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error(\"THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error(\"THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.\")}}}Xa.prototype.isLine=!0;const Ya=new zt,Ja=new zt;class Za extends Xa{constructor(t,e){super(t,e),this.type=\"LineSegments\"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)Ya.fromBufferAttribute(e,t),Ja.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Ya.distanceTo(Ja);t.setAttribute(\"lineDistance\",new vn(n,1))}else console.warn(\"THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");else t.isGeometry&&console.error(\"THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\");return this}}Za.prototype.isLineSegments=!0;class Qa extends Xa{constructor(t,e){super(t,e),this.type=\"LineLoop\"}}Qa.prototype.isLineLoop=!0;class Ka extends Ze{constructor(t){super(),this.type=\"PointsMaterial\",this.color=new rn(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}Ka.prototype.isPointsMaterial=!0;const $a=new de,to=new ue,eo=new ie,no=new zt;class io extends Fe{constructor(t=new En,e=new Ka){super(),this.type=\"Points\",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),eo.copy(n.boundingSphere),eo.applyMatrix4(i),eo.radius+=r,!1===t.ray.intersectsSphere(eo))return;$a.copy(i).invert(),to.copy(t.ray).applyMatrix4($a);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(n.isBufferGeometry){const r=n.index,a=n.attributes.position;if(null!==r){for(let n=Math.max(0,s.start),l=Math.min(r.count,s.start+s.count);n<l;n++){const s=r.getX(n);no.fromBufferAttribute(a,s),ro(no,s,o,i,t,e,this)}}else{for(let n=Math.max(0,s.start),r=Math.min(a.count,s.start+s.count);n<r;n++)no.fromBufferAttribute(a,n),ro(no,n,o,i,t,e,this)}}else console.error(\"THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error(\"THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.\")}}}function ro(t,e,n,i,r,s,a){const o=to.distanceSqToPoint(t);if(o<n){const n=new zt;to.closestPointToPoint(t,n),n.applyMatrix4(i);const l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:a})}}io.prototype.isPoints=!0;class so extends Lt{constructor(t,e,n,i,r,s,a,o,l){super(t,e,n,i,r,s,a,o,l),this.format=void 0!==a?a:T,this.minFilter=void 0!==s?s:g,this.magFilter=void 0!==r?r:g,this.generateMipmaps=!1;const c=this;\"requestVideoFrameCallback\"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1===\"requestVideoFrameCallback\"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}so.prototype.isVideoTexture=!0;class ao extends Lt{constructor(t,e,n,i,r,s,a,o,l,c,h,u){super(null,s,a,o,l,c,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}ao.prototype.isCompressedTexture=!0;class oo extends Lt{constructor(t,e,n,i,r,s,a,o,l){super(t,e,n,i,r,s,a,o,l),this.needsUpdate=!0}}oo.prototype.isCanvasTexture=!0;class lo extends Lt{constructor(t,e,n,i,r,s,a,o,l,c){if((c=void 0!==c?c:A)!==A&&c!==L)throw new Error(\"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\");void 0===n&&c===A&&(n=_),void 0===n&&c===L&&(n=S),super(null,i,r,s,a,o,c,n,l),this.image={width:t,height:e},this.magFilter=void 0!==a?a:p,this.minFilter=void 0!==o?o:p,this.flipY=!1,this.generateMipmaps=!1}}lo.prototype.isDepthTexture=!0;class co extends En{constructor(t=1,e=8,n=0,i=2*Math.PI){super(),this.type=\"CircleGeometry\",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],s=[],a=[],o=[],l=new zt,c=new yt;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let r=0,h=3;r<=e;r++,h+=3){const u=n+r/e*i;l.x=t*Math.cos(u),l.y=t*Math.sin(u),s.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(s[h]/t+1)/2,c.y=(s[h+1]/t+1)/2,o.push(c.x,c.y)}for(let t=1;t<=e;t++)r.push(t,t+1,0);this.setIndex(r),this.setAttribute(\"position\",new vn(s,3)),this.setAttribute(\"normal\",new vn(a,3)),this.setAttribute(\"uv\",new vn(o,2))}static fromJSON(t){return new co(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class ho extends En{constructor(t=1,e=1,n=1,i=8,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type=\"CylinderGeometry\",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i),r=Math.floor(r);const c=[],h=[],u=[],d=[];let p=0;const m=[],f=n/2;let g=0;function v(n){const r=p,s=new yt,m=new zt;let v=0;const y=!0===n?t:e,x=!0===n?1:-1;for(let t=1;t<=i;t++)h.push(0,f*x,0),u.push(0,x,0),d.push(.5,.5),p++;const _=p;for(let t=0;t<=i;t++){const e=t/i*o+a,n=Math.cos(e),r=Math.sin(e);m.x=y*r,m.y=f*x,m.z=y*n,h.push(m.x,m.y,m.z),u.push(0,x,0),s.x=.5*n+.5,s.y=.5*r*x+.5,d.push(s.x,s.y),p++}for(let t=0;t<i;t++){const e=r+t,i=_+t;!0===n?c.push(i,i+1,e):c.push(i+1,i,e),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}!function(){const s=new zt,v=new zt;let y=0;const x=(e-t)/n;for(let l=0;l<=r;l++){const c=[],g=l/r,y=g*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,r=e*o+a,l=Math.sin(r),m=Math.cos(r);v.x=y*l,v.y=-g*n+f,v.z=y*m,h.push(v.x,v.y,v.z),s.set(l,x,m).normalize(),u.push(s.x,s.y,s.z),d.push(e,1-g),c.push(p++)}m.push(c)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){const n=m[e][t],i=m[e+1][t],r=m[e+1][t+1],s=m[e][t+1];c.push(n,i,s),c.push(i,r,s),y+=6}l.addGroup(g,y,0),g+=y}(),!1===s&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(c),this.setAttribute(\"position\",new vn(h,3)),this.setAttribute(\"normal\",new vn(u,3)),this.setAttribute(\"uv\",new vn(d,2))}static fromJSON(t){return new ho(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class uo extends ho{constructor(t=1,e=1,n=8,i=1,r=!1,s=0,a=2*Math.PI){super(0,t,e,n,i,r,s,a),this.type=\"ConeGeometry\",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(t){return new uo(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class po extends En{constructor(t=[],e=[],n=1,i=0){super(),this.type=\"PolyhedronGeometry\",this.parameters={vertices:t,indices:e,radius:n,detail:i};const r=[],s=[];function a(t,e,n,i){const r=i+1,s=[];for(let i=0;i<=r;i++){s[i]=[];const a=t.clone().lerp(n,i/r),o=e.clone().lerp(n,i/r),l=r-i;for(let t=0;t<=l;t++)s[i][t]=0===t&&i===r?a:a.clone().lerp(o,t/l)}for(let t=0;t<r;t++)for(let e=0;e<2*(r-t)-1;e++){const n=Math.floor(e/2);e%2==0?(o(s[t][n+1]),o(s[t+1][n]),o(s[t][n])):(o(s[t][n+1]),o(s[t+1][n+1]),o(s[t+1][n]))}}function o(t){r.push(t.x,t.y,t.z)}function l(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function c(t,e,n,i){i<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=i/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new zt,i=new zt,r=new zt;for(let s=0;s<e.length;s+=3)l(e[s+0],n),l(e[s+1],i),l(e[s+2],r),a(n,i,r,t)}(i),function(t){const e=new zt;for(let n=0;n<r.length;n+=3)e.x=r[n+0],e.y=r[n+1],e.z=r[n+2],e.normalize().multiplyScalar(t),r[n+0]=e.x,r[n+1]=e.y,r[n+2]=e.z}(n),function(){const t=new zt;for(let n=0;n<r.length;n+=3){t.x=r[n+0],t.y=r[n+1],t.z=r[n+2];const i=h(t)/2/Math.PI+.5,a=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);s.push(i,1-a)}var e;(function(){const t=new zt,e=new zt,n=new zt,i=new zt,a=new yt,o=new yt,l=new yt;for(let u=0,d=0;u<r.length;u+=9,d+=6){t.set(r[u+0],r[u+1],r[u+2]),e.set(r[u+3],r[u+4],r[u+5]),n.set(r[u+6],r[u+7],r[u+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),i.copy(t).add(e).add(n).divideScalar(3);const p=h(i);c(a,d+0,t,p),c(o,d+2,e,p),c(l,d+4,n,p)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],i=s[t+4],r=Math.max(e,n,i),a=Math.min(e,n,i);r>.9&&a<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),i<.2&&(s[t+4]+=1))}}()}(),this.setAttribute(\"position\",new vn(r,3)),this.setAttribute(\"normal\",new vn(r.slice(),3)),this.setAttribute(\"uv\",new vn(s,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(t){return new po(t.vertices,t.indices,t.radius,t.details)}}class mo extends po{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type=\"DodecahedronGeometry\",this.parameters={radius:t,detail:e}}static fromJSON(t){return new mo(t.radius,t.detail)}}const fo=new zt,go=new zt,vo=new zt,yo=new Ye;class xo extends En{constructor(t=null,e=1){if(super(),this.type=\"EdgesGeometry\",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,i=Math.pow(10,n),r=Math.cos(at*e),s=t.getIndex(),a=t.getAttribute(\"position\"),o=s?s.count:a.count,l=[0,0,0],c=[\"a\",\"b\",\"c\"],h=new Array(3),u={},d=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=yo;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),yo.getNormal(vo),h[0]=`${Math.round(e.x*i)},${Math.round(e.y*i)},${Math.round(e.z*i)}`,h[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,h[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=h[t],i=h[e],s=yo[c[t]],a=yo[c[e]],o=`${n}_${i}`,p=`${i}_${n}`;p in u&&u[p]?(vo.dot(u[p].normal)<=r&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),u[p]=null):o in u||(u[o]={index0:l[t],index1:l[e],normal:vo.clone()})}}for(const t in u)if(u[t]){const{index0:e,index1:n}=u[t];fo.fromBufferAttribute(a,e),go.fromBufferAttribute(a,n),d.push(fo.x,fo.y,fo.z),d.push(go.x,go.y,go.z)}this.setAttribute(\"position\",new vn(d,3))}}}class _o{constructor(){this.type=\"Curve\",this.arcLengthDivisions=200}getPoint(){return console.warn(\"THREE.Curve: .getPoint() not implemented.\"),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let s;s=e||t*n[r-1];let a,o=0,l=r-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-s,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===s)return i/(r-1);const c=n[i];return(i+(s-c)/(n[i+1]-c))/(r-1)}getTangent(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),a=this.getPoint(r),o=e||(s.isVector2?new yt:new zt);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new zt,i=[],r=[],s=[],a=new zt,o=new de;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new zt)}r[0]=new zt,s[0]=new zt;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),u<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),s[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),s[e]=s[e-1].clone(),a.crossVectors(i[e-1],i[e]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(ut(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(o.makeRotationAxis(a,t))}s[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(ut(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),s[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:\"Curve\",generator:\"Curve.toJSON\"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Mo extends _o{constructor(t=0,e=0,n=1,i=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.type=\"EllipseCurve\",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e){const n=e||new yt,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=s?0:i),!0!==this.aClockwise||s||(r===i?r=-i:r-=i);const a=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Mo.prototype.isEllipseCurve=!0;class bo extends Mo{constructor(t,e,n,i,r,s){super(t,e,n,n,i,r,s),this.type=\"ArcCurve\"}}function wo(){let t=0,e=0,n=0,i=0;function r(r,s,a,o){t=r,e=a,n=-3*r+3*s-2*a-o,i=2*r-2*s+a+o}return{initCatmullRom:function(t,e,n,i,s){r(e,n,s*(n-t),s*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,s,a,o){let l=(e-t)/s-(n-t)/(s+a)+(n-e)/a,c=(n-e)/a-(i-e)/(a+o)+(i-n)/o;l*=a,c*=a,r(e,n,l,c)},calc:function(r){const s=r*r;return t+e*r+n*s+i*(s*r)}}}bo.prototype.isArcCurve=!0;const So=new zt,To=new wo,Eo=new wo,Ao=new wo;class Lo extends _o{constructor(t=[],e=!1,n=\"centripetal\",i=.5){super(),this.type=\"CatmullRomCurve3\",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new zt){const n=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t;let a,o,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?a=i[(l-1)%r]:(So.subVectors(i[0],i[1]).add(i[0]),a=So);const h=i[l%r],u=i[(l+1)%r];if(this.closed||l+2<r?o=i[(l+2)%r]:(So.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=So),\"centripetal\"===this.curveType||\"chordal\"===this.curveType){const t=\"chordal\"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),To.initNonuniformCatmullRom(a.x,h.x,u.x,o.x,e,n,i),Eo.initNonuniformCatmullRom(a.y,h.y,u.y,o.y,e,n,i),Ao.initNonuniformCatmullRom(a.z,h.z,u.z,o.z,e,n,i)}else\"catmullrom\"===this.curveType&&(To.initCatmullRom(a.x,h.x,u.x,o.x,this.tension),Eo.initCatmullRom(a.y,h.y,u.y,o.y,this.tension),Ao.initCatmullRom(a.z,h.z,u.z,o.z,this.tension));return n.set(To.calc(c),Eo.calc(c),Ao.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new zt).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ro(t,e,n,i,r){const s=.5*(i-e),a=.5*(r-n),o=t*t;return(2*n-2*i+s+a)*(t*o)+(-3*n+3*i-2*s-a)*o+s*t+n}function Co(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Po(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}Lo.prototype.isCatmullRomCurve3=!0;class Io extends _o{constructor(t=new yt,e=new yt,n=new yt,i=new yt){super(),this.type=\"CubicBezierCurve\",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new yt){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Po(t,i.x,r.x,s.x,a.x),Po(t,i.y,r.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Io.prototype.isCubicBezierCurve=!0;class Do extends _o{constructor(t=new zt,e=new zt,n=new zt,i=new zt){super(),this.type=\"CubicBezierCurve3\",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new zt){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Po(t,i.x,r.x,s.x,a.x),Po(t,i.y,r.y,s.y,a.y),Po(t,i.z,r.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Do.prototype.isCubicBezierCurve3=!0;class No extends _o{constructor(t=new yt,e=new yt){super(),this.type=\"LineCurve\",this.v1=t,this.v2=e}getPoint(t,e=new yt){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new yt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}No.prototype.isLineCurve=!0;class zo extends _o{constructor(t=new zt,e=new zt){super(),this.type=\"LineCurve3\",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new zt){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Bo extends _o{constructor(t=new yt,e=new yt,n=new yt){super(),this.type=\"QuadraticBezierCurve\",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new yt){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Co(t,i.x,r.x,s.x),Co(t,i.y,r.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Bo.prototype.isQuadraticBezierCurve=!0;class Fo extends _o{constructor(t=new zt,e=new zt,n=new zt){super(),this.type=\"QuadraticBezierCurve3\",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new zt){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Co(t,i.x,r.x,s.x),Co(t,i.y,r.y,s.y),Co(t,i.z,r.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Fo.prototype.isQuadraticBezierCurve3=!0;class Oo extends _o{constructor(t=[]){super(),this.type=\"SplineCurve\",this.points=t}getPoint(t,e=new yt){const n=e,i=this.points,r=(i.length-1)*t,s=Math.floor(r),a=r-s,o=i[0===s?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Ro(a,o.x,l.x,c.x,h.x),Ro(a,o.y,l.y,c.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new yt).fromArray(n))}return this}}Oo.prototype.isSplineCurve=!0;var Uo=Object.freeze({__proto__:null,ArcCurve:bo,CatmullRomCurve3:Lo,CubicBezierCurve:Io,CubicBezierCurve3:Do,EllipseCurve:Mo,LineCurve:No,LineCurve3:zo,QuadraticBezierCurve:Bo,QuadraticBezierCurve3:Fo,SplineCurve:Oo});class Ho extends _o{constructor(){super(),this.type=\"CurvePath\",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new No(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const t=i[r]-n,s=this.curves[r],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],a=s&&s.isEllipseCurve?2*t:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Uo[n.type]).fromJSON(n))}return this}}class Go extends Ho{constructor(t){super(),this.type=\"Path\",this.currentPoint=new yt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new No(this.currentPoint.clone(),new yt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Bo(this.currentPoint.clone(),new yt(t,e),new yt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,s){const a=new Io(this.currentPoint.clone(),new yt(t,e),new yt(n,i),new yt(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Oo(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,i,r,s),this}absarc(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this}ellipse(t,e,n,i,r,s,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,s,a,o),this}absellipse(t,e,n,i,r,s,a,o){const l=new Mo(t,e,n,i,r,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ko extends Go{constructor(t){super(t),this.uuid=ht(),this.type=\"Shape\",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Go).fromJSON(n))}return this}}const Vo=function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let s=Wo(t,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,u,d,p;if(i&&(s=function(t,e,n,i){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:t.length,c=Wo(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(el(c));for(r.sort(Qo),s=0;s<r.length;s++)Ko(r[s],n),n=jo(n,n.next);return n}(t,e,s,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?1/p:0}return qo(s,a,n,o,l,p),a};function Wo(t,e,n,i,r){let s,a;if(r===function(t,e,n,i){let r=0;for(let s=e,a=n-i;s<n;s+=i)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}(t,e,n,i)>0)for(s=e;s<n;s+=i)a=ul(s,t[s],t[s+1],a);else for(s=n-i;s>=e;s-=i)a=ul(s,t[s],t[s+1],a);return a&&sl(a,a.next)&&(dl(a),a=a.next),a}function jo(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!sl(i,i.next)&&0!==rl(i.prev,i,i.next))i=i.next;else{if(dl(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function qo(t,e,n,i,r,s,a){if(!t)return;!a&&s&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=tl(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,s,a,o,l,c=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,i);e++);for(l=c;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(a>1)}(r)}(t,i,r,s);let o,l,c=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,s?Yo(t,i,r,s):Xo(t))e.push(o.i/n),e.push(t.i/n),e.push(l.i/n),dl(t),t=l.next,c=l.next;else if((t=l)===c){a?1===a?qo(t=Jo(jo(t),e,n),e,n,i,r,s,2):2===a&&Zo(t,e,n,i,r,s):qo(jo(t),e,n,i,r,s,1);break}}function Xo(t){const e=t.prev,n=t,i=t.next;if(rl(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(nl(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&rl(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Yo(t,e,n,i){const r=t.prev,s=t,a=t.next;if(rl(r,s,a)>=0)return!1;const o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,c=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,h=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,u=tl(o,l,e,n,i),d=tl(c,h,e,n,i);let p=t.prevZ,m=t.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==t.prev&&p!==t.next&&nl(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&rl(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==t.prev&&m!==t.next&&nl(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&rl(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&nl(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&rl(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==t.prev&&m!==t.next&&nl(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&rl(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Jo(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!sl(r,s)&&al(r,i,i.next,s)&&cl(r,s)&&cl(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),dl(i),dl(i.next),i=t=s),i=i.next}while(i!==t);return jo(i)}function Zo(t,e,n,i,r,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&il(a,t)){let o=hl(a,t);return a=jo(a,a.next),o=jo(o,o.next),qo(a,e,n,i,r,s),void qo(o,e,n,i,r,s)}t=t.next}a=a.next}while(a!==t)}function Qo(t,e){return t.x-e.x}function Ko(t,e){if(e=function(t,e){let n=e;const i=t.x,r=t.y;let s,a=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>a){if(a=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(i===a)return s;const o=s,l=s.x,c=s.y;let h,u=1/0;n=s;do{i>=n.x&&n.x>=l&&i!==n.x&&nl(r<c?i:a,r,l,c,r<c?a:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),cl(n,t)&&(h<u||h===u&&(n.x>s.x||n.x===s.x&&$o(s,n)))&&(s=n,u=h)),n=n.next}while(n!==o);return s}(t,e),e){const n=hl(e,t);jo(e,e.next),jo(n,n.next)}}function $o(t,e){return rl(t.prev,t,e.prev)<0&&rl(e.next,t,t.next)<0}function tl(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function el(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function nl(t,e,n,i,r,s,a,o){return(r-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(i-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(r-a)*(i-o)>=0}function il(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&al(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(cl(t,e)&&cl(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(rl(t.prev,t,e.prev)||rl(t,e.prev,e))||sl(t,e)&&rl(t.prev,t,t.next)>0&&rl(e.prev,e,e.next)>0)}function rl(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function sl(t,e){return t.x===e.x&&t.y===e.y}function al(t,e,n,i){const r=ll(rl(t,e,n)),s=ll(rl(t,e,i)),a=ll(rl(n,i,t)),o=ll(rl(n,i,e));return r!==s&&a!==o||(!(0!==r||!ol(t,n,e))||(!(0!==s||!ol(t,i,e))||(!(0!==a||!ol(n,t,i))||!(0!==o||!ol(n,e,i)))))}function ol(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function ll(t){return t>0?1:t<0?-1:0}function cl(t,e){return rl(t.prev,t,t.next)<0?rl(t,e,t.next)>=0&&rl(t,t.prev,e)>=0:rl(t,e,t.prev)<0||rl(t,t.next,e)<0}function hl(t,e){const n=new pl(t.i,t.x,t.y),i=new pl(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function ul(t,e,n,i){const r=new pl(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function dl(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function pl(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ml{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n}static isClockWise(t){return ml.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];fl(t),gl(n,t);let s=t.length;e.forEach(fl);for(let t=0;t<e.length;t++)i.push(s),s+=e[t].length,gl(n,e[t]);const a=Vo(n,i);for(let t=0;t<a.length;t+=3)r.push(a.slice(t,t+3));return r}}function fl(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function gl(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class vl extends En{constructor(t=new ko([new yt(.5,.5),new yt(-.5,.5),new yt(-.5,-.5),new yt(.5,-.5)]),e={}){super(),this.type=\"ExtrudeGeometry\",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let e=0,n=t.length;e<n;e++){s(t[e])}function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:1,c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,u=void 0!==e.bevelSize?e.bevelSize:h-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const m=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:yl;void 0!==e.amount&&(console.warn(\"THREE.ExtrudeBufferGeometry: amount has been renamed to depth.\"),l=e.amount);let g,v,y,x,_,M=!1;m&&(g=m.getSpacedPoints(o),M=!0,c=!1,v=m.computeFrenetFrames(o,!1),y=new zt,x=new zt,_=new zt),c||(p=0,h=0,u=0,d=0);const b=t.extractPoints(a);let w=b.shape;const S=b.holes;if(!ml.isClockWise(w)){w=w.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];ml.isClockWise(e)&&(S[t]=e.reverse())}}const T=ml.triangulateShape(w,S),E=w;for(let t=0,e=S.length;t<e;t++){const e=S[t];w=w.concat(e)}function A(t,e,n){return e||console.error(\"THREE.ExtrudeGeometry: vec does not exist\"),e.clone().multiplyScalar(n).add(t)}const L=w.length,R=T.length;function C(t,e,n){let i,r,s;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,h=a*a+o*o,u=a*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=e.x-o/u,m=e.y+a/u,f=((n.x-c/d-p)*c-(n.y+l/d-m)*l)/(a*c-o*l);i=p+a*f-t.x,r=m+o*f-t.y;const g=i*i+r*r;if(g<=2)return new yt(i,r);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,r=a,s=Math.sqrt(h)):(i=a,r=o,s=Math.sqrt(h/2))}return new yt(i/s,r/s)}const P=[];for(let t=0,e=E.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),P[t]=C(E[t],E[n],E[i]);const I=[];let D,N=P.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];D=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),D[t]=C(e[t],e[i],e[r]);I.push(D),N=N.concat(D)}for(let t=0;t<p;t++){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);F(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];D=I[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],D[t],i);F(r.x,r.y,-n)}}}const z=u+d;for(let t=0;t<L;t++){const e=c?A(w[t],N[t],z):w[t];M?(x.copy(v.normals[0]).multiplyScalar(e.x),y.copy(v.binormals[0]).multiplyScalar(e.y),_.copy(g[0]).add(x).add(y),F(_.x,_.y,_.z)):F(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<L;e++){const n=c?A(w[e],N[e],z):w[e];M?(x.copy(v.normals[t]).multiplyScalar(n.x),y.copy(v.binormals[t]).multiplyScalar(n.y),_.copy(g[t]).add(x).add(y),F(_.x,_.y,_.z)):F(n.x,n.y,l/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);F(e.x,e.y,l+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];D=I[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],D[t],i);M?F(r.x,r.y+g[o-1].y,g[o-1].x+n):F(r.x,r.y,l+n)}}}function B(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=L*t,s=L*(t+1);U(e+i+n,e+r+n,e+r+s,e+i+s)}}}function F(t,e,n){s.push(t),s.push(e),s.push(n)}function O(t,e,r){H(t),H(e),H(r);const s=i.length/3,a=f.generateTopUV(n,i,s-3,s-2,s-1);G(a[0]),G(a[1]),G(a[2])}function U(t,e,r,s){H(t),H(e),H(s),H(e),H(r),H(s);const a=i.length/3,o=f.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);G(o[0]),G(o[1]),G(o[3]),G(o[1]),G(o[2]),G(o[3])}function H(t){i.push(s[3*t+0]),i.push(s[3*t+1]),i.push(s[3*t+2])}function G(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(c){let t=0,e=L*t;for(let t=0;t<R;t++){const n=T[t];O(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=L*t;for(let t=0;t<R;t++){const n=T[t];O(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<R;t++){const e=T[t];O(e[2],e[1],e[0])}for(let t=0;t<R;t++){const e=T[t];O(e[0]+L*o,e[1]+L*o,e[2]+L*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;B(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];B(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute(\"position\",new vn(i,3)),this.setAttribute(\"uv\",new vn(r,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const r=e[t.shapes[i]];n.push(r)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new Uo[i.type]).fromJSON(i)),new vl(n,t.options)}}const yl={generateTopUV:function(t,e,n,i,r){const s=e[3*n],a=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*r],h=e[3*r+1];return[new yt(s,a),new yt(o,l),new yt(c,h)]},generateSideWallUV:function(t,e,n,i,r,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],m=e[3*r+2],f=e[3*s],g=e[3*s+1],v=e[3*s+2];return Math.abs(o-h)<Math.abs(a-c)?[new yt(a,1-l),new yt(c,1-u),new yt(d,1-m),new yt(f,1-v)]:[new yt(o,1-l),new yt(h,1-u),new yt(p,1-m),new yt(g,1-v)]}};class xl extends po{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type=\"IcosahedronGeometry\",this.parameters={radius:t,detail:e}}static fromJSON(t){return new xl(t.radius,t.detail)}}class _l extends En{constructor(t=[new yt(0,.5),new yt(.5,0),new yt(0,-.5)],e=12,n=0,i=2*Math.PI){super(),this.type=\"LatheGeometry\",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=ut(i,0,2*Math.PI);const r=[],s=[],a=[],o=1/e,l=new zt,c=new yt;for(let r=0;r<=e;r++){const h=n+r*o*i,u=Math.sin(h),d=Math.cos(h);for(let n=0;n<=t.length-1;n++)l.x=t[n].x*u,l.y=t[n].y,l.z=t[n].x*d,s.push(l.x,l.y,l.z),c.x=r/e,c.y=n/(t.length-1),a.push(c.x,c.y)}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const i=e+n*t.length,s=i,a=i+t.length,o=i+t.length+1,l=i+1;r.push(s,a,l),r.push(a,o,l)}if(this.setIndex(r),this.setAttribute(\"position\",new vn(s,3)),this.setAttribute(\"uv\",new vn(a,2)),this.computeVertexNormals(),i===2*Math.PI){const n=this.attributes.normal.array,i=new zt,r=new zt,s=new zt,a=e*t.length*3;for(let e=0,o=0;e<t.length;e++,o+=3)i.x=n[o+0],i.y=n[o+1],i.z=n[o+2],r.x=n[a+o+0],r.y=n[a+o+1],r.z=n[a+o+2],s.addVectors(i,r).normalize(),n[o+0]=n[a+o+0]=s.x,n[o+1]=n[a+o+1]=s.y,n[o+2]=n[a+o+2]=s.z}}static fromJSON(t){return new _l(t.points,t.segments,t.phiStart,t.phiLength)}}class Ml extends po{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type=\"OctahedronGeometry\",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Ml(t.radius,t.detail)}}class bl extends En{constructor(t=.5,e=1,n=8,i=1,r=0,s=2*Math.PI){super(),this.type=\"RingGeometry\",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let h=t;const u=(e-t)/(i=Math.max(1,i)),d=new zt,p=new yt;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=r+t/n*s;d.x=h*Math.cos(i),d.y=h*Math.sin(i),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y)}h+=u}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,r=i,s=i+n+1,o=i+n+2,l=i+1;a.push(r,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute(\"position\",new vn(o,3)),this.setAttribute(\"normal\",new vn(l,3)),this.setAttribute(\"uv\",new vn(c,2))}static fromJSON(t){return new bl(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class wl extends En{constructor(t=new ko([new yt(0,.5),new yt(-.5,-.5),new yt(.5,-.5)]),e=12){super(),this.type=\"ShapeGeometry\",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){const a=i.length/3,l=t.extractPoints(e);let c=l.shape;const h=l.holes;!1===ml.isClockWise(c)&&(c=c.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===ml.isClockWise(e)&&(h[t]=e.reverse())}const u=ml.triangulateShape(c,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];i.push(e.x,e.y,0),r.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+a,r=e[1]+a,s=e[2]+a;n.push(i,r,s),o+=3}}this.setIndex(n),this.setAttribute(\"position\",new vn(i,3)),this.setAttribute(\"normal\",new vn(r,3)),this.setAttribute(\"uv\",new vn(s,2))}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const r=e[t.shapes[i]];n.push(r)}return new wl(n,t.curveSegments)}}class Sl extends En{constructor(t=1,e=32,n=16,i=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type=\"SphereGeometry\",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const c=[],h=new zt,u=new zt,d=[],p=[],m=[],f=[];for(let d=0;d<=n;d++){const g=[],v=d/n;let y=0;0==d&&0==s?y=.5/e:d==n&&o==Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const o=n/e;h.x=-t*Math.cos(i+o*r)*Math.sin(s+v*a),h.y=t*Math.cos(s+v*a),h.z=t*Math.sin(i+o*r)*Math.sin(s+v*a),p.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),f.push(o+y,1-v),g.push(l++)}c.push(g)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=c[t][i+1],r=c[t][i],a=c[t+1][i],l=c[t+1][i+1];(0!==t||s>0)&&d.push(e,r,l),(t!==n-1||o<Math.PI)&&d.push(r,a,l)}this.setIndex(d),this.setAttribute(\"position\",new vn(p,3)),this.setAttribute(\"normal\",new vn(m,3)),this.setAttribute(\"uv\",new vn(f,2))}static fromJSON(t){return new Sl(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Tl extends po{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type=\"TetrahedronGeometry\",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Tl(t.radius,t.detail)}}class El extends En{constructor(t=1,e=.4,n=8,i=6,r=2*Math.PI){super(),this.type=\"TorusGeometry\",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const s=[],a=[],o=[],l=[],c=new zt,h=new zt,u=new zt;for(let s=0;s<=n;s++)for(let d=0;d<=i;d++){const p=d/i*r,m=s/n*Math.PI*2;h.x=(t+e*Math.cos(m))*Math.cos(p),h.y=(t+e*Math.cos(m))*Math.sin(p),h.z=e*Math.sin(m),a.push(h.x,h.y,h.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),u.subVectors(h,c).normalize(),o.push(u.x,u.y,u.z),l.push(d/i),l.push(s/n)}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*t+e-1,r=(i+1)*(t-1)+e-1,a=(i+1)*(t-1)+e,o=(i+1)*t+e;s.push(n,r,o),s.push(r,a,o)}this.setIndex(s),this.setAttribute(\"position\",new vn(a,3)),this.setAttribute(\"normal\",new vn(o,3)),this.setAttribute(\"uv\",new vn(l,2))}static fromJSON(t){return new El(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Al extends En{constructor(t=1,e=.4,n=64,i=8,r=2,s=3){super(),this.type=\"TorusKnotGeometry\",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:s},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],h=new zt,u=new zt,d=new zt,p=new zt,m=new zt,f=new zt,g=new zt;for(let a=0;a<=n;++a){const y=a/n*r*Math.PI*2;v(y,r,s,t,d),v(y+.01,r,s,t,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=i;++t){const r=t/i*Math.PI*2,s=-e*Math.cos(r),p=e*Math.sin(r);h.x=d.x+(s*g.x+p*m.x),h.y=d.y+(s*g.y+p*m.y),h.z=d.z+(s*g.z+p*m.z),o.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),l.push(u.x,u.y,u.z),c.push(a/n),c.push(t/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),s=(i+1)*t+e,o=(i+1)*(t-1)+e;a.push(n,r,o),a.push(r,s,o)}function v(t,e,n,i,r){const s=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);r.x=i*(2+l)*.5*s,r.y=i*(2+l)*a*.5,r.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute(\"position\",new vn(o,3)),this.setAttribute(\"normal\",new vn(l,3)),this.setAttribute(\"uv\",new vn(c,2))}static fromJSON(t){return new Al(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Ll extends En{constructor(t=new Fo(new zt(-1,-1,0),new zt(-1,1,0),new zt(1,1,0)),e=64,n=1,i=8,r=!1){super(),this.type=\"TubeGeometry\",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const s=t.computeFrenetFrames(e,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new zt,o=new zt,l=new yt;let c=new zt;const h=[],u=[],d=[],p=[];function m(r){c=t.getPointAt(r/e,c);const l=s.normals[r],d=s.binormals[r];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,r=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+r*d.x,o.y=s*l.y+r*d.y,o.z=s*l.z+r*d.z,o.normalize(),u.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,h.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)m(t);m(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)l.x=t/e,l.y=n/i,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),s=(i+1)*t+e,a=(i+1)*(t-1)+e;p.push(n,r,a),p.push(r,s,a)}}()}(),this.setIndex(p),this.setAttribute(\"position\",new vn(h,3)),this.setAttribute(\"normal\",new vn(u,3)),this.setAttribute(\"uv\",new vn(d,2))}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Ll((new Uo[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Rl extends En{constructor(t=null){if(super(),this.type=\"WireframeGeometry\",this.parameters={geometry:t},null!==t){const e=[],n=new Set,i=new zt,r=new zt;if(null!==t.index){const s=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],c=l.start;for(let t=c,o=c+l.count;t<o;t+=3)for(let o=0;o<3;o++){const l=a.getX(t+o),c=a.getX(t+(o+1)%3);i.fromBufferAttribute(s,l),r.fromBufferAttribute(s,c),!0===Cl(i,r,n)&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}}else{const s=t.attributes.position;for(let t=0,a=s.count/3;t<a;t++)for(let a=0;a<3;a++){const o=3*t+a,l=3*t+(a+1)%3;i.fromBufferAttribute(s,o),r.fromBufferAttribute(s,l),!0===Cl(i,r,n)&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}this.setAttribute(\"position\",new vn(e,3))}}}function Cl(t,e,n){const i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(i)&&!0!==n.has(r)&&(n.add(i,r),!0)}var Pl=Object.freeze({__proto__:null,BoxGeometry:qn,BoxBufferGeometry:qn,CircleGeometry:co,CircleBufferGeometry:co,ConeGeometry:uo,ConeBufferGeometry:uo,CylinderGeometry:ho,CylinderBufferGeometry:ho,DodecahedronGeometry:mo,DodecahedronBufferGeometry:mo,EdgesGeometry:xo,ExtrudeGeometry:vl,ExtrudeBufferGeometry:vl,IcosahedronGeometry:xl,IcosahedronBufferGeometry:xl,LatheGeometry:_l,LatheBufferGeometry:_l,OctahedronGeometry:Ml,OctahedronBufferGeometry:Ml,PlaneGeometry:di,PlaneBufferGeometry:di,PolyhedronGeometry:po,PolyhedronBufferGeometry:po,RingGeometry:bl,RingBufferGeometry:bl,ShapeGeometry:wl,ShapeBufferGeometry:wl,SphereGeometry:Sl,SphereBufferGeometry:Sl,TetrahedronGeometry:Tl,TetrahedronBufferGeometry:Tl,TorusGeometry:El,TorusBufferGeometry:El,TorusKnotGeometry:Al,TorusKnotBufferGeometry:Al,TubeGeometry:Ll,TubeBufferGeometry:Ll,WireframeGeometry:Rl});class Il extends Ze{constructor(t){super(),this.type=\"ShadowMaterial\",this.color=new rn(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}Il.prototype.isShadowMaterial=!0;class Dl extends Ze{constructor(t){super(),this.defines={STANDARD:\"\"},this.type=\"MeshStandardMaterial\",this.color=new rn(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new yt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:\"\"},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}Dl.prototype.isMeshStandardMaterial=!0;class Nl extends Dl{constructor(t){super(),this.defines={STANDARD:\"\",PHYSICAL:\"\"},this.type=\"MeshPhysicalMaterial\",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new yt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,\"reflectivity\",{get:function(){return ut(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new rn(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new rn(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new rn(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:\"\",PHYSICAL:\"\"},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}Nl.prototype.isMeshPhysicalMaterial=!0;class zl extends Ze{constructor(t){super(),this.type=\"MeshPhongMaterial\",this.color=new rn(16777215),this.specular=new rn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new yt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}zl.prototype.isMeshPhongMaterial=!0;class Bl extends Ze{constructor(t){super(),this.defines={TOON:\"\"},this.type=\"MeshToonMaterial\",this.color=new rn(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new yt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Bl.prototype.isMeshToonMaterial=!0;class Fl extends Ze{constructor(t){super(),this.type=\"MeshNormalMaterial\",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new yt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}Fl.prototype.isMeshNormalMaterial=!0;class Ol extends Ze{constructor(t){super(),this.type=\"MeshLambertMaterial\",this.color=new rn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Ol.prototype.isMeshLambertMaterial=!0;class Ul extends Ze{constructor(t){super(),this.defines={MATCAP:\"\"},this.type=\"MeshMatcapMaterial\",this.color=new rn(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new yt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:\"\"},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this}}Ul.prototype.isMeshMatcapMaterial=!0;class Hl extends Ga{constructor(t){super(),this.type=\"LineDashedMaterial\",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}Hl.prototype.isLineDashedMaterial=!0;var Gl=Object.freeze({__proto__:null,ShadowMaterial:Il,SpriteMaterial:sa,RawShaderMaterial:wi,ShaderMaterial:Zn,PointsMaterial:Ka,MeshPhysicalMaterial:Nl,MeshStandardMaterial:Dl,MeshPhongMaterial:zl,MeshToonMaterial:Bl,MeshNormalMaterial:Fl,MeshLambertMaterial:Ol,MeshDepthMaterial:Us,MeshDistanceMaterial:Hs,MeshBasicMaterial:sn,MeshMatcapMaterial:Ul,LineDashedMaterial:Hl,LineBasicMaterial:Ga,Material:Ze});const kl={arraySlice:function(t,e,n){return kl.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:\"number\"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,a=0;a!==i;++s){const i=n[s]*e;for(let n=0;n!==e;++n)r[a++]=t[i+n]}return r},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[r++];if(void 0===s)return;let a=s[i];if(void 0!==a)if(Array.isArray(a))do{a=s[i],void 0!==a&&(e.push(s.time),n.push.apply(n,a)),s=t[r++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[i],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++]}while(void 0!==s);else do{a=s[i],void 0!==a&&(e.push(s.time),n.push(a)),s=t[r++]}while(void 0!==s)},subclip:function(t,e,n,i,r=30){const s=t.clone();s.name=e;const a=[];for(let t=0;t<s.tracks.length;++t){const e=s.tracks[t],o=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const s=e.times[t]*r;if(!(s<n||s>=i)){l.push(e.times[t]);for(let n=0;n<o;++n)c.push(e.values[t*o+n])}}0!==l.length&&(e.times=kl.convertArray(l,e.times.constructor),e.values=kl.convertArray(c,e.values.constructor),a.push(e))}s.tracks=a;let o=1/0;for(let t=0;t<s.tracks.length;++t)o>s.tracks[t].times[0]&&(o=s.tracks[t].times[0]);for(let t=0;t<s.tracks.length;++t)s.tracks[t].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if(\"bool\"===r||\"string\"===r)continue;const a=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===r}));if(void 0===a)continue;let o=0;const l=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const u=i.times.length-1;let d;if(s<=i.times[0]){const t=o,e=l-o;d=kl.arraySlice(i.values,t,e)}else if(s>=i.times[u]){const t=u*l+o,e=t+l-o;d=kl.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=o,n=l-o;t.evaluate(s),d=kl.arraySlice(t.resultBuffer,e,n)}if(\"quaternion\"===r){(new Nt).fromArray(d).normalize().conjugate().toArray(d)}const p=a.times.length;for(let t=0;t<p;++t){const e=t*h+c;if(\"quaternion\"===r)Nt.multiplyQuaternionsFlat(a.values,e,d,0,a.values,e);else{const t=h-2*c;for(let n=0;n<t;++n)a.values[e+n]-=d[n]}}}return t.blendMode=q,t}};class Vl{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let s;n:{i:if(!(t<i)){for(let s=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===s)break;if(r=i,i=e[++n],t<i)break e}s=e.length;break n}if(t>=r)break t;{const a=e[1];t<a&&(n=2,r=a);for(let s=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===s)break;if(i=r,r=e[--n-1],t>=r)break e}s=n,n=0}}for(;n<s;){const i=n+s>>>1;t<e[i]?s=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e}interpolate_(){throw new Error(\"call to abstract method\")}intervalChanged_(){}}Vl.prototype.beforeStart_=Vl.prototype.copySampleValue_,Vl.prototype.afterEnd_=Vl.prototype.copySampleValue_;class Wl extends Vl{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:k,endingEnd:k}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,a=i[r],o=i[s];if(void 0===a)switch(this.getSettings_().endingStart){case V:r=t,a=2*e-n;break;case W:r=i.length-2,a=e+i[r]-i[r+1];break;default:r=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case V:s=t,o=2*n-e;break;case W:s=1,o=n+i[1]-i[0];break;default:s=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=s*c}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let t=0;t!==a;++t)r[t]=g*s[c+t]+v*s[l+t]+y*s[o+t]+x*s[h+t];return r}}class jl extends Vl{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),h=1-c;for(let t=0;t!==a;++t)r[t]=s[l+t]*h+s[o+t]*c;return r}}class ql extends Vl{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Xl{constructor(t,e,n,i){if(void 0===t)throw new Error(\"THREE.KeyframeTrack: track name is undefined\");if(void 0===e||0===e.length)throw new Error(\"THREE.KeyframeTrack: no keyframes in track named \"+t);this.name=t,this.times=kl.convertArray(e,this.TimeBufferType),this.values=kl.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:kl.convertArray(t.times,Array),values:kl.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new ql(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new jl(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Wl(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case U:e=this.InterpolantFactoryMethodDiscrete;break;case H:e=this.InterpolantFactoryMethodLinear;break;case G:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn(\"THREE.KeyframeTrack:\",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return U;case this.InterpolantFactoryMethodLinear:return H;case this.InterpolantFactoryMethodSmooth:return G}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==r||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=kl.arraySlice(n,r,s),this.values=kl.arraySlice(this.values,r*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error(\"THREE.KeyframeTrack: Invalid value size in track.\",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error(\"THREE.KeyframeTrack: Track is empty.\",this),t=!1);let s=null;for(let e=0;e!==r;e++){const i=n[e];if(\"number\"==typeof i&&isNaN(i)){console.error(\"THREE.KeyframeTrack: Time is not a valid number.\",this,e,i),t=!1;break}if(null!==s&&s>i){console.error(\"THREE.KeyframeTrack: Out of order keys.\",this,e,i,s),t=!1;break}s=i}if(void 0!==i&&kl.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error(\"THREE.KeyframeTrack: Value is not a valid number.\",this,e,n),t=!1;break}}return t}optimize(){const t=kl.arraySlice(this.times),e=kl.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===G,r=t.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(i)r=!0;else{const t=a*n,i=t-n,s=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[i+a]||n!==e[s+a]){r=!0;break}}}if(r){if(a!==s){t[s]=t[a];const i=a*n,r=s*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++s}}if(r>0){t[s]=t[r];for(let t=r*n,i=s*n,a=0;a!==n;++a)e[i+a]=e[t+a];++s}return s!==t.length?(this.times=kl.arraySlice(t,0,s),this.values=kl.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this}clone(){const t=kl.arraySlice(this.times,0),e=kl.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Xl.prototype.TimeBufferType=Float32Array,Xl.prototype.ValueBufferType=Float32Array,Xl.prototype.DefaultInterpolation=H;class Yl extends Xl{}Yl.prototype.ValueTypeName=\"bool\",Yl.prototype.ValueBufferType=Array,Yl.prototype.DefaultInterpolation=U,Yl.prototype.InterpolantFactoryMethodLinear=void 0,Yl.prototype.InterpolantFactoryMethodSmooth=void 0;class Jl extends Xl{}Jl.prototype.ValueTypeName=\"color\";class Zl extends Xl{}Zl.prototype.ValueTypeName=\"number\";class Ql extends Vl{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(i-e);let l=t*a;for(let t=l+a;l!==t;l+=4)Nt.slerpFlat(r,0,s,l-a,s,l,o);return r}}class Kl extends Xl{InterpolantFactoryMethodLinear(t){return new Ql(this.times,this.values,this.getValueSize(),t)}}Kl.prototype.ValueTypeName=\"quaternion\",Kl.prototype.DefaultInterpolation=H,Kl.prototype.InterpolantFactoryMethodSmooth=void 0;class $l extends Xl{}$l.prototype.ValueTypeName=\"string\",$l.prototype.ValueBufferType=Array,$l.prototype.DefaultInterpolation=U,$l.prototype.InterpolantFactoryMethodLinear=void 0,$l.prototype.InterpolantFactoryMethodSmooth=void 0;class tc extends Xl{}tc.prototype.ValueTypeName=\"vector\";class ec{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=ht(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(nc(n[t]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(Xl.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,s=[];for(let t=0;t<r;t++){let a=[],o=[];a.push((t+r-1)%r,t,(t+1)%r),o.push(0,1,0);const l=kl.getKeyframeOrder(a);a=kl.sortedArray(a,1,l),o=kl.sortedArray(o,1,l),i||0!==a[0]||(a.push(r),o.push(o[0])),s.push(new Zl(\".morphTargetInfluences[\"+e[t].name+\"]\",a,o).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\\w-]*?)([\\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.name.match(r);if(s&&s.length>1){const t=s[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const s=[];for(const t in i)s.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return s}static parseAnimation(t,e){if(!t)return console.error(\"THREE.AnimationClip: No animation in JSONLoader data.\"),null;const n=function(t,e,n,i,r){if(0!==n.length){const s=[],a=[];kl.flattenJSON(n,s,a,i),0!==s.length&&r.push(new t(e,s,a))}},i=[],r=t.name||\"default\",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const r=l[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],s=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),s.push(i.morphTarget===n?1:0)}i.push(new Zl(\".morphTargetInfluence[\"+n+\"]\",t,s))}o=t.length*(s||1)}else{const s=\".bones[\"+e[t].name+\"]\";n(tc,s+\".position\",r,\"pos\",i),n(Kl,s+\".quaternion\",r,\"rot\",i),n(tc,s+\".scale\",r,\"scl\",i)}}if(0===i.length)return null;return new this(r,o,i,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function nc(t){if(void 0===t.type)throw new Error(\"THREE.KeyframeTrack: track type undefined, can not parse\");const e=function(t){switch(t.toLowerCase()){case\"scalar\":case\"double\":case\"float\":case\"number\":case\"integer\":return Zl;case\"vector\":case\"vector2\":case\"vector3\":case\"vector4\":return tc;case\"color\":return Jl;case\"quaternion\":return Kl;case\"bool\":case\"boolean\":return Yl;case\"string\":return $l}throw new Error(\"THREE.KeyframeTrack: Unsupported typeName: \"+t)}(t.type);if(void 0===t.times){const e=[],n=[];kl.flattenJSON(t.keys,e,n,\"value\"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const ic={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class rc{constructor(t,e,n){const i=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===s&&void 0!==i.onStart&&i.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==i.onProgress&&i.onProgress(t,a,o),a===o&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}}const sc=new rc;class ac{constructor(t){this.manager=void 0!==t?t:sc,this.crossOrigin=\"anonymous\",this.withCredentials=!1,this.path=\"\",this.resourcePath=\"\",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const oc={};class lc extends ac{constructor(t){super(t)}load(t,e,n,i){void 0===t&&(t=\"\"),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=ic.get(t);if(void 0!==r)return this.manager.itemStart(t),setTimeout((()=>{e&&e(r),this.manager.itemEnd(t)}),0),r;if(void 0!==oc[t])return void oc[t].push({onLoad:e,onProgress:n,onError:i});oc[t]=[],oc[t].push({onLoad:e,onProgress:n,onError:i});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?\"include\":\"same-origin\"});fetch(s).then((e=>{if(200===e.status||0===e.status){0===e.status&&console.warn(\"THREE.FileLoader: HTTP Status 0 received.\");const n=oc[t],i=e.body.getReader(),r=e.headers.get(\"Content-Length\"),s=r?parseInt(r):0,a=0!==s;let o=0;return new ReadableStream({start(t){!function e(){i.read().then((({done:i,value:r})=>{if(i)t.close();else{o+=r.byteLength;const i=new ProgressEvent(\"progress\",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(i)}t.enqueue(r),e()}}))}()}})}throw Error(`fetch for \"${e.url}\" responded with ${e.status}: ${e.statusText}`)})).then((t=>{const e=new Response(t);switch(this.responseType){case\"arraybuffer\":return e.arrayBuffer();case\"blob\":return e.blob();case\"document\":return e.text().then((t=>(new DOMParser).parseFromString(t,this.mimeType)));case\"json\":return e.json();default:return e.text()}})).then((e=>{ic.add(t,e);const n=oc[t];delete oc[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onLoad&&i.onLoad(e)}this.manager.itemEnd(t)})).catch((e=>{const n=oc[t];delete oc[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}this.manager.itemError(t),this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class cc extends ac{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=ic.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const a=wt(\"img\");function o(){c(),ic.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){c(),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}function c(){a.removeEventListener(\"load\",o,!1),a.removeEventListener(\"error\",l,!1)}return a.addEventListener(\"load\",o,!1),a.addEventListener(\"error\",l,!1),\"data:\"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class hc extends ac{constructor(t){super(t)}load(t,e,n,i){const r=new ei,s=new cc(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(t[n],(function(t){r.images[n]=t,a++,6===a&&(r.needsUpdate=!0,e&&e(r))}),void 0,i)}for(let e=0;e<t.length;++e)o(e);return r}}class uc extends ac{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Pa,a=new lc(this.manager);return a.setResponseType(\"arraybuffer\"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(t,(function(t){const n=r.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:u,s.wrapT=void 0!==n.wrapT?n.wrapT:u,s.magFilter=void 0!==n.magFilter?n.magFilter:g,s.minFilter=void 0!==n.minFilter?n.minFilter:g,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=y),1===n.mipmapCount&&(s.minFilter=g),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n))}),n,i),s}}class dc extends ac{constructor(t){super(t)}load(t,e,n,i){const r=new Lt,s=new cc(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(t){r.image=t,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}class pc extends Fe{constructor(t,e=1){super(),this.type=\"Light\",this.color=new rn(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}pc.prototype.isLight=!0;class mc extends pc{constructor(t,e,n){super(t,n),this.type=\"HemisphereLight\",this.position.copy(Fe.DefaultUp),this.updateMatrix(),this.groundColor=new rn(e)}copy(t){return pc.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}mc.prototype.isHemisphereLight=!0;const fc=new de,gc=new zt,vc=new zt;class yc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new yt(512,512),this.map=null,this.mapPass=null,this.matrix=new de,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ci,this._frameExtents=new yt(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;gc.setFromMatrixPosition(t.matrixWorld),e.position.copy(gc),vc.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(vc),e.updateMatrixWorld(),fc.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class xc extends yc{constructor(){super(new Kn(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*ot*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}xc.prototype.isSpotLightShadow=!0;class _c extends pc{constructor(t,e,n=0,i=Math.PI/3,r=0,s=1){super(t,e),this.type=\"SpotLight\",this.position.copy(Fe.DefaultUp),this.updateMatrix(),this.target=new Fe,this.distance=n,this.angle=i,this.penumbra=r,this.decay=s,this.shadow=new xc}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}_c.prototype.isSpotLight=!0;const Mc=new de,bc=new zt,wc=new zt;class Sc extends yc{constructor(){super(new Kn(90,1,.5,500)),this._frameExtents=new yt(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new zt(1,0,0),new zt(-1,0,0),new zt(0,0,1),new zt(0,0,-1),new zt(0,1,0),new zt(0,-1,0)],this._cubeUps=[new zt(0,1,0),new zt(0,1,0),new zt(0,1,0),new zt(0,1,0),new zt(0,0,1),new zt(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),bc.setFromMatrixPosition(t.matrixWorld),n.position.copy(bc),wc.copy(n.position),wc.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(wc),n.updateMatrixWorld(),i.makeTranslation(-bc.x,-bc.y,-bc.z),Mc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Mc)}}Sc.prototype.isPointLightShadow=!0;class Tc extends pc{constructor(t,e,n=0,i=1){super(t,e),this.type=\"PointLight\",this.distance=n,this.decay=i,this.shadow=new Sc}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}Tc.prototype.isPointLight=!0;class Ec extends yc{constructor(){super(new bi(-5,5,5,-5,.5,500))}}Ec.prototype.isDirectionalLightShadow=!0;class Ac extends pc{constructor(t,e){super(t,e),this.type=\"DirectionalLight\",this.position.copy(Fe.DefaultUp),this.updateMatrix(),this.target=new Fe,this.shadow=new Ec}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Ac.prototype.isDirectionalLight=!0;class Lc extends pc{constructor(t,e){super(t,e),this.type=\"AmbientLight\"}}Lc.prototype.isAmbientLight=!0;class Rc extends pc{constructor(t,e,n=10,i=10){super(t,e),this.type=\"RectAreaLight\",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Rc.prototype.isRectAreaLight=!0;class Cc{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new zt)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*i),e.addScaledVector(s[2],.488603*r),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*i*1.092548),e.addScaledVector(s[5],i*r*1.092548),e.addScaledVector(s[6],.315392*(3*r*r-1)),e.addScaledVector(s[7],n*r*1.092548),e.addScaledVector(s[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*i),e.addScaledVector(s[2],1.023328*r),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*i),e.addScaledVector(s[5],.858086*i*r),e.addScaledVector(s[6],.743125*r*r-.247708),e.addScaledVector(s[7],.858086*n*r),e.addScaledVector(s[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}Cc.prototype.isSphericalHarmonics3=!0;class Pc extends pc{constructor(t=new Cc,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Pc.prototype.isLightProbe=!0;class Ic extends ac{constructor(t){super(t),this.textures={}}load(t,e,n,i){const r=this,s=new lc(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",t),e[t]}const i=new Gl[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=t.sheen),void 0!==t.sheenColor&&(i.sheenColor=(new rn).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(i.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.specularIntensity&&(i.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.thickness&&(i.thickness=t.thickness),void 0!==t.attenuationDistance&&(i.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.format&&(i.format=t.format),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&(\"number\"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const r=t.uniforms[e];switch(i.uniforms[e]={},r.type){case\"t\":i.uniforms[e].value=n(r.value);break;case\"c\":i.uniforms[e].value=(new rn).setHex(r.value);break;case\"v2\":i.uniforms[e].value=(new yt).fromArray(r.value);break;case\"v3\":i.uniforms[e].value=(new zt).fromArray(r.value);break;case\"v4\":i.uniforms[e].value=(new Ct).fromArray(r.value);break;case\"m3\":i.uniforms[e].value=(new xt).fromArray(r.value);break;case\"m4\":i.uniforms[e].value=(new de).fromArray(r.value);break;default:i.uniforms[e].value=r.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new yt).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(i.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(i.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new yt).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(i.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(i.thicknessMap=n(t.thicknessMap)),void 0!==t.sheenColorMap&&(i.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}}class Dc{static decodeText(t){if(\"undefined\"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e=\"\";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf(\"/\");return-1===e?\"./\":t.substr(0,e+1)}static resolveURL(t,e){return\"string\"!=typeof t||\"\"===t?\"\":(/^https?:\\/\\//i.test(e)&&/^\\//.test(t)&&(e=e.replace(/(^https?:\\/\\/[^\\/]+).*/i,\"$1\")),/^(https?:)?\\/\\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Nc extends En{constructor(){super(),this.type=\"InstancedBufferGeometry\",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}Nc.prototype.isInstancedBufferGeometry=!0;class zc extends ac{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new lc(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}parse(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const r=t.interleavedBuffers[i],s=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers[e],r=new Uint32Array(i).buffer;return n[e]=r,r}(t,r.buffer),a=bt(r.type,s),o=new na(a,r.stride);return o.uuid=r.uuid,e[i]=o,o}const r=t.isInstancedBufferGeometry?new Nc:new En,s=t.data.index;if(void 0!==s){const t=bt(s.type,s.array);r.setIndex(new ln(t,1))}const a=t.data.attributes;for(const e in a){const n=a[e];let s;if(n.isInterleavedBufferAttribute){const e=i(t.data,n.data);s=new ra(e,n.itemSize,n.offset,n.normalized)}else{const t=bt(n.type,n.array);s=new(n.isInstancedBufferAttribute?za:ln)(t,n.itemSize,n.normalized)}void 0!==n.name&&(s.name=n.name),void 0!==n.usage&&s.setUsage(n.usage),void 0!==n.updateRange&&(s.updateRange.offset=n.updateRange.offset,s.updateRange.count=n.updateRange.count),r.setAttribute(e,s)}const o=t.data.morphAttributes;if(o)for(const e in o){const n=o[e],s=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];let a;if(r.isInterleavedBufferAttribute){const e=i(t.data,r.data);a=new ra(e,r.itemSize,r.offset,r.normalized)}else{const t=bt(r.type,r.array);a=new ln(t,r.itemSize,r.normalized)}void 0!==r.name&&(a.name=r.name),s.push(a)}r.morphAttributes[e]=s}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];r.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;if(void 0!==c){const t=new zt;void 0!==c.center&&t.fromArray(c.center),r.boundingSphere=new ie(t,c.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}}const Bc={UVMapping:i,CubeReflectionMapping:r,CubeRefractionMapping:s,EquirectangularReflectionMapping:a,EquirectangularRefractionMapping:o,CubeUVReflectionMapping:l,CubeUVRefractionMapping:c},Fc={RepeatWrapping:h,ClampToEdgeWrapping:u,MirroredRepeatWrapping:d},Oc={NearestFilter:p,NearestMipmapNearestFilter:m,NearestMipmapLinearFilter:f,LinearFilter:g,LinearMipmapNearestFilter:v,LinearMipmapLinearFilter:y};class Uc extends ac{constructor(t){super(t),\"undefined\"==typeof createImageBitmap&&console.warn(\"THREE.ImageBitmapLoader: createImageBitmap() not supported.\"),\"undefined\"==typeof fetch&&console.warn(\"THREE.ImageBitmapLoader: fetch() not supported.\"),this.options={premultiplyAlpha:\"none\"}}setOptions(t){return this.options=t,this}load(t,e,n,i){void 0===t&&(t=\"\"),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=ic.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const a={};a.credentials=\"anonymous\"===this.crossOrigin?\"same-origin\":\"include\",a.headers=this.requestHeader,fetch(t,a).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:\"none\"}))})).then((function(n){ic.add(t,n),e&&e(n),r.manager.itemEnd(t)})).catch((function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}}let Hc;Uc.prototype.isImageBitmapLoader=!0;const Gc={getContext:function(){return void 0===Hc&&(Hc=new(window.AudioContext||window.webkitAudioContext)),Hc},setContext:function(t){Hc=t}};class kc extends ac{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new lc(this.manager);s.setResponseType(\"arraybuffer\"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{const t=n.slice(0);Gc.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}}class Vc extends Pc{constructor(t,e,n=1){super(void 0,n);const i=(new rn).set(t),r=(new rn).set(e),s=new zt(i.r,i.g,i.b),a=new zt(r.r,r.g,r.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}}Vc.prototype.isHemisphereLightProbe=!0;class Wc extends Pc{constructor(t,e=1){super(void 0,e);const n=(new rn).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Wc.prototype.isAmbientLightProbe=!0;const jc=new de,qc=new de;class Xc{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Yc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Yc();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function Yc(){return(\"undefined\"==typeof performance?Date:performance).now()}const Jc=new zt,Zc=new Nt,Qc=new zt,Kc=new zt;class $c extends Fe{constructor(t){super(),this.type=\"Audio\",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType=\"empty\",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType=\"audioNode\",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType=\"mediaNode\",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType=\"mediaStreamNode\",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType=\"buffer\",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn(\"THREE.Audio: Audio is already playing.\");if(!1===this.hasPlaybackControl)return void console.warn(\"THREE.Audio: this Audio has no playback control.\");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn(\"THREE.Audio: this Audio has no playback control.\")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const th=new zt,eh=new Nt,nh=new zt,ih=new zt;class rh{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class sh{constructor(t,e,n){let i,r,s;switch(this.binding=t,this.valueSize=n,e){case\"quaternion\":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case\"string\":case\"bool\":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==i;++t)n[r+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){Nt.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const s=this._workIndex*r;Nt.multiplyQuaternionsFlat(t,s,t,e,t,n),Nt.slerpFlat(t,e,t,e,t,s,i)}_lerp(t,e,n,i,r){const s=1-i;for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]*s+t[n+a]*i}}_lerpAdditive(t,e,n,i,r){for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]+t[n+s]*i}}}const ah=\"\\\\[\\\\]\\\\.:\\\\/\",oh=new RegExp(\"[\\\\[\\\\]\\\\.:\\\\/]\",\"g\"),lh=\"[^\\\\[\\\\]\\\\.:\\\\/]\",ch=\"[^\"+ah.replace(\"\\\\.\",\"\")+\"]\",hh=/((?:WC+[\\/:])*)/.source.replace(\"WC\",lh),uh=/(WCOD+)?/.source.replace(\"WCOD\",ch),dh=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace(\"WC\",lh),ph=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace(\"WC\",lh),mh=new RegExp(\"^\"+hh+uh+dh+ph+\"$\"),fh=[\"material\",\"materials\",\"bones\"];class gh{constructor(t,e,n){this.path=e,this.parsedPath=n||gh.parseTrackName(e),this.node=gh.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new gh.Composite(t,e,n):new gh(t,e,n)}static sanitizeNodeName(t){return t.replace(/\\s/g,\"_\").replace(oh,\"\")}static parseTrackName(t){const e=mh.exec(t);if(!e)throw new Error(\"PropertyBinding: Cannot parse trackName: \"+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(\".\");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==fh.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error(\"PropertyBinding: can not parse propertyName from trackName: \"+t);return n}static findNode(t,e){if(!e||\"\"===e||\".\"===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const s=n(r.children);if(s)return s}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=gh.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error(\"THREE.PropertyBinding: Trying to update node for track: \"+this.path+\" but it wasn't found.\");if(n){let i=e.objectIndex;switch(n){case\"materials\":if(!t.material)return void console.error(\"THREE.PropertyBinding: Can not bind to material as node does not have a material.\",this);if(!t.material.materials)return void console.error(\"THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.\",this);t=t.material.materials;break;case\"bones\":if(!t.skeleton)return void console.error(\"THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.\",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error(\"THREE.PropertyBinding: Can not bind to objectName of node undefined.\",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error(\"THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.\",this,t);t=t[i]}}const s=t[i];if(void 0===s){const n=e.nodeName;return void console.error(\"THREE.PropertyBinding: Trying to update property for track: \"+n+\".\"+i+\" but it wasn't found.\",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if(\"morphTargetInfluences\"===i){if(!t.geometry)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.\",this);if(!t.geometry.isBufferGeometry)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.\",this);if(!t.geometry.morphAttributes)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.\",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}gh.Composite=class{constructor(t,e,n){const i=n||gh.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},gh.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},gh.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},gh.prototype.GetterByBindingType=[gh.prototype._getValue_direct,gh.prototype._getValue_array,gh.prototype._getValue_arrayElement,gh.prototype._getValue_toArray],gh.prototype.SetterByBindingTypeAndVersioning=[[gh.prototype._setValue_direct,gh.prototype._setValue_direct_setNeedsUpdate,gh.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[gh.prototype._setValue_array,gh.prototype._setValue_array_setNeedsUpdate,gh.prototype._setValue_array_setMatrixWorldNeedsUpdate],[gh.prototype._setValue_arrayElement,gh.prototype._setValue_arrayElement_setNeedsUpdate,gh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[gh.prototype._setValue_fromArray,gh.prototype._setValue_fromArray_setNeedsUpdate,gh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class vh{constructor(){this.uuid=ht(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let a,o=t.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],u=h.uuid;let d=e[u];if(void 0===d){d=o++,e[u]=d,t.push(h);for(let t=0,e=s;t!==e;++t)r[t].push(new gh(h,n[t],i[t]))}else if(d<l){a=t[d];const o=--l,c=t[o];e[c.uuid]=d,t[d]=c,e[u]=o,t[o]=h;for(let t=0,e=s;t!==e;++t){const e=r[t],s=e[o];let a=e[d];e[d]=s,void 0===a&&(a=new gh(h,n[t],i[t])),e[o]=a}}else t[d]!==a&&console.error(\"THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.\")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=r){const s=r++,c=t[s];e[c.uuid]=l,t[l]=c,e[o]=s,t[s]=a;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[s],r=e[l];e[l]=i,e[s]=r}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<r){const a=--r,o=t[a],c=--s,h=t[c];e[o.uuid]=l,t[l]=o,e[h.uuid]=a,t[a]=h,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[a],r=e[c];e[l]=i,e[a]=r,e.pop()}}else{const r=--s,a=t[r];r>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[l]=e[r],e.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(void 0!==i)return r[i];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=r.length,n[t]=i,s.push(t),a.push(e),r.push(h);for(let n=c,i=o.length;n!==i;++n){const i=o[n];h[n]=new gh(i,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=n,s[n]=o,s.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}vh.prototype.isAnimationObjectGroup=!0;class yh{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,s=r.length,a=new Array(s),o={endingStart:k,endingEnd:k};for(let t=0;t!==s;++t){const e=r[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,s=n/i;t.warp(1,r,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===q)for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulateAdditive(a);else for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulate(i,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const s=2202===n;if(0===t)return-1===r?i:s&&1==(1&r)?e-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:n})}}else this.time=i;if(s&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=V,i.endingEnd=V):(i.endingStart=t?this.zeroSlopeAtStart?V:k:W,i.endingEnd=e?this.zeroSlopeAtEnd?V:k:W)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;null===s&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=e,a[1]=r+t,o[1]=n,this}}class xh extends rt{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let t=0;t!==r;++t){const r=i[t],l=r.name;let h=c[l];if(void 0!==h)s[t]=h;else{if(h=s[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,l));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new sh(gh.create(n,l,i),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,l),s[t]=h}a[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];void 0===s&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,a=s[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r],0===Object.keys(a).length&&delete s[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new jl(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let s=\"string\"==typeof t?ec.findByName(i,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:j),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new yh(this,s,e,n);return this._bindAction(c,l),this._addInactiveAction(c,a,r),c}existingAction(t,e){const n=e||this._root,i=n.uuid,r=\"string\"==typeof t?ec.findByName(n,t):t,s=r?r.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let a=0;a!==n;++a){e[a]._update(i,t,r,s)}const a=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)a[t].apply(s);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,s=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,s._cacheIndex=r,e[r]=s,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}xh.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class _h{constructor(t){\"string\"==typeof t&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),t=arguments[1]),this.value=t}clone(){return new _h(void 0===this.value.clone?this.value:this.value.clone())}}class Mh extends na{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}Mh.prototype.isInstancedInterleavedBuffer=!0;class bh{constructor(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}bh.prototype.isGLBufferAttribute=!0;function wh(t,e){return t.distance-e.distance}function Sh(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)Sh(i[t],e,n,!0)}}const Th=new yt;class Eh{constructor(t=new yt(1/0,1/0),e=new yt(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Th.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Th.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Eh.prototype.isBox2=!0;const Ah=new zt,Lh=new zt;class Rh{constructor(t=new zt,e=new zt){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Ah.subVectors(t,this.start),Lh.subVectors(this.end,this.start);const n=Lh.dot(Lh);let i=Lh.dot(Ah)/n;return e&&(i=ut(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Ch=new zt;const Ph=new zt,Ih=new de,Dh=new de;class Nh extends Za{constructor(t){const e=zh(t),n=new En,i=[],r=[],s=new rn(0,0,1),a=new rn(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}n.setAttribute(\"position\",new vn(i,3)),n.setAttribute(\"color\",new vn(r,3));super(n,new Ga({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type=\"SkeletonHelper\",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute(\"position\");Dh.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(Ih.multiplyMatrices(Dh,r.matrixWorld),Ph.setFromMatrixPosition(Ih),i.setXYZ(n,Ph.x,Ph.y,Ph.z),Ih.multiplyMatrices(Dh,r.parent.matrixWorld),Ph.setFromMatrixPosition(Ih),i.setXYZ(n+1,Ph.x,Ph.y,Ph.z),n+=2)}n.getAttribute(\"position\").needsUpdate=!0,super.updateMatrixWorld(t)}}function zh(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,zh(t.children[n]));return e}const Bh=new zt,Fh=new rn,Oh=new rn;class Uh extends Za{constructor(t=10,e=10,n=4473924,i=8947848){n=new rn(n),i=new rn(i);const r=e/2,s=t/e,a=t/2,o=[],l=[];for(let t=0,c=0,h=-a;t<=e;t++,h+=s){o.push(-a,0,h,a,0,h),o.push(h,0,-a,h,0,a);const e=t===r?n:i;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new En;c.setAttribute(\"position\",new vn(o,3)),c.setAttribute(\"color\",new vn(l,3));super(c,new Ga({vertexColors:!0,toneMapped:!1})),this.type=\"GridHelper\"}}const Hh=new zt,Gh=new zt,kh=new zt;const Vh=new zt,Wh=new Qn;function jh(t,e,n,i,r,s,a){Vh.set(r,s,a).unproject(i);const o=e[t];if(void 0!==o){const t=n.getAttribute(\"position\");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],Vh.x,Vh.y,Vh.z)}}const qh=new Ot;class Xh extends Za{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new En;r.setIndex(new ln(n,1)),r.setAttribute(\"position\",new ln(i,3)),super(r,new Ga({color:e,toneMapped:!1})),this.object=t,this.type=\"BoxHelper\",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn(\"THREE.BoxHelper: .update() has no longer arguments.\"),void 0!==this.object&&qh.setFromObject(this.object),qh.isEmpty())return;const e=qh.min,n=qh.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=e.x,r[4]=n.y,r[5]=n.z,r[6]=e.x,r[7]=e.y,r[8]=n.z,r[9]=n.x,r[10]=e.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=e.z,r[15]=e.x,r[16]=n.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=n.x,r[22]=e.y,r[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return Za.prototype.copy.call(this,t),this.object=t.object,this}}const Yh=new zt;let Jh,Zh;class Qh extends Za{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new En;n.setAttribute(\"position\",new vn(e,3)),n.setAttribute(\"color\",new vn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new Ga({vertexColors:!0,toneMapped:!1})),this.type=\"AxesHelper\"}setColors(t,e,n){const i=new rn,r=this.geometry.attributes.color.array;return i.set(t),i.toArray(r,0),i.toArray(r,3),i.set(e),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}const Kh=new Float32Array(1),$h=new Int32Array(Kh.buffer);_o.create=function(t,e){return console.log(\"THREE.Curve.create() has been deprecated\"),t.prototype=Object.create(_o.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Go.prototype.fromPoints=function(t){return console.warn(\"THREE.Path: .fromPoints() has been renamed to .setFromPoints().\"),this.setFromPoints(t)},Uh.prototype.setColors=function(){console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\")},Nh.prototype.update=function(){console.error(\"THREE.SkeletonHelper: update() no longer needs to be called.\")},ac.prototype.extractUrlBase=function(t){return console.warn(\"THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.\"),Dc.extractUrlBase(t)},ac.Handlers={add:function(){console.error(\"THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.\")},get:function(){console.error(\"THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.\")}},Eh.prototype.center=function(t){return console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\"),this.getCenter(t)},Eh.prototype.empty=function(){return console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},Eh.prototype.isIntersectionBox=function(t){return console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(t)},Eh.prototype.size=function(t){return console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\"),this.getSize(t)},Ot.prototype.center=function(t){return console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\"),this.getCenter(t)},Ot.prototype.empty=function(){return console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},Ot.prototype.isIntersectionBox=function(t){return console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(t)},Ot.prototype.isIntersectionSphere=function(t){return console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(t)},Ot.prototype.size=function(t){return console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\"),this.getSize(t)},ie.prototype.empty=function(){return console.warn(\"THREE.Sphere: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},ci.prototype.setFromMatrix=function(t){return console.warn(\"THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().\"),this.setFromProjectionMatrix(t)},Rh.prototype.center=function(t){return console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\"),this.getCenter(t)},xt.prototype.flattenToArrayOffset=function(t,e){return console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"),this.toArray(t,e)},xt.prototype.multiplyVector3=function(t){return console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\"),t.applyMatrix3(this)},xt.prototype.multiplyVector3Array=function(){console.error(\"THREE.Matrix3: .multiplyVector3Array() has been removed.\")},xt.prototype.applyToBufferAttribute=function(t){return console.warn(\"THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.\"),t.applyMatrix3(this)},xt.prototype.applyToVector3Array=function(){console.error(\"THREE.Matrix3: .applyToVector3Array() has been removed.\")},xt.prototype.getInverse=function(t){return console.warn(\"THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.\"),this.copy(t).invert()},de.prototype.extractPosition=function(t){return console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\"),this.copyPosition(t)},de.prototype.flattenToArrayOffset=function(t,e){return console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"),this.toArray(t,e)},de.prototype.getPosition=function(){return console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\"),(new zt).setFromMatrixColumn(this,3)},de.prototype.setRotationFromQuaternion=function(t){return console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\"),this.makeRotationFromQuaternion(t)},de.prototype.multiplyToArray=function(){console.warn(\"THREE.Matrix4: .multiplyToArray() has been removed.\")},de.prototype.multiplyVector3=function(t){return console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),t.applyMatrix4(this)},de.prototype.multiplyVector4=function(t){return console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),t.applyMatrix4(this)},de.prototype.multiplyVector3Array=function(){console.error(\"THREE.Matrix4: .multiplyVector3Array() has been removed.\")},de.prototype.rotateAxis=function(t){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\"),t.transformDirection(this)},de.prototype.crossVector=function(t){return console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),t.applyMatrix4(this)},de.prototype.translate=function(){console.error(\"THREE.Matrix4: .translate() has been removed.\")},de.prototype.rotateX=function(){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},de.prototype.rotateY=function(){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},de.prototype.rotateZ=function(){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},de.prototype.rotateByAxis=function(){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")},de.prototype.applyToBufferAttribute=function(t){return console.warn(\"THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.\"),t.applyMatrix4(this)},de.prototype.applyToVector3Array=function(){console.error(\"THREE.Matrix4: .applyToVector3Array() has been removed.\")},de.prototype.makeFrustum=function(t,e,n,i,r,s){return console.warn(\"THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.\"),this.makePerspective(t,e,i,n,r,s)},de.prototype.getInverse=function(t){return console.warn(\"THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.\"),this.copy(t).invert()},ai.prototype.isIntersectionLine=function(t){return console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\"),this.intersectsLine(t)},Nt.prototype.multiplyVector3=function(t){return console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\"),t.applyQuaternion(this)},Nt.prototype.inverse=function(){return console.warn(\"THREE.Quaternion: .inverse() has been renamed to invert().\"),this.invert()},ue.prototype.isIntersectionBox=function(t){return console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(t)},ue.prototype.isIntersectionPlane=function(t){return console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\"),this.intersectsPlane(t)},ue.prototype.isIntersectionSphere=function(t){return console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(t)},Ye.prototype.area=function(){return console.warn(\"THREE.Triangle: .area() has been renamed to .getArea().\"),this.getArea()},Ye.prototype.barycoordFromPoint=function(t,e){return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"),this.getBarycoord(t,e)},Ye.prototype.midpoint=function(t){return console.warn(\"THREE.Triangle: .midpoint() has been renamed to .getMidpoint().\"),this.getMidpoint(t)},Ye.prototypenormal=function(t){return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"),this.getNormal(t)},Ye.prototype.plane=function(t){return console.warn(\"THREE.Triangle: .plane() has been renamed to .getPlane().\"),this.getPlane(t)},Ye.barycoordFromPoint=function(t,e,n,i,r){return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"),Ye.getBarycoord(t,e,n,i,r)},Ye.normal=function(t,e,n,i){return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"),Ye.getNormal(t,e,n,i)},ko.prototype.extractAllPoints=function(t){return console.warn(\"THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.\"),this.extractPoints(t)},ko.prototype.extrude=function(t){return console.warn(\"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\"),new vl(this,t)},ko.prototype.makeGeometry=function(t){return console.warn(\"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\"),new wl(this,t)},yt.prototype.fromAttribute=function(t,e,n){return console.warn(\"THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(t,e,n)},yt.prototype.distanceToManhattan=function(t){return console.warn(\"THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"),this.manhattanDistanceTo(t)},yt.prototype.lengthManhattan=function(){return console.warn(\"THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()},zt.prototype.setEulerFromRotationMatrix=function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},zt.prototype.setEulerFromQuaternion=function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},zt.prototype.getPositionFromMatrix=function(t){return console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\"),this.setFromMatrixPosition(t)},zt.prototype.getScaleFromMatrix=function(t){return console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\"),this.setFromMatrixScale(t)},zt.prototype.getColumnFromMatrix=function(t,e){return console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\"),this.setFromMatrixColumn(e,t)},zt.prototype.applyProjection=function(t){return console.warn(\"THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.\"),this.applyMatrix4(t)},zt.prototype.fromAttribute=function(t,e,n){return console.warn(\"THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(t,e,n)},zt.prototype.distanceToManhattan=function(t){return console.warn(\"THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"),this.manhattanDistanceTo(t)},zt.prototype.lengthManhattan=function(){return console.warn(\"THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()},Ct.prototype.fromAttribute=function(t,e,n){return console.warn(\"THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(t,e,n)},Ct.prototype.lengthManhattan=function(){return console.warn(\"THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()},Fe.prototype.getChildByName=function(t){return console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\"),this.getObjectByName(t)},Fe.prototype.renderDepth=function(){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},Fe.prototype.translate=function(t,e){return console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\"),this.translateOnAxis(e,t)},Fe.prototype.getWorldRotation=function(){console.error(\"THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.\")},Fe.prototype.applyMatrix=function(t){return console.warn(\"THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().\"),this.applyMatrix4(t)},Object.defineProperties(Fe.prototype,{eulerOrder:{get:function(){return console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order},set:function(t){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order=t}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}}),Wn.prototype.setDrawMode=function(){console.error(\"THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.\")},Object.defineProperties(Wn.prototype,{drawMode:{get:function(){return console.error(\"THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.\"),0},set:function(){console.error(\"THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.\")}}}),Ra.prototype.initBones=function(){console.error(\"THREE.SkinnedMesh: initBones() has been removed.\")},Kn.prototype.setLens=function(t,e){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\"),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(pc.prototype,{onlyShadow:{set:function(){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(t){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\"),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\"),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\"),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\"),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\"),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\"),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\"),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},shadowBias:{set:function(t){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\"),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(t){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\"),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\"),this.shadow.mapSize.height=t}}}),Object.defineProperties(ln.prototype,{length:{get:function(){return console.warn(\"THREE.BufferAttribute: .length has been deprecated. Use .count instead.\"),this.array.length}},dynamic:{get:function(){return console.warn(\"THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.\"),this.usage===nt},set:function(){console.warn(\"THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.\"),this.setUsage(nt)}}}),ln.prototype.setDynamic=function(t){return console.warn(\"THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.\"),this.setUsage(!0===t?nt:et),this},ln.prototype.copyIndicesArray=function(){console.error(\"THREE.BufferAttribute: .copyIndicesArray() has been removed.\")},ln.prototype.setArray=function(){console.error(\"THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers\")},En.prototype.addIndex=function(t){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\"),this.setIndex(t)},En.prototype.addAttribute=function(t,e){return console.warn(\"THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().\"),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?\"index\"===t?(console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),this.setIndex(e),this):this.setAttribute(t,e):(console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.setAttribute(t,new ln(arguments[1],arguments[2])))},En.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\"),console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\"),this.addGroup(t,e)},En.prototype.clearDrawCalls=function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\"),this.clearGroups()},En.prototype.computeOffsets=function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")},En.prototype.removeAttribute=function(t){return console.warn(\"THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().\"),this.deleteAttribute(t)},En.prototype.applyMatrix=function(t){return console.warn(\"THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().\"),this.applyMatrix4(t)},Object.defineProperties(En.prototype,{drawcalls:{get:function(){return console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\"),this.groups}},offsets:{get:function(){return console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\"),this.groups}}}),na.prototype.setDynamic=function(t){return console.warn(\"THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.\"),this.setUsage(!0===t?nt:et),this},na.prototype.setArray=function(){console.error(\"THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers\")},vl.prototype.getArrays=function(){console.error(\"THREE.ExtrudeGeometry: .getArrays() has been removed.\")},vl.prototype.addShapeList=function(){console.error(\"THREE.ExtrudeGeometry: .addShapeList() has been removed.\")},vl.prototype.addShape=function(){console.error(\"THREE.ExtrudeGeometry: .addShape() has been removed.\")},ea.prototype.dispose=function(){console.error(\"THREE.Scene: .dispose() has been removed.\")},_h.prototype.onUpdate=function(){return console.warn(\"THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.\"),this},Object.defineProperties(Ze.prototype,{wrapAround:{get:function(){console.warn(\"THREE.Material: .wrapAround has been removed.\")},set:function(){console.warn(\"THREE.Material: .wrapAround has been removed.\")}},overdraw:{get:function(){console.warn(\"THREE.Material: .overdraw has been removed.\")},set:function(){console.warn(\"THREE.Material: .overdraw has been removed.\")}},wrapRGB:{get:function(){return console.warn(\"THREE.Material: .wrapRGB has been removed.\"),new rn}},shading:{get:function(){console.error(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\")},set:function(t){console.warn(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\"),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn(\"THREE.\"+this.type+\": .stencilMask has been removed. Use .stencilFuncMask instead.\"),this.stencilFuncMask},set:function(t){console.warn(\"THREE.\"+this.type+\": .stencilMask has been removed. Use .stencilFuncMask instead.\"),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn(\"THREE.\"+this.type+\": .vertexTangents has been removed.\")},set:function(){console.warn(\"THREE.\"+this.type+\": .vertexTangents has been removed.\")}}}),Object.defineProperties(Zn.prototype,{derivatives:{get:function(){return console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives},set:function(t){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives=t}}}),Qs.prototype.clearTarget=function(t,e,n,i){console.warn(\"THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.\"),this.setRenderTarget(t),this.clear(e,n,i)},Qs.prototype.animate=function(t){console.warn(\"THREE.WebGLRenderer: .animate() is now .setAnimationLoop().\"),this.setAnimationLoop(t)},Qs.prototype.getCurrentRenderTarget=function(){return console.warn(\"THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().\"),this.getRenderTarget()},Qs.prototype.getMaxAnisotropy=function(){return console.warn(\"THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().\"),this.capabilities.getMaxAnisotropy()},Qs.prototype.getPrecision=function(){return console.warn(\"THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.\"),this.capabilities.precision},Qs.prototype.resetGLState=function(){return console.warn(\"THREE.WebGLRenderer: .resetGLState() is now .state.reset().\"),this.state.reset()},Qs.prototype.supportsFloatTextures=function(){return console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\"),this.extensions.get(\"OES_texture_float\")},Qs.prototype.supportsHalfFloatTextures=function(){return console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\"),this.extensions.get(\"OES_texture_half_float\")},Qs.prototype.supportsStandardDerivatives=function(){return console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\"),this.extensions.get(\"OES_standard_derivatives\")},Qs.prototype.supportsCompressedTextureS3TC=function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_s3tc\")},Qs.prototype.supportsCompressedTexturePVRTC=function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")},Qs.prototype.supportsBlendMinMax=function(){return console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\"),this.extensions.get(\"EXT_blend_minmax\")},Qs.prototype.supportsVertexTextures=function(){return console.warn(\"THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.\"),this.capabilities.vertexTextures},Qs.prototype.supportsInstancedArrays=function(){return console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\"),this.extensions.get(\"ANGLE_instanced_arrays\")},Qs.prototype.enableScissorTest=function(t){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\"),this.setScissorTest(t)},Qs.prototype.initMaterial=function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")},Qs.prototype.addPrePlugin=function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")},Qs.prototype.addPostPlugin=function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")},Qs.prototype.updateShadowMap=function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")},Qs.prototype.setFaceCulling=function(){console.warn(\"THREE.WebGLRenderer: .setFaceCulling() has been removed.\")},Qs.prototype.allocTextureUnit=function(){console.warn(\"THREE.WebGLRenderer: .allocTextureUnit() has been removed.\")},Qs.prototype.setTexture=function(){console.warn(\"THREE.WebGLRenderer: .setTexture() has been removed.\")},Qs.prototype.setTexture2D=function(){console.warn(\"THREE.WebGLRenderer: .setTexture2D() has been removed.\")},Qs.prototype.setTextureCube=function(){console.warn(\"THREE.WebGLRenderer: .setTextureCube() has been removed.\")},Qs.prototype.getActiveMipMapLevel=function(){return console.warn(\"THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().\"),this.getActiveMipmapLevel()},Object.defineProperties(Qs.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\"),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\"),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\")}},context:{get:function(){return console.warn(\"THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.\"),this.getContext()}},vr:{get:function(){return console.warn(\"THREE.WebGLRenderer: .vr has been renamed to .xr\"),this.xr}},gammaInput:{get:function(){return console.warn(\"THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.\"),!1},set:function(){console.warn(\"THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.\")}},gammaOutput:{get:function(){return console.warn(\"THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.\"),!1},set:function(t){console.warn(\"THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.\"),this.outputEncoding=!0===t?Y:X}},toneMappingWhitePoint:{get:function(){return console.warn(\"THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.\"),1},set:function(){console.warn(\"THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.\")}}}),Object.defineProperties(Gs.prototype,{cullFace:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\")}},renderReverseSided:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\")}},renderSingleSided:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\")}}}),Object.defineProperties(Pt.prototype,{wrapS:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy=t}},offset:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset=t}},repeat:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat=t}},format:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format=t}},type:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps},set:function(t){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps=t}}}),$c.prototype.load=function(t){console.warn(\"THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.\");const e=this;return(new kc).load(t,(function(t){e.setBuffer(t)})),this},rh.prototype.getData=function(){return console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\"),this.getFrequencyData()},ti.prototype.updateCubeMap=function(t,e){return console.warn(\"THREE.CubeCamera: .updateCubeMap() is now .update().\"),this.update(t,e)},ti.prototype.clear=function(t,e,n,i){return console.warn(\"THREE.CubeCamera: .clear() is now .renderTarget.clear().\"),this.renderTarget.clear(t,e,n,i)},Et.crossOrigin=void 0,Et.loadTexture=function(t,e,n,i){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");const r=new dc;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},Et.loadTextureCube=function(t,e,n,i){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");const r=new hc;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},Et.loadCompressedTexture=function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},Et.loadCompressedTextureCube=function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")};const tu={createMultiMaterialObject:function(){console.error(\"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\")},detach:function(){console.error(\"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\")},attach:function(){console.error(\"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\")}};\"undefined\"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent(\"register\",{detail:{revision:e}})),\"undefined\"!=typeof window&&(window.__THREE__?console.warn(\"WARNING: Multiple instances of Three.js being imported.\"):window.__THREE__=e),t.ACESFilmicToneMapping=4,t.AddEquation=n,t.AddOperation=2,t.AdditiveAnimationBlendMode=q,t.AdditiveBlending=2,t.AlphaFormat=1021,t.AlwaysDepth=1,t.AlwaysStencilFunc=519,t.AmbientLight=Lc,t.AmbientLightProbe=Wc,t.AnimationClip=ec,t.AnimationLoader=class extends ac{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new lc(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=ec.parse(t[n]);e.push(i)}return e}},t.AnimationMixer=xh,t.AnimationObjectGroup=vh,t.AnimationUtils=kl,t.ArcCurve=bo,t.ArrayCamera=js,t.ArrowHelper=class extends Fe{constructor(t=new zt(0,0,1),e=new zt(0,0,0),n=1,i=16776960,r=.2*n,s=.2*r){super(),this.type=\"ArrowHelper\",void 0===Jh&&(Jh=new En,Jh.setAttribute(\"position\",new vn([0,0,0,0,1,0],3)),Zh=new ho(0,.5,1,5,1),Zh.translate(0,-.5,0)),this.position.copy(e),this.line=new Xa(Jh,new Ga({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Wn(Zh,new sn({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Yh.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Yh,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}},t.Audio=$c,t.AudioAnalyser=rh,t.AudioContext=Gc,t.AudioListener=class extends Fe{constructor(){super(),this.type=\"AudioListener\",this.context=Gc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Xc}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Jc,Zc,Qc),Kc.set(0,0,-1).applyQuaternion(Zc),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Jc.x,t),e.positionY.linearRampToValueAtTime(Jc.y,t),e.positionZ.linearRampToValueAtTime(Jc.z,t),e.forwardX.linearRampToValueAtTime(Kc.x,t),e.forwardY.linearRampToValueAtTime(Kc.y,t),e.forwardZ.linearRampToValueAtTime(Kc.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(Jc.x,Jc.y,Jc.z),e.setOrientation(Kc.x,Kc.y,Kc.z,n.x,n.y,n.z)}},t.AudioLoader=kc,t.AxesHelper=Qh,t.AxisHelper=function(t){return console.warn(\"THREE.AxisHelper has been renamed to THREE.AxesHelper.\"),new Qh(t)},t.BackSide=1,t.BasicDepthPacking=3200,t.BasicShadowMap=0,t.BinaryTextureLoader=function(t){return console.warn(\"THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.\"),new uc(t)},t.Bone=Ca,t.BooleanKeyframeTrack=Yl,t.BoundingBoxHelper=function(t,e){return console.warn(\"THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.\"),new Xh(t,e)},t.Box2=Eh,t.Box3=Ot,t.Box3Helper=class extends Za{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new En;i.setIndex(new ln(n,1)),i.setAttribute(\"position\",new vn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new Ga({color:e,toneMapped:!1})),this.box=t,this.type=\"Box3Helper\",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}},t.BoxBufferGeometry=qn,t.BoxGeometry=qn,t.BoxHelper=Xh,t.BufferAttribute=ln,t.BufferGeometry=En,t.BufferGeometryLoader=zc,t.ByteType=1010,t.Cache=ic,t.Camera=Qn,t.CameraHelper=class extends Za{constructor(t){const e=new En,n=new Ga({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={},a=new rn(16755200),o=new rn(16711680),l=new rn(43775),c=new rn(16777215),h=new rn(3355443);function u(t,e,n){d(t,n),d(e,n)}function d(t,e){i.push(0,0,0),r.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(i.length/3-1)}u(\"n1\",\"n2\",a),u(\"n2\",\"n4\",a),u(\"n4\",\"n3\",a),u(\"n3\",\"n1\",a),u(\"f1\",\"f2\",a),u(\"f2\",\"f4\",a),u(\"f4\",\"f3\",a),u(\"f3\",\"f1\",a),u(\"n1\",\"f1\",a),u(\"n2\",\"f2\",a),u(\"n3\",\"f3\",a),u(\"n4\",\"f4\",a),u(\"p\",\"n1\",o),u(\"p\",\"n2\",o),u(\"p\",\"n3\",o),u(\"p\",\"n4\",o),u(\"u1\",\"u2\",l),u(\"u2\",\"u3\",l),u(\"u3\",\"u1\",l),u(\"c\",\"t\",c),u(\"p\",\"c\",h),u(\"cn1\",\"cn2\",h),u(\"cn3\",\"cn4\",h),u(\"cf1\",\"cf2\",h),u(\"cf3\",\"cf4\",h),e.setAttribute(\"position\",new vn(i,3)),e.setAttribute(\"color\",new vn(r,3)),super(e,n),this.type=\"CameraHelper\",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){const t=this.geometry,e=this.pointMap;Wh.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),jh(\"c\",e,t,Wh,0,0,-1),jh(\"t\",e,t,Wh,0,0,1),jh(\"n1\",e,t,Wh,-1,-1,-1),jh(\"n2\",e,t,Wh,1,-1,-1),jh(\"n3\",e,t,Wh,-1,1,-1),jh(\"n4\",e,t,Wh,1,1,-1),jh(\"f1\",e,t,Wh,-1,-1,1),jh(\"f2\",e,t,Wh,1,-1,1),jh(\"f3\",e,t,Wh,-1,1,1),jh(\"f4\",e,t,Wh,1,1,1),jh(\"u1\",e,t,Wh,.7,1.1,-1),jh(\"u2\",e,t,Wh,-.7,1.1,-1),jh(\"u3\",e,t,Wh,0,2,-1),jh(\"cf1\",e,t,Wh,-1,0,1),jh(\"cf2\",e,t,Wh,1,0,1),jh(\"cf3\",e,t,Wh,0,-1,1),jh(\"cf4\",e,t,Wh,0,1,1),jh(\"cn1\",e,t,Wh,-1,0,-1),jh(\"cn2\",e,t,Wh,1,0,-1),jh(\"cn3\",e,t,Wh,0,-1,-1),jh(\"cn4\",e,t,Wh,0,1,-1),t.getAttribute(\"position\").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},t.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been removed\")},t.CanvasTexture=oo,t.CatmullRomCurve3=Lo,t.CineonToneMapping=3,t.CircleBufferGeometry=co,t.CircleGeometry=co,t.ClampToEdgeWrapping=u,t.Clock=Xc,t.Color=rn,t.ColorKeyframeTrack=Jl,t.CompressedTexture=ao,t.CompressedTextureLoader=class extends ac{constructor(t){super(t)}load(t,e,n,i){const r=this,s=[],a=new ao,o=new lc(this.manager);o.setPath(this.path),o.setResponseType(\"arraybuffer\"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function c(c){o.load(t[c],(function(t){const n=r.parse(t,!0);s[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=g),a.image=s,a.format=n.format,a.needsUpdate=!0,e&&e(a))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)c(e);else o.load(t,(function(t){const n=r.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=g),a.format=n.format,a.needsUpdate=!0,e&&e(a)}),n,i);return a}},t.ConeBufferGeometry=uo,t.ConeGeometry=uo,t.CubeCamera=ti,t.CubeReflectionMapping=r,t.CubeRefractionMapping=s,t.CubeTexture=ei,t.CubeTextureLoader=hc,t.CubeUVReflectionMapping=l,t.CubeUVRefractionMapping=c,t.CubicBezierCurve=Io,t.CubicBezierCurve3=Do,t.CubicInterpolant=Wl,t.CullFaceBack=1,t.CullFaceFront=2,t.CullFaceFrontBack=3,t.CullFaceNone=0,t.Curve=_o,t.CurvePath=Ho,t.CustomBlending=5,t.CustomToneMapping=5,t.CylinderBufferGeometry=ho,t.CylinderGeometry=ho,t.Cylindrical=class{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}},t.DataTexture=Pa,t.DataTexture2DArray=Ki,t.DataTexture3D=rr,t.DataTextureLoader=uc,t.DataUtils=class{static toHalfFloat(t){t>65504&&(console.warn(\"THREE.DataUtils.toHalfFloat(): value exceeds 65504.\"),t=65504),Kh[0]=t;const e=$h[0];let n=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?n:r>142?(n|=31744,n|=(255==r?0:1)&&8388607&e,n):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1),n):(n|=r-112<<10|i>>1,n+=1&i,n)}},t.DecrementStencilOp=7683,t.DecrementWrapStencilOp=34056,t.DefaultLoadingManager=sc,t.DepthFormat=A,t.DepthStencilFormat=L,t.DepthTexture=lo,t.DirectionalLight=Ac,t.DirectionalLightHelper=class extends Fe{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let i=new En;i.setAttribute(\"position\",new vn([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new Ga({fog:!1,toneMapped:!1});this.lightPlane=new Xa(i,r),this.add(this.lightPlane),i=new En,i.setAttribute(\"position\",new vn([0,0,0,0,0,1],3)),this.targetLine=new Xa(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Hh.setFromMatrixPosition(this.light.matrixWorld),Gh.setFromMatrixPosition(this.light.target.matrixWorld),kh.subVectors(Gh,Hh),this.lightPlane.lookAt(Gh),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Gh),this.targetLine.scale.z=kh.length()}},t.DiscreteInterpolant=ql,t.DodecahedronBufferGeometry=mo,t.DodecahedronGeometry=mo,t.DoubleSide=2,t.DstAlphaFactor=206,t.DstColorFactor=208,t.DynamicBufferAttribute=function(t,e){return console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.\"),new ln(t,e).setUsage(nt)},t.DynamicCopyUsage=35050,t.DynamicDrawUsage=nt,t.DynamicReadUsage=35049,t.EdgesGeometry=xo,t.EdgesHelper=function(t,e){return console.warn(\"THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.\"),new Za(new xo(t.geometry),new Ga({color:void 0!==e?e:16777215}))},t.EllipseCurve=Mo,t.EqualDepth=4,t.EqualStencilFunc=514,t.EquirectangularReflectionMapping=a,t.EquirectangularRefractionMapping=o,t.Euler=be,t.EventDispatcher=rt,t.ExtrudeBufferGeometry=vl,t.ExtrudeGeometry=vl,t.FaceColors=1,t.FileLoader=lc,t.FlatShading=1,t.Float16BufferAttribute=gn,t.Float32Attribute=function(t,e){return console.warn(\"THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.\"),new vn(t,e)},t.Float32BufferAttribute=vn,t.Float64Attribute=function(t,e){return console.warn(\"THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.\"),new yn(t,e)},t.Float64BufferAttribute=yn,t.FloatType=b,t.Fog=ta,t.FogExp2=$s,t.Font=function(){console.error(\"THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js\")},t.FontLoader=function(){console.error(\"THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js\")},t.FrontSide=0,t.Frustum=ci,t.GLBufferAttribute=bh,t.GLSL1=\"100\",t.GLSL3=it,t.GammaEncoding=J,t.GreaterDepth=6,t.GreaterEqualDepth=5,t.GreaterEqualStencilFunc=518,t.GreaterStencilFunc=516,t.GridHelper=Uh,t.Group=qs,t.HalfFloatType=w,t.HemisphereLight=mc,t.HemisphereLightHelper=class extends Fe{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Ml(e);i.rotateY(.5*Math.PI),this.material=new sn({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute(\"position\"),s=new Float32Array(3*r.count);i.setAttribute(\"color\",new ln(s,3)),this.add(new Wn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute(\"color\");Fh.copy(this.light.color),Oh.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?Fh:Oh;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}t.lookAt(Bh.setFromMatrixPosition(this.light.matrixWorld).negate())}},t.HemisphereLightProbe=Vc,t.IcosahedronBufferGeometry=xl,t.IcosahedronGeometry=xl,t.ImageBitmapLoader=Uc,t.ImageLoader=cc,t.ImageUtils=Et,t.ImmediateRenderObject=function(){console.error(\"THREE.ImmediateRenderObject has been removed.\")},t.IncrementStencilOp=7682,t.IncrementWrapStencilOp=34055,t.InstancedBufferAttribute=za,t.InstancedBufferGeometry=Nc,t.InstancedInterleavedBuffer=Mh,t.InstancedMesh=Ha,t.Int16Attribute=function(t,e){return console.warn(\"THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.\"),new dn(t,e)},t.Int16BufferAttribute=dn,t.Int32Attribute=function(t,e){return console.warn(\"THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.\"),new mn(t,e)},t.Int32BufferAttribute=mn,t.Int8Attribute=function(t,e){return console.warn(\"THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.\"),new cn(t,e)},t.Int8BufferAttribute=cn,t.IntType=1013,t.InterleavedBuffer=na,t.InterleavedBufferAttribute=ra,t.Interpolant=Vl,t.InterpolateDiscrete=U,t.InterpolateLinear=H,t.InterpolateSmooth=G,t.InvertStencilOp=5386,t.JSONLoader=function(){console.error(\"THREE.JSONLoader has been removed.\")},t.KeepStencilOp=tt,t.KeyframeTrack=Xl,t.LOD=wa,t.LatheBufferGeometry=_l,t.LatheGeometry=_l,t.Layers=we,t.LensFlare=function(){console.error(\"THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js\")},t.LessDepth=2,t.LessEqualDepth=3,t.LessEqualStencilFunc=515,t.LessStencilFunc=513,t.Light=pc,t.LightProbe=Pc,t.Line=Xa,t.Line3=Rh,t.LineBasicMaterial=Ga,t.LineCurve=No,t.LineCurve3=zo,t.LineDashedMaterial=Hl,t.LineLoop=Qa,t.LinePieces=1,t.LineSegments=Za,t.LineStrip=0,t.LinearEncoding=X,t.LinearFilter=g,t.LinearInterpolant=jl,t.LinearMipMapLinearFilter=1008,t.LinearMipMapNearestFilter=1007,t.LinearMipmapLinearFilter=y,t.LinearMipmapNearestFilter=v,t.LinearToneMapping=1,t.Loader=ac,t.LoaderUtils=Dc,t.LoadingManager=rc,t.LogLuvEncoding=3003,t.LoopOnce=2200,t.LoopPingPong=2202,t.LoopRepeat=2201,t.LuminanceAlphaFormat=1025,t.LuminanceFormat=1024,t.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},t.Material=Ze,t.MaterialLoader=Ic,t.Math=vt,t.MathUtils=vt,t.Matrix3=xt,t.Matrix4=de,t.MaxEquation=104,t.Mesh=Wn,t.MeshBasicMaterial=sn,t.MeshDepthMaterial=Us,t.MeshDistanceMaterial=Hs,t.MeshFaceMaterial=function(t){return console.warn(\"THREE.MeshFaceMaterial has been removed. Use an Array instead.\"),t},t.MeshLambertMaterial=Ol,t.MeshMatcapMaterial=Ul,t.MeshNormalMaterial=Fl,t.MeshPhongMaterial=zl,t.MeshPhysicalMaterial=Nl,t.MeshStandardMaterial=Dl,t.MeshToonMaterial=Bl,t.MinEquation=103,t.MirroredRepeatWrapping=d,t.MixOperation=1,t.MultiMaterial=function(t=[]){return console.warn(\"THREE.MultiMaterial has been removed. Use an Array instead.\"),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t},t.MultiplyBlending=4,t.MultiplyOperation=0,t.NearestFilter=p,t.NearestMipMapLinearFilter=1005,t.NearestMipMapNearestFilter=1004,t.NearestMipmapLinearFilter=f,t.NearestMipmapNearestFilter=m,t.NeverDepth=0,t.NeverStencilFunc=512,t.NoBlending=0,t.NoColors=0,t.NoToneMapping=0,t.NormalAnimationBlendMode=j,t.NormalBlending=1,t.NotEqualDepth=7,t.NotEqualStencilFunc=517,t.NumberKeyframeTrack=Zl,t.Object3D=Fe,t.ObjectLoader=class extends ac{constructor(t){super(t)}load(t,e,n,i){const r=this,s=\"\"===this.path?Dc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new lc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){let s=null;try{s=JSON.parse(n)}catch(e){return void 0!==i&&i(e),void console.error(\"THREE:ObjectLoader: Can't parse \"+t+\".\",e.message)}const a=s.metadata;void 0!==a&&void 0!==a.type&&\"geometry\"!==a.type.toLowerCase()?r.parse(s,e):console.error(\"THREE.ObjectLoader: Can't load \"+t)}),n,i)}async loadAsync(t,e){const n=\"\"===this.path?Dc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const i=new lc(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const r=await i.loadAsync(t,e),s=JSON.parse(r),a=s.metadata;if(void 0===a||void 0===a.type||\"geometry\"===a.type.toLowerCase())throw new Error(\"THREE.ObjectLoader: Can't load \"+t);return await this.parseAsync(s)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),s=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,r,o,a,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),void 0!==e){let t=!1;for(const e in s)if(s[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),r=await this.parseImagesAsync(t.images),s=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,i,a,s,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new ko).fromJSON(t[n]);e[i.uuid]=i}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse((function(t){t.isBone&&(i[t.uuid]=t)})),void 0!==t)for(let e=0,r=t.length;e<r;e++){const r=(new Na).fromJSON(t[e],i);n[r.uuid]=r}return n}parseGeometries(t,e){const n={};if(void 0!==t){const i=new zc;for(let r=0,s=t.length;r<s;r++){let s;const a=t[r];switch(a.type){case\"BufferGeometry\":case\"InstancedBufferGeometry\":s=i.parse(a);break;case\"Geometry\":console.error(\"THREE.ObjectLoader: The legacy Geometry type is no longer supported.\");break;default:a.type in Pl?s=Pl[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type \"${a.type}\"`)}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),!0===s.isBufferGeometry&&void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},i={};if(void 0!==t){const r=new Ic;r.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];if(\"MultiMaterial\"===s.type){const t=[];for(let e=0;e<s.materials.length;e++){const i=s.materials[e];void 0===n[i.uuid]&&(n[i.uuid]=r.parse(i)),t.push(n[i.uuid])}i[s.uuid]=t}else void 0===n[s.uuid]&&(n[s.uuid]=r.parse(s)),i[s.uuid]=n[s.uuid]}}return i}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const i=t[n],r=ec.parse(i);e[r.uuid]=r}return e}parseImages(t,e){const n=this,i={};let r;function s(t){if(\"string\"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),r.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:bt(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new rc(e);r=new cc(n),r.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.url;if(Array.isArray(r)){i[n.uuid]=[];for(let t=0,e=r.length;t<e;t++){const e=s(r[t]);null!==e&&(e instanceof HTMLImageElement?i[n.uuid].push(e):i[n.uuid].push(new Pa(e.data,e.width,e.height)))}}else{const t=s(n.url);null!==t&&(i[n.uuid]=t)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function r(t){if(\"string\"==typeof t){const n=t,r=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(n)?n:e.resourcePath+n;return await i.loadAsync(r)}return t.data?{data:bt(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){i=new cc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],s=i.url;if(Array.isArray(s)){n[i.uuid]=[];for(let t=0,e=s.length;t<e;t++){const e=s[t],a=await r(e);null!==a&&(a instanceof HTMLImageElement?n[i.uuid].push(a):n[i.uuid].push(new Pa(a.data,a.width,a.height)))}}else{const t=await r(i.url);null!==t&&(n[i.uuid]=t)}}}return n}parseTextures(t,e){function n(t,e){return\"number\"==typeof t?t:(console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",t),e[t])}const i={};if(void 0!==t)for(let r=0,s=t.length;r<s;r++){const s=t[r];let a;void 0===s.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',s.uuid),void 0===e[s.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",s.image);const o=e[s.image];Array.isArray(o)?(a=new ei(o),6===o.length&&(a.needsUpdate=!0)):(a=o&&o.data?new Pa(o.data,o.width,o.height):new Lt(o),o&&(a.needsUpdate=!0)),a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),void 0!==s.mapping&&(a.mapping=n(s.mapping,Bc)),void 0!==s.offset&&a.offset.fromArray(s.offset),void 0!==s.repeat&&a.repeat.fromArray(s.repeat),void 0!==s.center&&a.center.fromArray(s.center),void 0!==s.rotation&&(a.rotation=s.rotation),void 0!==s.wrap&&(a.wrapS=n(s.wrap[0],Fc),a.wrapT=n(s.wrap[1],Fc)),void 0!==s.format&&(a.format=s.format),void 0!==s.type&&(a.type=s.type),void 0!==s.encoding&&(a.encoding=s.encoding),void 0!==s.minFilter&&(a.minFilter=n(s.minFilter,Oc)),void 0!==s.magFilter&&(a.magFilter=n(s.magFilter,Oc)),void 0!==s.anisotropy&&(a.anisotropy=s.anisotropy),void 0!==s.flipY&&(a.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(a.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(a.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(a.userData=s.userData),i[s.uuid]=a}return i}parseObject(t,e,n,i,r){let s,a,o;function l(t){return void 0===e[t]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];void 0===n[r]&&console.warn(\"THREE.ObjectLoader: Undefined material\",r),e.push(n[r])}return e}return void 0===n[t]&&console.warn(\"THREE.ObjectLoader: Undefined material\",t),n[t]}}function h(t){return void 0===i[t]&&console.warn(\"THREE.ObjectLoader: Undefined texture\",t),i[t]}switch(t.type){case\"Scene\":s=new ea,void 0!==t.background&&(Number.isInteger(t.background)?s.background=new rn(t.background):s.background=h(t.background)),void 0!==t.environment&&(s.environment=h(t.environment)),void 0!==t.fog&&(\"Fog\"===t.fog.type?s.fog=new ta(t.fog.color,t.fog.near,t.fog.far):\"FogExp2\"===t.fog.type&&(s.fog=new $s(t.fog.color,t.fog.density)));break;case\"PerspectiveCamera\":s=new Kn(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case\"OrthographicCamera\":s=new bi(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case\"AmbientLight\":s=new Lc(t.color,t.intensity);break;case\"DirectionalLight\":s=new Ac(t.color,t.intensity);break;case\"PointLight\":s=new Tc(t.color,t.intensity,t.distance,t.decay);break;case\"RectAreaLight\":s=new Rc(t.color,t.intensity,t.width,t.height);break;case\"SpotLight\":s=new _c(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case\"HemisphereLight\":s=new mc(t.color,t.groundColor,t.intensity);break;case\"LightProbe\":s=(new Pc).fromJSON(t);break;case\"SkinnedMesh\":a=l(t.geometry),o=c(t.material),s=new Ra(a,o),void 0!==t.bindMode&&(s.bindMode=t.bindMode),void 0!==t.bindMatrix&&s.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(s.skeleton=t.skeleton);break;case\"Mesh\":a=l(t.geometry),o=c(t.material),s=new Wn(a,o);break;case\"InstancedMesh\":a=l(t.geometry),o=c(t.material);const e=t.count,n=t.instanceMatrix,i=t.instanceColor;s=new Ha(a,o,e),s.instanceMatrix=new za(new Float32Array(n.array),16),void 0!==i&&(s.instanceColor=new za(new Float32Array(i.array),i.itemSize));break;case\"LOD\":s=new wa;break;case\"Line\":s=new Xa(l(t.geometry),c(t.material));break;case\"LineLoop\":s=new Qa(l(t.geometry),c(t.material));break;case\"LineSegments\":s=new Za(l(t.geometry),c(t.material));break;case\"PointCloud\":case\"Points\":s=new io(l(t.geometry),c(t.material));break;case\"Sprite\":s=new xa(c(t.material));break;case\"Group\":s=new qs;break;case\"Bone\":s=new Ca;break;default:s=new Fe}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(s.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(s.matrixAutoUpdate=t.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.quaternion&&s.quaternion.fromArray(t.quaternion),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(s.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(s.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(s.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&s.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(s.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.frustumCulled&&(s.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(s.renderOrder=t.renderOrder),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.layers&&(s.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)s.add(this.parseObject(a[t],e,n,i,r))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];s.animations.push(r[n])}}if(\"LOD\"===t.type){void 0!==t.autoUpdate&&(s.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=s.getObjectByProperty(\"uuid\",n.object);void 0!==i&&s.addLevel(i,n.distance)}}return s}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn(\"THREE.ObjectLoader: No skeleton found with UUID:\",t.skeleton):t.bind(n,t.bindMatrix)}}))}setTexturePath(t){return console.warn(\"THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().\"),this.setResourcePath(t)}},t.ObjectSpaceNormalMap=1,t.OctahedronBufferGeometry=Ml,t.OctahedronGeometry=Ml,t.OneFactor=201,t.OneMinusDstAlphaFactor=207,t.OneMinusDstColorFactor=209,t.OneMinusSrcAlphaFactor=205,t.OneMinusSrcColorFactor=203,t.OrthographicCamera=bi,t.PCFShadowMap=1,t.PCFSoftShadowMap=2,t.PMREMGenerator=Oi,t.ParametricGeometry=function(){return console.error(\"THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js\"),new En},t.Particle=function(t){return console.warn(\"THREE.Particle has been renamed to THREE.Sprite.\"),new xa(t)},t.ParticleBasicMaterial=function(t){return console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\"),new Ka(t)},t.ParticleSystem=function(t,e){return console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\"),new io(t,e)},t.ParticleSystemMaterial=function(t){return console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\"),new Ka(t)},t.Path=Go,t.PerspectiveCamera=Kn,t.Plane=ai,t.PlaneBufferGeometry=di,t.PlaneGeometry=di,t.PlaneHelper=class extends Xa{constructor(t,e=1,n=16776960){const i=n,r=new En;r.setAttribute(\"position\",new vn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new Ga({color:i,toneMapped:!1})),this.type=\"PlaneHelper\",this.plane=t,this.size=e;const s=new En;s.setAttribute(\"position\",new vn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),s.computeBoundingSphere(),this.add(new Wn(s,new sn({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?1:0,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}},t.PointCloud=function(t,e){return console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\"),new io(t,e)},t.PointCloudMaterial=function(t){return console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\"),new Ka(t)},t.PointLight=Tc,t.PointLightHelper=class extends Wn{constructor(t,e,n){super(new Sl(e,4,2),new sn({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type=\"PointLightHelper\",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},t.Points=io,t.PointsMaterial=Ka,t.PolarGridHelper=class extends Za{constructor(t=10,e=16,n=8,i=64,r=4473924,s=8947848){r=new rn(r),s=new rn(s);const a=[],o=[];for(let n=0;n<=e;n++){const i=n/e*(2*Math.PI),l=Math.sin(i)*t,c=Math.cos(i)*t;a.push(0,0,0),a.push(l,0,c);const h=1&n?r:s;o.push(h.r,h.g,h.b),o.push(h.r,h.g,h.b)}for(let e=0;e<=n;e++){const l=1&e?r:s,c=t-t/n*e;for(let t=0;t<i;t++){let e=t/i*(2*Math.PI),n=Math.sin(e)*c,r=Math.cos(e)*c;a.push(n,0,r),o.push(l.r,l.g,l.b),e=(t+1)/i*(2*Math.PI),n=Math.sin(e)*c,r=Math.cos(e)*c,a.push(n,0,r),o.push(l.r,l.g,l.b)}}const l=new En;l.setAttribute(\"position\",new vn(a,3)),l.setAttribute(\"color\",new vn(o,3));super(l,new Ga({vertexColors:!0,toneMapped:!1})),this.type=\"PolarGridHelper\"}},t.PolyhedronBufferGeometry=po,t.PolyhedronGeometry=po,t.PositionalAudio=class extends $c{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel=\"HRTF\",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(th,eh,nh),ih.set(0,0,1).applyQuaternion(eh);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(th.x,t),e.positionY.linearRampToValueAtTime(th.y,t),e.positionZ.linearRampToValueAtTime(th.z,t),e.orientationX.linearRampToValueAtTime(ih.x,t),e.orientationY.linearRampToValueAtTime(ih.y,t),e.orientationZ.linearRampToValueAtTime(ih.z,t)}else e.setPosition(th.x,th.y,th.z),e.setOrientation(ih.x,ih.y,ih.z)}},t.PropertyBinding=gh,t.PropertyMixer=sh,t.QuadraticBezierCurve=Bo,t.QuadraticBezierCurve3=Fo,t.Quaternion=Nt,t.QuaternionKeyframeTrack=Kl,t.QuaternionLinearInterpolant=Ql,t.REVISION=e,t.RGBADepthPacking=3201,t.RGBAFormat=E,t.RGBAIntegerFormat=1033,t.RGBA_ASTC_10x10_Format=37819,t.RGBA_ASTC_10x5_Format=37816,t.RGBA_ASTC_10x6_Format=37817,t.RGBA_ASTC_10x8_Format=37818,t.RGBA_ASTC_12x10_Format=37820,t.RGBA_ASTC_12x12_Format=37821,t.RGBA_ASTC_4x4_Format=37808,t.RGBA_ASTC_5x4_Format=37809,t.RGBA_ASTC_5x5_Format=37810,t.RGBA_ASTC_6x5_Format=37811,t.RGBA_ASTC_6x6_Format=37812,t.RGBA_ASTC_8x5_Format=37813,t.RGBA_ASTC_8x6_Format=37814,t.RGBA_ASTC_8x8_Format=37815,t.RGBA_BPTC_Format=36492,t.RGBA_ETC2_EAC_Format=O,t.RGBA_PVRTC_2BPPV1_Format=B,t.RGBA_PVRTC_4BPPV1_Format=z,t.RGBA_S3TC_DXT1_Format=C,t.RGBA_S3TC_DXT3_Format=P,t.RGBA_S3TC_DXT5_Format=I,t.RGBDEncoding=$,t.RGBEEncoding=Z,t.RGBEFormat=1023,t.RGBFormat=T,t.RGBIntegerFormat=1032,t.RGBM16Encoding=K,t.RGBM7Encoding=Q,t.RGB_ETC1_Format=36196,t.RGB_ETC2_Format=F,t.RGB_PVRTC_2BPPV1_Format=N,t.RGB_PVRTC_4BPPV1_Format=D,t.RGB_S3TC_DXT1_Format=R,t.RGFormat=1030,t.RGIntegerFormat=1031,t.RawShaderMaterial=wi,t.Ray=ue,t.Raycaster=class{constructor(t,e,n=0,i=1/0){this.ray=new ue(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new we,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error(\"THREE.Raycaster: Unsupported camera type: \"+e.type)}intersectObject(t,e=!0,n=[]){return Sh(t,this,n,e),n.sort(wh),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Sh(t[i],this,n,e);return n.sort(wh),n}},t.RectAreaLight=Rc,t.RedFormat=1028,t.RedIntegerFormat=1029,t.ReinhardToneMapping=2,t.RepeatWrapping=h,t.ReplaceStencilOp=7681,t.ReverseSubtractEquation=102,t.RingBufferGeometry=bl,t.RingGeometry=bl,t.SRGB8_ALPHA8_ASTC_10x10_Format=37851,t.SRGB8_ALPHA8_ASTC_10x5_Format=37848,t.SRGB8_ALPHA8_ASTC_10x6_Format=37849,t.SRGB8_ALPHA8_ASTC_10x8_Format=37850,t.SRGB8_ALPHA8_ASTC_12x10_Format=37852,t.SRGB8_ALPHA8_ASTC_12x12_Format=37853,t.SRGB8_ALPHA8_ASTC_4x4_Format=37840,t.SRGB8_ALPHA8_ASTC_5x4_Format=37841,t.SRGB8_ALPHA8_ASTC_5x5_Format=37842,t.SRGB8_ALPHA8_ASTC_6x5_Format=37843,t.SRGB8_ALPHA8_ASTC_6x6_Format=37844,t.SRGB8_ALPHA8_ASTC_8x5_Format=37845,t.SRGB8_ALPHA8_ASTC_8x6_Format=37846,t.SRGB8_ALPHA8_ASTC_8x8_Format=37847,t.Scene=ea,t.SceneUtils=tu,t.ShaderChunk=pi,t.ShaderLib=fi,t.ShaderMaterial=Zn,t.ShadowMaterial=Il,t.Shape=ko,t.ShapeBufferGeometry=wl,t.ShapeGeometry=wl,t.ShapePath=class{constructor(){this.type=\"ShapePath\",this.color=new rn,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Go,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new ko;r.curves=i.curves,e.push(r)}return e}function i(t,e){const n=e.length;let i=!1;for(let r=n-1,s=0;s<n;r=s++){let n=e[r],a=e[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],o=-o,a=e[r],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return i}const r=ml.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return n(s);let a,o,l;const c=[];if(1===s.length)return o=s[0],l=new ko,l.curves=o.curves,c.push(l),c;let h=!r(s[0].getPoints());h=t?!h:h;const u=[],d=[];let p,m,f=[],g=0;d[g]=void 0,f[g]=[];for(let e=0,n=s.length;e<n;e++)o=s[e],p=o.getPoints(),a=r(p),a=t?!a:a,a?(!h&&d[g]&&g++,d[g]={s:new ko,p:p},d[g].s.curves=o.curves,h&&g++,f[g]=[]):f[g].push({h:o,p:p[0]});if(!d[0])return n(s);if(d.length>1){let t=!1;const e=[];for(let t=0,e=d.length;t<e;t++)u[t]=[];for(let n=0,r=d.length;n<r;n++){const r=f[n];for(let s=0;s<r.length;s++){const a=r[s];let o=!0;for(let r=0;r<d.length;r++)i(a.p,d[r].p)&&(n!==r&&e.push({froms:n,tos:r,hole:s}),o?(o=!1,u[r].push(a)):t=!0);o&&u[n].push(a)}}e.length>0&&(t||(f=u))}for(let t=0,e=d.length;t<e;t++){l=d[t].s,c.push(l),m=f[t];for(let t=0,e=m.length;t<e;t++)l.holes.push(m[t].h)}return c}},t.ShapeUtils=ml,t.ShortType=1011,t.Skeleton=Na,t.SkeletonHelper=Nh,t.SkinnedMesh=Ra,t.SmoothShading=2,t.Sphere=ie,t.SphereBufferGeometry=Sl,t.SphereGeometry=Sl,t.Spherical=class{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ut(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},t.SphericalHarmonics3=Cc,t.SplineCurve=Oo,t.SpotLight=_c,t.SpotLightHelper=class extends Fe{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new En,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const r=t/n*Math.PI*2,s=e/n*Math.PI*2;i.push(Math.cos(r),Math.sin(r),1,Math.cos(s),Math.sin(s),1)}n.setAttribute(\"position\",new vn(i,3));const r=new Ga({fog:!1,toneMapped:!1});this.cone=new Za(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Ch.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ch),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},t.Sprite=xa,t.SpriteMaterial=sa,t.SrcAlphaFactor=204,t.SrcAlphaSaturateFactor=210,t.SrcColorFactor=202,t.StaticCopyUsage=35046,t.StaticDrawUsage=et,t.StaticReadUsage=35045,t.StereoCamera=class{constructor(){this.type=\"StereoCamera\",this.aspect=1,this.eyeSep=.064,this.cameraL=new Kn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Kn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),i=e.eyeSep/2,r=i*e.near/e.focus,s=e.near*Math.tan(at*e.fov*.5)/e.zoom;let a,o;qc.elements[12]=-i,jc.elements[12]=i,a=-s*e.aspect+r,o=s*e.aspect+r,n.elements[0]=2*e.near/(o-a),n.elements[8]=(o+a)/(o-a),this.cameraL.projectionMatrix.copy(n),a=-s*e.aspect-r,o=s*e.aspect-r,n.elements[0]=2*e.near/(o-a),n.elements[8]=(o+a)/(o-a),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(qc),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(jc)}},t.StreamCopyUsage=35042,t.StreamDrawUsage=35040,t.StreamReadUsage=35041,t.StringKeyframeTrack=$l,t.SubtractEquation=101,t.SubtractiveBlending=3,t.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},t.TangentSpaceNormalMap=0,t.TetrahedronBufferGeometry=Tl,t.TetrahedronGeometry=Tl,t.TextGeometry=function(){return console.error(\"THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js\"),new En},t.Texture=Lt,t.TextureLoader=dc,t.TorusBufferGeometry=El,t.TorusGeometry=El,t.TorusKnotBufferGeometry=Al,t.TorusKnotGeometry=Al,t.Triangle=Ye,t.TriangleFanDrawMode=2,t.TriangleStripDrawMode=1,t.TrianglesDrawMode=0,t.TubeBufferGeometry=Ll,t.TubeGeometry=Ll,t.UVMapping=i,t.Uint16Attribute=function(t,e){return console.warn(\"THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.\"),new pn(t,e)},t.Uint16BufferAttribute=pn,t.Uint32Attribute=function(t,e){return console.warn(\"THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.\"),new fn(t,e)},t.Uint32BufferAttribute=fn,t.Uint8Attribute=function(t,e){return console.warn(\"THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.\"),new hn(t,e)},t.Uint8BufferAttribute=hn,t.Uint8ClampedAttribute=function(t,e){return console.warn(\"THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.\"),new un(t,e)},t.Uint8ClampedBufferAttribute=un,t.Uniform=_h,t.UniformsLib=mi,t.UniformsUtils=Jn,t.UnsignedByteType=x,t.UnsignedInt248Type=S,t.UnsignedIntType=M,t.UnsignedShort4444Type=1017,t.UnsignedShort5551Type=1018,t.UnsignedShort565Type=1019,t.UnsignedShortType=_,t.VSMShadowMap=3,t.Vector2=yt,t.Vector3=zt,t.Vector4=Ct,t.VectorKeyframeTrack=tc,t.Vertex=function(t,e,n){return console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\"),new zt(t,e,n)},t.VertexColors=2,t.VideoTexture=so,t.WebGL1Renderer=Ks,t.WebGLCubeRenderTarget=ni,t.WebGLMultipleRenderTargets=It,t.WebGLMultisampleRenderTarget=Dt,t.WebGLRenderTarget=Pt,t.WebGLRenderTargetCube=function(t,e,n){return console.warn(\"THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).\"),new ni(t,n)},t.WebGLRenderer=Qs,t.WebGLUtils=Ws,t.WireframeGeometry=Rl,t.WireframeHelper=function(t,e){return console.warn(\"THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.\"),new Za(new Rl(t.geometry),new Ga({color:void 0!==e?e:16777215}))},t.WrapAroundEnding=W,t.XHRLoader=function(t){return console.warn(\"THREE.XHRLoader has been renamed to THREE.FileLoader.\"),new lc(t)},t.ZeroCurvatureEnding=k,t.ZeroFactor=200,t.ZeroSlopeEnding=V,t.ZeroStencilOp=0,t.sRGBEncoding=Y,Object.defineProperty(t,\"__esModule\",{value:!0})}));"],"names":["t","e","exports","module","define","amd","globalThis","self","THREE","Tt","aa","Hc","Jh","Zh","it","rt","addEventListener","_listeners","n","indexOf","push","hasEventListener","removeEventListener","splice","dispatchEvent","type","target","slice","i","length","call","st","at","Math","PI","ot","lt","toString","ct","crypto","ht","randomUUID","toUpperCase","random","ut","max","min","dt","pt","mt","ft","pow","ceil","log","LN2","gt","floor","vt","Object","freeze","__proto__","DEG2RAD","RAD2DEG","generateUUID","clamp","euclideanModulo","mapLinear","r","inverseLerp","lerp","damp","exp","pingpong","abs","smoothstep","smootherstep","randInt","randFloat","randFloatSpread","seededRandom","degToRad","radToDeg","isPowerOfTwo","ceilPowerOfTwo","floorPowerOfTwo","setQuaternionFromProperEuler","s","cos","a","sin","o","l","c","h","u","d","p","m","set","console","warn","yt","constructor","x","y","width","height","setScalar","setX","setY","setComponent","Error","getComponent","clone","copy","add","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","manhattanDistanceTo","setLength","lerpVectors","equals","fromArray","toArray","fromBufferAttribute","getX","getY","rotateAround","Symbol","iterator","prototype","isVector2","xt","arguments","error","identity","extractBasis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","f","g","v","_","M","b","determinant","invert","transpose","getNormalMatrix","transposeIntoArray","setUvTransform","scale","rotate","translate","_t","isMatrix3","Mt","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","bt","wt","document","createElementNS","St","imul","charCodeAt","Et","getDataURL","test","src","HTMLCanvasElement","getContext","ImageData","putImageData","drawImage","toDataURL","At","Lt","DEFAULT_IMAGE","DEFAULT_MAPPING","defineProperty","value","uuid","name","image","mipmaps","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","format","internalFormat","offset","repeat","center","rotation","matrixAutoUpdate","matrix","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","encoding","userData","version","onUpdate","isRenderTargetTexture","updateMatrix","JSON","parse","stringify","toJSON","textures","metadata","generator","wrap","images","Array","isArray","isDataTexture","Rt","url","dispose","transformUv","needsUpdate","HTMLImageElement","ImageBitmap","data","isTexture","Ct","z","w","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","getZ","getW","isVector4","Pt","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","setTexture","setSize","isWebGLRenderTarget","It","isWebGLMultipleRenderTargets","Dt","samples","isWebGLMultisampleRenderTarget","Nt","_x","_y","_z","_w","slerp","slerpQuaternions","slerpFlat","Number","EPSILON","multiplyQuaternionsFlat","_onChangeCallback","setFromEuler","isEuler","_order","setFromAxisAngle","setFromRotationMatrix","setFromUnitVectors","angleTo","rotateTowards","conjugate","multiplyQuaternions","_onChange","isQuaternion","zt","multiplyVectors","applyEuler","applyQuaternion","Ft","applyAxisAngle","applyNormalMatrix","project","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","projectOnVector","projectOnPlane","Bt","reflect","setFromSpherical","setFromSphericalCoords","radius","phi","theta","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","randomDirection","isVector3","Ot","setFromArray","setFromBufferAttribute","count","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","Ht","setFromObject","expandByObject","isEmpty","getCenter","getSize","expandByVector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","Gt","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","normal","constant","intersectsTriangle","Yt","Jt","kt","Vt","Wt","jt","qt","Xt","Kt","Zt","distanceToPoint","getBoundingSphere","intersect","Ut","isBox3","Qt","$t","te","ee","ne","ie","getBoundingBox","getMaxScaleOnAxis","re","se","ae","oe","le","ce","he","ue","origin","direction","lookAt","recast","closestPointToPoint","distanceSqToPoint","distanceSqToSegment","intersectSphere","distanceToPlane","intersectPlane","intersectBox","intersectTriangle","de","copyPosition","setFromMatrix3","makeBasis","extractRotation","pe","makeRotationFromEuler","order","makeRotationFromQuaternion","compose","fe","ge","xe","ve","ye","S","T","E","A","L","R","C","P","I","D","N","B","setPosition","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","decompose","me","makePerspective","makeOrthographic","isMatrix4","_e","Me","be","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","toVector3","RotationOrders","we","mask","enable","enableAll","toggle","disable","disableAll","Se","Te","Ee","Ae","Le","Re","Ce","Pe","Ie","De","Ne","ze","Be","Fe","parent","up","DefaultUp","defineProperties","position","configurable","enumerable","quaternion","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","layers","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","isObject3D","remove","removeFromParent","clear","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","geometries","materials","shapes","skeletons","isInstancedMesh","instanceMatrix","instanceColor","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","object","Oe","Ue","He","Ge","ke","Ve","We","je","qe","Xe","Ye","getNormal","getBarycoord","getUV","isFrontFacing","setFromPointsAndIndices","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","Je","Ze","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","flatShading","color","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","size","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","isMaterial","Qe","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Ke","$e","tn","en","nn","rn","setRGB","setHex","setStyle","setHSL","parseFloat","exec","parseInt","charAt","setColorName","toLowerCase","copyGammaToLinear","copyLinearToGamma","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHexString","getHSL","getStyle","offsetHSL","addColors","lerpColors","lerpHSL","normalized","NAMES","sn","isMeshBasicMaterial","an","on","ln","TypeError","array","itemSize","usage","updateRange","onUploadCallback","setUsage","copyAt","copyArray","copyColorsArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isBufferAttribute","cn","hn","un","dn","pn","mn","fn","gn","isFloat16BufferAttribute","vn","yn","xn","_n","Mn","bn","wn","Sn","Tn","En","index","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","isGLBufferAttribute","isNaN","computeTangents","uv","isFinite","computeVertexNormals","normalizeNormals","merge","isBufferGeometry","toNonIndexed","isInterleavedBufferAttribute","stride","keys","assign","An","Ln","Rn","Cn","Pn","In","Dn","Nn","zn","Bn","Fn","On","Un","Hn","Gn","kn","Vn","Wn","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","String","morphTargets","ray","uv2","jn","faceIndex","face","isGeometry","boneTransform","near","far","distance","point","qn","widthSegments","heightSegments","depthSegments","fromJSON","Xn","Yn","Jn","Zn","defines","uniforms","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","Qn","Kn","fov","zoom","focus","aspect","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","enabled","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","isPerspectiveCamera","ti","isWebGLCubeRenderTarget","renderTarget","update","xr","getRenderTarget","setRenderTarget","render","ei","isCubeTexture","ni","isInteger","_needsFlipEnvMap","fromEquirectangularTexture","tEquirect","ii","ri","si","ai","setComponents","setFromNormalAndCoplanarPoint","distanceToSphere","projectPoint","intersectLine","delta","intersectsLine","end","coplanarPoint","isPlane","oi","li","ci","planes","setFromProjectionMatrix","intersectsObject","intersectsSprite","hi","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","ui","isWebGL2","WeakMap","get","deleteBuffer","buffer","delete","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","BYTES_PER_ELEMENT","bufferSubData","subarray","di","pi","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","mi","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","points","sprite","fi","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","gi","buffers","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","vi","bindVertexArray","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","program","newAttributes","enabledAttributes","attributeDivisors","enableVertexAttribArray","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","setup","id","createVertexArray","createVertexArrayOES","attribute","attributesNum","isInstancedBufferGeometry","getAttributes","location","isInstancedInterleavedBuffer","locationSize","meshPerAttribute","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","resetDefaultState","releaseStatesOfGeometry","releaseStatesOfProgram","initAttributes","enableAttribute","disableUnusedAttributes","yi","setMode","drawArrays","renderInstances","xi","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","has","logarithmicDepthBuffer","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","_i","numPlanes","numIntersection","uniform","init","beginShadows","endShadows","setState","clippingState","Mi","physical","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","bi","left","right","top","bottom","isOrthographicCamera","wi","isRawShaderMaterial","Ti","Ei","Li","Ri","_lodPlanes","Ci","_sizeLods","Pi","_sigmas","Ii","Hi","Di","Ni","zi","Bi","Fi","Oi","_renderer","_pingPongRenderTarget","_blurMaterial","weights","latitudinal","dTheta","mipInt","poleAxis","inputEncoding","outputEncoding","ji","qi","_equirectShader","_cubemapShader","_compileMaterial","fromScene","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","_fromTexture","fromCubemap","compileCubemapShader","Wi","compileEquirectangularShader","Vi","ki","_textureToCubeUV","Ui","J","Gi","compile","_setEncoding","capabilities","texelSize","_halfBlur","Si","Xi","Yi","getExtension","Ji","memory","getWireframeAttribute","Zi","drawElements","Qi","frame","calls","triangles","lines","programs","autoReset","Ki","wrapR","$i","tr","er","nr","getUniforms","setValue","sort","MAX_SAFE_INTEGER","ir","isDataTexture2DArray","rr","isDataTexture3D","sr","ar","or","lr","cr","hr","ur","dr","pr","mr","fr","gr","vr","allocateTextureUnit","yr","cache","uniform1f","addr","uniform2f","uniform2fv","_r","uniform3f","uniform3fv","Mr","uniform4f","uniform4fv","br","uniformMatrix2fv","wr","uniformMatrix3fv","Sr","uniformMatrix4fv","Tr","uniform1i","Er","uniform2iv","Ar","uniform3iv","Lr","uniform4iv","Rr","uniform1ui","Cr","uniform2uiv","Pr","uniform3uiv","Ir","uniform4uiv","Dr","safeSetTexture2D","Nr","setTexture3D","zr","safeSetTextureCube","Br","setTexture2DArray","Fr","uniform1fv","Or","Ur","Hr","Gr","kr","Vr","Wr","uniform1iv","jr","qr","Xr","Yr","uniform1uiv","Jr","Zr","Qr","Kr","$r","ts","es","ns","seq","updateCache","is","rs","as","getProgramParameter","getActiveUniform","ss","lastIndex","getUniformLocation","os","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","ls","cs","hs","getShaderParameter","getShaderInfoLog","trim","split","join","getShaderSource","us","ms","fs","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","gs","numClippingPlanes","numClipIntersection","vs","ys","xs","_s","Ms","bs","Ss","ws","Ts","Es","shadowMapType","envMapMode","gammaFactor","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","createProgram","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","morphNormals","morphTargetsCount","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","ps","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","specularColorMapEncoding","sheenColorMapEncoding","lightMapEncoding","ds","depthPacking","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","getProgramInfoLog","getError","diagnostics","runnable","programLog","prefix","deleteShader","getActiveAttrib","getAttribLocation","destroy","deleteProgram","cacheKey","usedTimes","As","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","X","getParameters","isMeshStandardMaterial","bones","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","releaseProgram","pop","Ls","Rs","groupOrder","Cs","Ps","group","opaque","transmissive","finish","Is","Ds","halfWidth","halfHeight","Ns","zs","Bs","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","camera","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","state","Fs","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","Os","Us","isMeshDepthMaterial","Hs","Gs","VSM_SAMPLES","shadow_pass","resolution","HORIZONTAL_PASS","customDistanceMaterial","customDepthMaterial","localClippingEnabled","isMeshDistanceMaterial","autoUpdate","getActiveCubeFace","getActiveMipmapLevel","setBlending","setTest","setScissorTest","getFrameExtents","isPointLightShadow","mapPass","getViewportCount","getViewport","updateMatrices","getFrustum","renderBufferDirect","blurSamples","ks","setMask","colorMask","setLocked","clearColor","O","U","depthMask","setFunc","clearDepth","stencilMask","setOp","stencilOp","clearStencil","createTexture","bindTexture","texParameteri","texImage2D","F","V","W","k","H","MIN_EXT","MAX_EXT","G","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","j","q","activeTexture","stencil","bindFramebuffer","bindXRFramebuffer","useProgram","setMaterial","setFlipSided","setCullFace","setLineWidth","lineWidth","setPolygonOffset","unbindTexture","compressedTexImage2D","apply","texImage3D","canvas","Vs","OffscreenCanvas","generateMipmap","__maxMipLevel","log2","__webglInit","deleteTexture","__webglTexture","isVideoTexture","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","__version","complete","Z","pixelStorei","isCompressedTexture","convert","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","isDepthTexture","Q","framebufferTexture2D","K","bindRenderbuffer","tt","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","et","nt","resetTextureUnits","setTexture2D","setTextureCube","setupRenderTarget","createFramebuffer","createRenderbuffer","$","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","Ws","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","js","cameras","isArrayCamera","qs","isGroup","Xs","Ys","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","session","visibilityState","getPose","targetRaySpace","transform","hand","values","getJointPose","jointName","jointRadius","handedness","gripSpace","Js","Map","inputSource","forEach","isPresenting","inputSources","removed","added","cameraAutoUpdate","getController","getControllerGrip","getHand","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","getBaseLayer","getBinding","getFrame","setSession","getContextAttributes","xrCompatible","makeXRCompatible","renderState","antialias","alpha","framebufferScaleFactor","XRWebGLLayer","updateRenderState","baseLayer","WebGLRenderingContext","colorFormat","depthFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","requestReferenceSpace","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","setFoveation","getViewerPose","views","framebuffer","getViewSubImage","depthStencilTexture","colorTexture","invalidateFramebuffer","Zs","refreshFogUniforms","isFog","density","refreshMaterialUniforms","isMeshLambertMaterial","isMeshToonMaterial","isMeshPhongMaterial","isMeshPhysicalMaterial","isMeshMatcapMaterial","isMeshNormalMaterial","isLineBasicMaterial","isLineDashedMaterial","isPointsMaterial","isSpriteMaterial","isShadowMaterial","Qs","style","display","context","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","domElement","sortObjects","toneMappingExposure","Y","overrideMaterial","isWebGL1Renderer","shift","rangeMin","rangeMax","message","renderLists","info","preventDefault","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","setOpaqueSort","setTransparentSort","needsLights","lightsStateVersion","currentProgram","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","uniformsList","isLineSegments","isLineLoop","isSprite","instanceCount","window","isLOD","drawBuffersWEBGL","framebufferTextureLayer","readRenderTargetPixels","checkFramebufferStatus","readPixels","copyFramebufferToTexture","copyTexImage2D","copyTextureToTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","texSubImage3D","compressedTexSubImage3D","initTexture","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","isWebGLRenderer","Ks","$s","ta","ea","na","arrayBuffers","_uuid","isInterleavedBuffer","ia","ra","interleavedBuffers","sa","oa","la","ca","ha","ua","da","pa","ma","fa","ga","va","ya","xa","_a","Ma","ba","wa","_currentLevel","levels","addLevel","getCurrentLevel","getObjectForDistance","Sa","Ta","Ea","Aa","La","Ra","bindMatrixInverse","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","boneInverses","Ca","isBone","Pa","Ia","Da","Na","boneMatrices","getBoneByName","za","Ba","Fa","Oa","Ua","Ha","getColorAt","getMatrixAt","instanceId","setColorAt","setMatrixAt","Ga","linecap","linejoin","ka","Va","Wa","ja","qa","Xa","computeLineDistances","params","Line","threshold","Ya","Ja","Za","Qa","Ka","$a","to","eo","no","io","Points","ro","distanceToRay","so","requestVideoFrameCallback","readyState","HAVE_CURRENT_DATA","ao","oo","isCanvasTexture","lo","co","segments","thetaStart","thetaLength","ho","radiusTop","radiusBottom","radialSegments","openEnded","uo","po","vertices","indices","details","mo","fo","go","vo","yo","xo","thresholdAngle","index0","index1","_o","arcLengthDivisions","getPoint","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","getLength","getLengths","cacheArcLengths","updateArcLengths","getTangent","getTangentAt","computeFrenetFrames","MAX_VALUE","tangents","normals","binormals","Mo","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","bo","wo","initCatmullRom","initNonuniformCatmullRom","calc","isArcCurve","So","To","Eo","Ao","Lo","closed","curveType","tension","Ro","Co","Po","isCatmullRomCurve3","Io","v0","v1","v2","v3","isCubicBezierCurve","Do","isCubicBezierCurve3","No","isLineCurve","zo","isLineCurve3","Bo","isQuadraticBezierCurve","Fo","isQuadraticBezierCurve3","Oo","isSplineCurve","Uo","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","Ho","curves","autoClose","closePath","getCurveLengths","cacheLengths","Go","currentPoint","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","splineThru","concat","arc","absarc","absellipse","ellipse","ko","holes","getPointsHoles","extractPoints","shape","Vo","Wo","next","prev","steiner","el","Qo","Ko","nl","cl","rl","hl","jo","qo","tl","prevZ","nextZ","Yo","Xo","dl","Jo","sl","al","Zo","ul","ll","ol","pl","ml","area","isClockWise","triangulateShape","fl","gl","vl","options","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","UVGenerator","yl","amount","reverse","sign","generateSideWallUV","generateTopUV","xl","_l","phiStart","phiLength","Ml","bl","innerRadius","outerRadius","thetaSegments","phiSegments","wl","Sl","Tl","El","tube","tubularSegments","Al","Ll","path","Rl","Set","Cl","Pl","BoxGeometry","BoxBufferGeometry","CircleGeometry","CircleBufferGeometry","ConeGeometry","ConeBufferGeometry","CylinderGeometry","CylinderBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","EdgesGeometry","ExtrudeGeometry","ExtrudeBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","LatheGeometry","LatheBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","PlaneGeometry","PlaneBufferGeometry","PolyhedronGeometry","PolyhedronBufferGeometry","RingGeometry","RingBufferGeometry","ShapeGeometry","ShapeBufferGeometry","SphereGeometry","SphereBufferGeometry","TetrahedronGeometry","TetrahedronBufferGeometry","TorusGeometry","TorusBufferGeometry","TorusKnotGeometry","TorusKnotBufferGeometry","TubeGeometry","TubeBufferGeometry","WireframeGeometry","Il","Dl","STANDARD","Nl","PHYSICAL","_sheen","_clearcoat","_transmission","zl","Bl","TOON","Fl","Ol","Ul","MATCAP","Hl","Gl","RawShaderMaterial","ShaderMaterial","Material","kl","arraySlice","isTypedArray","convertArray","ArrayBuffer","isView","DataView","getKeyframeOrder","sortedArray","flattenJSON","time","subclip","tracks","getValueSize","times","resetDuration","makeClipAdditive","ValueTypeName","find","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","evaluate","resultBuffer","blendMode","Vl","parameterPositions","_cachedIndex","sampleValues","valueSize","settings","DefaultSettings_","afterEnd_","beforeStart_","intervalChanged_","interpolate_","getSettings_","copySampleValue_","Wl","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","jl","ql","Xl","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","getInterpolation","interpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","validate","optimize","Yl","Jl","Zl","Ql","Kl","$l","tc","ec","duration","fps","nc","CreateFromMorphTargetSequence","findByName","CreateClipsFromMorphTargetSequences","match","parseAnimation","hierarchy","morphTarget","ic","files","rc","onStart","onLoad","onProgress","onError","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","removeHandler","getHandler","global","sc","ac","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","oc","lc","setTimeout","Request","headers","Headers","credentials","fetch","then","status","body","getReader","ReadableStream","read","done","close","byteLength","ProgressEvent","lengthComputable","loaded","total","enqueue","statusText","Response","responseType","arrayBuffer","blob","text","DOMParser","parseFromString","mimeType","json","catch","setResponseType","setMimeType","cc","substr","hc","uc","mipmapCount","dc","pc","mc","fc","gc","vc","yc","_frustum","_frameExtents","_viewportCount","_viewports","xc","isSpotLightShadow","_c","power","Mc","bc","wc","Sc","_cubeDirections","_cubeUps","Tc","Ec","isDirectionalLightShadow","Ac","Lc","Rc","Cc","zero","getAt","getIrradianceAt","addScaledSH","getBasisAt","isSphericalHarmonics3","Pc","Ic","shading","setTextures","Dc","decodeText","TextDecoder","decode","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","Nc","zc","drawcalls","offsets","Bc","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","Fc","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","Oc","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","Uc","createImageBitmap","setOptions","colorSpaceConversion","isImageBitmapLoader","Gc","AudioContext","webkitAudioContext","kc","decodeAudioData","Vc","isHemisphereLightProbe","Wc","isAmbientLightProbe","jc","qc","Xc","autoStart","startTime","oldTime","elapsedTime","running","Yc","getElapsedTime","getDelta","performance","Date","now","Jc","Zc","Qc","Kc","$c","listener","gain","createGain","connect","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","source","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","setMediaElementSource","createMediaElementSource","setMediaStreamSource","createMediaStreamSource","setBuffer","play","currentTime","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","setTargetAtTime","getDetune","getFilter","setFilter","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","th","eh","nh","ih","rh","analyser","createAnalyser","fftSize","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","binding","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accumulateAdditive","saveOriginalState","getValue","restoreOriginalState","oh","RegExp","lh","ch","ah","hh","uh","dh","ph","mh","fh","gh","parsedPath","parseTrackName","node","findNode","nodeName","rootNode","_getValue_unbound","_setValue_unbound","create","isAnimationObjectGroup","Composite","sanitizeNodeName","objectName","objectIndex","propertyName","propertyIndex","substring","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_targetGroup","_bindings","subscribe_","nCachedObjects_","vh","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","uncache","unsubscribe_","yh","_mixer","_clip","_localRoot","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","timeScale","_effectiveTimeScale","weight","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","warp","crossFadeTo","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","_lendControlInterpolant","getMixer","getClip","getRoot","_root","_update","_updateWeight","_updateTimeScale","_updateTime","_setEndings","action","loopDelta","xh","_initMemoryManager","_accuIndex","_bindAction","_bindingsByRootAndName","_addInactiveBinding","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","bindings","controlInterpolants","actionByRoot","_removeInactiveAction","_removeInactiveBindingsForAction","_removeInactiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","clipAction","existingAction","stopAllAction","setTime","uncacheClip","uncacheRoot","uncacheAction","_h","Mh","bh","setType","setItemSize","setCount","wh","Sh","Th","Eh","isBox2","Ah","Lh","Rh","distanceSq","closestPointToPointParameter","Ch","Ph","Ih","Dh","Nh","zh","isSkeletonHelper","root","Bh","Fh","Oh","Uh","Hh","Gh","kh","Vh","Wh","jh","qh","Xh","Yh","Qh","setColors","Kh","$h","fromPoints","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","inverse","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","plane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","addShape","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","getActiveMipMapLevel","shadowMapCullFace","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","getData","updateCubeMap","loadTexture","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","__THREE__","ACESFilmicToneMapping","AddEquation","AddOperation","AdditiveAnimationBlendMode","AdditiveBlending","AlphaFormat","AlwaysDepth","AlwaysStencilFunc","AmbientLight","AmbientLightProbe","AnimationClip","AnimationLoader","AnimationMixer","AnimationObjectGroup","AnimationUtils","ArrayCamera","ArrowHelper","line","cone","setDirection","setColor","Audio","AudioAnalyser","AudioListener","destination","timeDelta","_clock","removeFilter","getMasterVolume","setMasterVolume","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","AudioLoader","AxesHelper","AxisHelper","BackSide","BasicDepthPacking","BasicShadowMap","BinaryTextureLoader","Bone","BooleanKeyframeTrack","BoundingBoxHelper","Box2","Box3","Box3Helper","box","BoxHelper","BufferAttribute","BufferGeometry","BufferGeometryLoader","ByteType","Cache","Camera","CameraHelper","pointMap","CanvasRenderer","CanvasTexture","CineonToneMapping","Clock","Color","ColorKeyframeTrack","CompressedTexture","CompressedTextureLoader","isCubemap","CubeCamera","CubeTexture","CubeTextureLoader","CubicInterpolant","CullFaceBack","CullFaceFront","CullFaceFrontBack","CullFaceNone","Curve","CurvePath","CustomBlending","CustomToneMapping","Cylindrical","setFromCartesianCoords","DataTexture","DataTexture2DArray","DataTexture3D","DataTextureLoader","DataUtils","toHalfFloat","DecrementStencilOp","DecrementWrapStencilOp","DefaultLoadingManager","DepthFormat","DepthStencilFormat","DepthTexture","DirectionalLight","DirectionalLightHelper","light","lightPlane","targetLine","DiscreteInterpolant","DoubleSide","DstAlphaFactor","DstColorFactor","DynamicBufferAttribute","DynamicCopyUsage","DynamicDrawUsage","DynamicReadUsage","EdgesHelper","EqualDepth","EqualStencilFunc","Euler","EventDispatcher","FaceColors","FileLoader","FlatShading","Float16BufferAttribute","Float32Attribute","Float32BufferAttribute","Float64Attribute","Float64BufferAttribute","FloatType","Fog","FogExp2","Font","FontLoader","FrontSide","Frustum","GLBufferAttribute","GLSL1","GLSL3","GammaEncoding","GreaterDepth","GreaterEqualDepth","GreaterEqualStencilFunc","GreaterStencilFunc","GridHelper","Group","HalfFloatType","HemisphereLight","HemisphereLightHelper","HemisphereLightProbe","ImageBitmapLoader","ImageLoader","ImageUtils","ImmediateRenderObject","IncrementStencilOp","IncrementWrapStencilOp","InstancedBufferAttribute","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedMesh","Int16Attribute","Int16BufferAttribute","Int32Attribute","Int32BufferAttribute","Int8Attribute","Int8BufferAttribute","IntType","InterleavedBuffer","InterleavedBufferAttribute","Interpolant","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","InvertStencilOp","JSONLoader","KeepStencilOp","KeyframeTrack","LOD","Layers","LensFlare","LessDepth","LessEqualDepth","LessEqualStencilFunc","LessStencilFunc","Light","LightProbe","Line3","LineLoop","LinePieces","LineSegments","LineStrip","LinearEncoding","LinearInterpolant","LinearMipMapLinearFilter","LinearMipMapNearestFilter","LinearToneMapping","Loader","LoaderUtils","LoadingManager","LogLuvEncoding","LoopOnce","LoopPingPong","LoopRepeat","LuminanceAlphaFormat","LuminanceFormat","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","MaterialLoader","MathUtils","Matrix3","Matrix4","MaxEquation","Mesh","MeshFaceMaterial","MinEquation","MixOperation","MultiMaterial","isMultiMaterial","MultiplyBlending","MultiplyOperation","NearestMipMapLinearFilter","NearestMipMapNearestFilter","NeverDepth","NeverStencilFunc","NoBlending","NoColors","NoToneMapping","NormalAnimationBlendMode","NormalBlending","NotEqualDepth","NotEqualStencilFunc","NumberKeyframeTrack","Object3D","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","parseImagesAsync","e1","n1","i1","setTexturePath","ObjectSpaceNormalMap","OneFactor","OneMinusDstAlphaFactor","OneMinusDstColorFactor","OneMinusSrcAlphaFactor","OneMinusSrcColorFactor","OrthographicCamera","PCFShadowMap","PCFSoftShadowMap","PMREMGenerator","ParametricGeometry","Particle","ParticleBasicMaterial","ParticleSystem","ParticleSystemMaterial","Path","PerspectiveCamera","Plane","PlaneHelper","PointCloud","PointCloudMaterial","PointLight","PointLightHelper","PolarGridHelper","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","PropertyBinding","PropertyMixer","Quaternion","QuaternionKeyframeTrack","QuaternionLinearInterpolant","REVISION","RGBADepthPacking","RGBAFormat","RGBAIntegerFormat","RGBA_ASTC_10x10_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_BPTC_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGBDEncoding","RGBEEncoding","RGBEFormat","RGBFormat","RGBIntegerFormat","RGBM16Encoding","RGBM7Encoding","RGB_ETC1_Format","RGB_ETC2_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGB_S3TC_DXT1_Format","RGFormat","RGIntegerFormat","Ray","Raycaster","Sprite","setFromCamera","intersectObject","intersectObjects","RectAreaLight","RedFormat","RedIntegerFormat","ReinhardToneMapping","ReplaceStencilOp","ReverseSubtractEquation","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","Scene","SceneUtils","createMultiMaterialObject","detach","ShaderChunk","ShaderLib","Shape","ShapePath","subPaths","currentPath","toShapes","froms","tos","hole","ShapeUtils","ShortType","Skeleton","SkeletonHelper","SkinnedMesh","SmoothShading","Sphere","Spherical","makeSafe","SphericalHarmonics3","SpotLight","SpotLightHelper","SrcAlphaFactor","SrcAlphaSaturateFactor","SrcColorFactor","StaticCopyUsage","StaticDrawUsage","StaticReadUsage","StereoCamera","eyeSep","cameraL","cameraR","_cache","StreamCopyUsage","StreamDrawUsage","StreamReadUsage","StringKeyframeTrack","SubtractEquation","SubtractiveBlending","TOUCH","DOLLY_PAN","DOLLY_ROTATE","TangentSpaceNormalMap","TextGeometry","Texture","TextureLoader","Triangle","TriangleFanDrawMode","TriangleStripDrawMode","TrianglesDrawMode","Uint16Attribute","Uint16BufferAttribute","Uint32Attribute","Uint32BufferAttribute","Uint8Attribute","Uint8BufferAttribute","Uint8ClampedAttribute","Uint8ClampedBufferAttribute","Uniform","UniformsLib","UniformsUtils","UnsignedByteType","UnsignedInt248Type","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedShortType","VSMShadowMap","Vector2","Vector3","Vector4","VectorKeyframeTrack","Vertex","VertexColors","VideoTexture","WebGL1Renderer","WebGLCubeRenderTarget","WebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","WebGLRenderTarget","WebGLRenderTargetCube","WebGLRenderer","WebGLUtils","WireframeHelper","WrapAroundEnding","XHRLoader","ZeroCurvatureEnding","ZeroFactor","ZeroSlopeEnding","ZeroStencilOp","sRGBEncoding"],"version":3,"file":"index.c39c384f.js.map"}